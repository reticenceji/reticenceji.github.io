{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>I\u2019m Reticence Ji. A student in Zhejiang University, Information Security Major. Focus on Linux, Rust, Python, Blockchain and other interesting things. Contact me at reticenceji@qq.com The old notes may be archived since they are too na\u00efve and don't give reference to other articles or blogs. If there is any infringement, please contact me to delete, I am very sorry for that.</p> <p>\u6211\u662f Reticence Ji\uff0c\u4e00\u4e2a\u6d59\u6c5f\u5927\u5b66\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u7684\u5b66\u751f\u3002 \u6211\u559c\u6b22 Linux\uff0cRust\uff0cPython, \u533a\u5757\u94fe\u548c\u5176\u4ed6\u6709\u8da3\u7684\u4e1c\u897f\u3002 \u901a\u8fc7 reticenceji@qq.com \u8054\u7cfb\u6211\u3002 \u8fd9\u91cc\u662f\u6211\u7684\u7b14\u8bb0\uff0c\u6709\u4e00\u4e9b\u8001\u7684\u7b14\u8bb0\u7f3a\u4e4f\u53c2\u8003\u4ef7\u503c\uff0c\u5e76\u4e14\u5bf9\u5176\u4ed6\u6587\u7ae0/\u535a\u5ba2\u7b49\u8d44\u6599\u7684\u5f15\u7528\u6ca1\u6709\u6ce8\u610f\u7ed9\u51fa\u5f15\u7528\u58f0\u660e\u3002\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u6211\u5220\u9664\uff0c\u975e\u5e38\u62b1\u6b49\u3002</p> <p>\u79cd\u4e00\u68f5\u6811\u6700\u597d\u7684\u65f6\u95f4\u662f\u5341\u5e74\u524d\uff0c\u5176\u6b21\u662f\u73b0\u5728\u3002</p>"},{"location":"#_2","title":"\u7f16\u7a0b\u6280\u80fd","text":"<ul> <li>\u8bed\u8a00\uff1aRust &gt; Python, C &gt; Golang &gt; C++, Scala</li> <li>\u9886\u57df\uff1aWeb, OS, Linux Programming, Smart Contract, Client, Static Program Analysis ...</li> </ul>"},{"location":"#_3","title":"\u7f16\u5199\u89c4\u8303","text":"<ul> <li>\u5982\u679c\u6807\u9898\u662f\u4e13\u6709\u540d\u8bcd\uff0c\u53ef\u4ee5\u4f7f\u7528\u82f1\u8bed\u3002\u5426\u5219\u4f7f\u7528\u4e2d\u6587\u3002</li> <li>\u5728\u4e00\u7bc7\u6587\u7ae0\u5185\uff0c\u5c3d\u91cf\u53ea\u4f7f\u7528\u4e2d\u6587\u5b8c\u6210\u4e66\u5199\u3002<ul> <li>\u5bf9\u4e8e\u4e13\u6709\u540d\u8bcd\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u82f1\u8bed/\u4e2d\u6587\uff0c\u901a\u8fc7\u62ec\u53f7\u6ce8\u660e\u5bf9\u5e94\u7684\u4e2d\u6587/\u82f1\u6587\u3002\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\uff0c\u7edf\u4e00\u4f7f\u7528\u82f1\u8bed/\u4e2d\u6587\u6765\u5f15\u7528\u8be5\u540d\u8bcd\u3002</li> <li>\u5bf9\u4e8e\u5f15\u7528\uff0c\u4e0d\u52a0\u9650\u5236\u3002</li> </ul> </li> <li>\u5728\u4e00\u7bc7\u6587\u7ae0\u7684\u6700\u540e\uff0c\u7ed9\u51fa\u53c2\u8003\u94fe\u63a5\u3002</li> </ul>"},{"location":"hidden/202502191511-fbp/","title":"Flow Based Programming - \u4ece\u4e00\u4e2a\u4f8b\u5b50\u5f00\u59cb","text":"<p>\u4ece\u4e00\u4e2a\u6545\u4e8b\u5f00\u59cb\u3002\u516c\u53f8\u5e0c\u671b\u5236\u4f5c\u4e00\u4e2aAI\u7f16\u7a0b\u6846\u67b6\uff0c\u5148\u4ece\u4e00\u4e2aDemo\u5f00\u59cb\uff0cDemo\u5305\u62ec\u4ee5\u4e0b\u7ec4\u4ef6\uff1a</p> <ol> <li>Twitter\u76d1\u63a7\u5668\uff0c\u76d1\u63a7\u4f8b\u5982Trump\u7684\u63a8\u7279\u3002</li> <li>\u7528\u6237\u914d\u7f6e\u7ba1\u7406\u5668\u3002\u4fdd\u5b58\u7528\u6237\u7684\u914d\u7f6e\uff0c\u5982\u7528\u6237\u7684\u79c1\u94a5\uff08\u4f60\u6ca1\u770b\u9519\uff09\uff0c\u7528\u6237\u611f\u5174\u8da3\u7684\u5927V\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u63a8\u7279\uff0c\u627e\u51fa\u6240\u6709\u5173\u6ce8\u7684\u7528\u6237\u3002</li> <li>LLM\u60c5\u7eea\u5206\u6790\u5668\u3002\u4ece\u63a8\u7279\u4e2d\u89e3\u6790\u51fa\u8fd9\u6761\u63a8\u7279\uff0c\u5728\u652f\u6301\u4e70\u5165/\u5356\u51fa\u54ea\u4e9bToken\u3002</li> <li>\u4e70\u5e01\u5668\u3002\u6839\u636e\u7528\u6237\u914d\u7f6e\u3001\u60c5\u7eea\u5206\u6790\uff0c\u5e2e\u7528\u6237\u4e70\u5e01\u3002</li> </ol> <p>\u5927\u6982\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u6d41\u7a0b\uff1a</p> <pre><code>graph TD\n    A[Twitter\u76d1\u63a7\u5668] --&gt; B[\u7528\u6237\u914d\u7f6e\u7ba1\u7406\u5668]\n    A --&gt; C[LLM\u60c5\u7eea\u5206\u6790\u5668]\n    B --&gt; D[\u4e70\u5e01\u5668]\n    C --&gt; D\n\n    style A fill:#FF6B6B,color:white\n    style B fill:#4ECDC4,color:white\n    style C fill:#FFD93D,color:black\n    style D fill:#6C5CE7,color:white\n</code></pre> <p>\u5e0c\u671b\u63d0\u4f9b\u7684\u80fd\u529b\u662f\uff0c\u5206\u522b\u5b9e\u73b0\u8fd94\u4e2a\u7ec4\u4ef6\uff0c\u7528\u4e00\u4e2a\u6267\u884c\u6846\u67b6\uff0c\u901a\u8fc7\u914d\u7f6e\u81ea\u52a8\u6267\u884c\u4ed6\u4eec\u3002\u800c\u6211\u5c31\u5728\u7f16\u5199\u8fd9\u4e2a\u6267\u884c\u6846\u67b6\u3002</p> <ul> <li>\u63a8\u7279\u76d1\u63a7\u5668\uff1a\u722c\u866b+\u6d88\u606f\u961f\u5217\uff08\u5982RabbitMQ\uff09\uff0c\u4e00\u4e2aProducer\u7684\u89d2\u8272\u3002</li> <li>\u7528\u6237\u914d\u7f6e\u7ba1\u7406\u5668\uff1ainput \u6d88\u606f\uff0c output \u7528\u6237\u914d\u7f6e\u3002\u505a\u6210\u4e00\u4e2aRPC\u3002\u53c2\u6570\u90fd\u901a\u8fc7JSON\u4f20\u9012\u3002</li> <li>LLM\u60c5\u7eea\uff1ainput \u6d88\u606f\uff0c output \u60c5\u7eea\u3002\u505a\u6210\u4e00\u4e2aRPC\u3002</li> <li>\u4e70\u5e01\u5668\uff1ainput \u7528\u6237\u914d\u7f6e+\u60c5\u7eea\uff0c output \u6210\u529f\u4e0e\u5426\u3002\u505a\u6210\u4e00\u4e2aRPC\u3002</li> </ul> <p>\u6240\u4ee5\u6267\u884c\u6846\u67b6\u4e5f\u5f88\u81ea\u7136\u3002\u9996\u5148\u8bbe\u8ba1\u4e00\u4e2aDSL\u6765\u8ba9\u7528\u6237\u5b9a\u4e49\u6d41\u7a0b\u3001\u8282\u70b9\u8f93\u5165\u8f93\u51fa\uff0c\u53ef\u4ee5\u57fa\u4e8eYAML\u4fee\u6539\u3002\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u90fd\u5355\u72ec\u8d77\u4e00\u4e2aTask\uff08\u7ebf\u7a0b/\u8fdb\u7a0b/\u534f\u7a0b\uff09\u3002\u7ec4\u4ef6\u4e4b\u95f4\uff0c\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u5185\u7f6e\u7684\u6d88\u606f\u961f\u5217\u4f20\u9012\u6d88\u606f\u3002</p> <p>\u4f8b\u5982\uff1a</p> <ul> <li>Producer: \u4e0d\u505c\u7684\u76d1\u542cRabbitMQ\uff0c\u628a\u6d88\u606f\u53d1\u9001\u5230 \u7528\u6237\u914d\u7f6e\u548cLLM\u7684\u6d88\u606f\u961f\u5217\u3002</li> <li>RPC\uff1a\u4e00\u65e6\u6536\u5230\u6d88\u606f\uff0c\u53d1\u8d77RPC\u8bf7\u6c42\uff0c\u5c06\u6d88\u606f\u518d\u53d1\u9001\u7ed9\u540e\u9762\u3002</li> </ul> <p>\u806a\u660e\u7684\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u4e00\u5b9a\u53d1\u73b0\u4e86\u95ee\u9898\uff1a</p> <ol> <li>\u4e70\u5e01\u5668\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u6309\u7167\u4e4b\u524d\u7684\u505a\u6cd5\u5c82\u4e0d\u662f\u6536\u5230\u4efb\u610f\u4e00\u4e2a\u5c31\u8981\u53d1\u8bf7\u6c42\u4e86\uff0c\u53c2\u6570\u90fd\u586b\u4e0d\u4e0a\u3002\u6211\u7684\u505a\u6cd5\u662f\uff0c\u6d88\u606f\u961f\u5217\u4e2d\u4f20\u9012\u7684\u6d88\u606f\u662f\u4e00\u4e2a\u5f15\u7528\uff08Rust: <code>Arc&lt;Mutex&lt;Message&gt;&gt;</code>\uff09\uff0c\u79f0\u4e3a <code>Context</code>\u3002<ul> <li>\u5982\u679c\u4e70\u5e01\u5668\u6709\u4e24\u4e2a\u6d88\u606fReciver\uff0c\u5982\u679c\u53d1\u73b0\u5176\u4e2d\u6536\u5230\u7684\u6d88\u606f\u4e0d\u5b8c\u6574\uff0c\u8bf4\u660e\u4f9d\u8d56\u7684\u7ec4\u4ef6\u8fd8\u6ca1\u6267\u884c\u5b8c\u6210\u3002</li> <li>Twitter\u76d1\u63a7\u5668\u521b\u5efa\u7684<code>Context</code>\uff0c\u518d\u7ecf\u8fc7\u7528\u6237\u914d\u7f6e\u7ba1\u7406\u5668\u548c LLM\u60c5\u7eea\u90fd\u5904\u7406\u540e\uff0c\u5c31\u5b8c\u6574\u4e86\u3002</li> </ul> </li> <li>\u5982\u679c\u6d41\u7a0b\u662f\u4e00\u4e2a\u73af\uff0c\u5c82\u4e0d\u662f\u6267\u884c\u4e0d\u5b8c\uff1f<ul> <li>\u53ef\u4ee5\u5bf9DSL\u8fdb\u884c\u68c0\u67e5\uff0c\u8ba9\u7528\u6237\u5b9a\u4e49\u7684\u6d41\u7a0b\u56fe\u5fc5\u987b\u662f\u6709\u5411\u65e0\u73af\u56fe\u3002</li> </ul> </li> </ol>"},{"location":"hidden/202502191511-fbp/#flow-based-programming","title":"Flow-based Programming","text":"<p>\u4e0a\u9762\u4ecb\u7ecd\u7684\u80cc\u666f\u6545\u4e8b\uff0c\u5bf9\u5e94\u7684\u7f16\u7a0b\u6a21\u578b\u5c31\u662fFlow-based Programming\u3002\u5b83\u5305\u62ec\u51e0\u4e2a\u57fa\u7840\u5143\u7d20\uff1a</p> <ul> <li>\u7ec4\u4ef6\uff08Component\uff09\uff1a\u72ec\u7acb\u7684\u529f\u80fd\u5355\u5143\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f\u4e70\u5e01\u5668\u3001LLM\u60c5\u7eea\u5206\u6790\u7b49\u3002</li> <li>\u8fde\u63a5\u5668\uff08Connection\uff09\uff1a\u5e26\u7c7b\u578b\u7684\u901a\u4fe1\u901a\u9053\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7528\u4e86\u7f16\u7a0b\u8bed\u8a00\u5185\u7f6e\u7684\u6d88\u606f\u961f\u5217\u3002</li> <li>\u4fe1\u606f\u5305\uff08Information Packet\uff0cIP\uff09\uff1a\u6570\u636e\u4f20\u9012\u5355\u5143\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7528\u4e86JSON\u3002</li> <li>\u7f51\u7edc\u5b9a\u4e49\uff08Network Definition\uff09\uff1a\u7ec4\u4ef6\u8fde\u63a5\u62d3\u6251\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f\u90a3\u5f20\u56fe\u3002</li> </ul> <p>\u5b83\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u5b83\u5929\u7136\u662f\u5f02\u6b65\u6d88\u606f\u9a71\u52a8\u7684\uff0c\u7ec4\u4ef6\u9ed1\u76d2\u5316\u677e\u8026\u5408\u3002\u65e0\u5171\u4eab\u5185\u5b58\u3002\u9002\u5408\u9700\u8981\u7075\u6d3b\u91cd\u7ec4\u5904\u7406\u6d41\u7a0b\u7684\u7cfb\u7edf\uff0c\u53ef\u89c6\u5316\u7f16\u7a0b\u9700\u6c42\u5f3a\u70c8\u7684\u9879\u76ee\u3002\u4e0d\u9002\u5408\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002</p> <p>\u6709\u6ca1\u6709\u89c9\u5f97\u5b83\u5f88\u50cf\u201c\u4f4e\u4ee3\u7801\u5f00\u53d1\u5e73\u53f0\u201d\u3002</p>"},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/","title":"\u533a\u5757\u94fe\u6b3a\u8bc8","text":"","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_2","title":"\u80cc\u666f","text":"<p>\u6b3a\u8bc8\u8005\u901a\u8fc7\u521b\u5efa\u5e76\u63a8\u5e7f\u65e8\u5728\u7a83\u53d6\u4ea4\u6613\u8005\u8d44\u4ea7\u7684\u4ee3\u5e01\uff0c\u8bf1\u4f7f\u6295\u8d44\u8005\u5c06\u5b9d\u8d35\u7684\u8d44\u4ea7\uff08\u4f8b\u5982\u4ee5\u592a\u574aETH\uff09\u6295\u5165\u5230\u6240\u8c13\u7684\u6d41\u52a8\u6027\u6c60\u4e2d\u6362\u53d6\u8fd9\u4e9b\u6b3a\u8bc8\u6027\u4ee3\u5e01\uff0c\u7ed3\u679c\u5374\u53d1\u73b0\u8fd9\u4e9b\u4ee3\u5e01\u65e0\u6cd5\u518d\u5151\u6362\u56de\u539f\u59cb\u8d44\u4ea7\u3002</p> <p>\u6839\u636eFederico Cernera\u5728\u5176\u7814\u7a76\u6587\u7ae0\u4e2d\u63d0\u4f9b\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u8fd9\u7c7b\u6b3a\u8bc8\u884c\u4e3a\u6d89\u53ca\u7684\u6076\u610f\u884c\u4e3a\u8005\u5df2\u8d85\u8fc7\u6570\u5341\u4e07\u4eba\u6b21\uff0c\u6d89\u53ca\u7684\u8d44\u91d1\u8f6c\u79fb\u603b\u989d\u8fbe\u5230\u60ca\u4eba\u768410\u4ebf\u7f8e\u5143\u4ee5\u4e0a\u3002\u8fd9\u4e0d\u4ec5\u635f\u5bb3\u4e86\u4ea4\u6613\u8005\u7684\u8d22\u4ea7\u5b89\u5168\uff0c\u66f4\u5bf9\u6574\u4e2a\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\u751f\u6001\u7cfb\u7edf\u7684\u4fe1\u8a89\u548c\u7a33\u5b9a\u6027\u9020\u6210\u4e86\u4e25\u91cd\u7684\u8d1f\u9762\u5f71\u54cd\u3002</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_3","title":"\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u68c0\u6d4b","text":"","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#xaddress","title":"XAddress","text":"<p>\u5b9a\u4e492.1 \u5b9a\u4e49 \\(\\text{XAddressSet}(token)\\) \u662f\u9488\u5bf9 \u67d0 Token \u7684\u5173\u8054\u53ef\u7591\u5730\u5740\u96c6\u5408 \uff0c\u53ef\u7591\u5730\u5740\u662f\u6307\u8fd9\u4e9b\u5730\u5740\u4e0e\u9879\u76ee\u65b9\u76f8\u5173\u8054\u3002\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\u6269\u5c55\u53ef\u7591\u5730\u5740\u96c6\u5408\u3002</p> <ol> <li>\u76d1\u63a7 \u5408\u7ea6\u7684\u521b\u5efa\u884c\u4e3a\uff0c\u5bf9\u65b0\u521b\u5efa\u7684 \\(token\\) \u5408\u7ea6\uff0c</li> </ol> \\[ \\text{XAddressSet}(token) \\leftarrow \\{token.creator\\} \\cup token.hardCodeAddressSet \\] <ol> <li>\u76d1\u63a7\u53ef\u7591\u5730\u5740\u96c6\u5408\u4e2d\u7684\u5730\u5740\u5bf9 \\(token\\) \u5408\u7ea6\u7684\u8c03\u7528\u884c\u4e3a\uff0c\u4f7f\u7528 Calldata \u4e2d\u5305\u542b\u7684\u5730\u5740\u6269\u5c55\u53ef\u7591\u5730\u5740\u96c6\u5408</li> </ol> \\[ \\text{XAddressSet}(token) \\leftarrow \\text{XAddressSet}(token) \\cup \\{addr|addr \\in tx.calldata, tx.origin \\in \\text{XAddressSet}(token)\\} \\] <p>[!Warning] \u5b9e\u9645\u4e0a\uff0c\\(XAddress\\) \u4e2d\u9664\u4e86EOA\uff0c\u4e5f\u6709\u53ef\u80fd\u6709\u5408\u7ea6\uff0c\u7b2c\u4e8c\u79cd\u505a\u6cd5\u53ef\u80fd\u4e0d\u53ef\u4ee5\u5b8c\u6574\u7684\u6269\u5c55X Address\uff0c\u9664\u975e \u53d1\u751f\u5de8\u5927\u4ea4\u6613\u6ce2\u52a8\u7684\u5757 \u548c \u53ef\u7591\u5408\u7ea6\u7684\u8c03\u7528 \u5728\u4e00\u8d77\u53d1\u751f\uff0c\u8fd8\u597d\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u5e38\u89c1\u7684\u3002</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#transaction-parsing","title":"Transaction Parsing","text":"<p>\u5b9a\u4e49Swap \u53c2\u8003Sway\u7684 DeFiRanger</p> <p>\u5b9a\u4e49Trace</p> <p>EVM\u4e0a\u7684tx trace\u662f\u4e00\u4e2a\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u8c03\u7528 \\(inv\\)\u3002\u4e00\u4e2a\u8c03\u7528\u53ef\u80fd\u4f1a\u53d1\u51fa\u65e5\u5fd7\uff0c\u8bb0\u4e3a\\(inv.logs\\)\u3002\u5bf9\u4ea4\u6613\u7684\u884c\u4e3a\u8fdb\u884c\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2aSwap\u884c\u4e3a\u5bf9\u5e94\u7684\u8c03\u7528\u3002\u6211\u4eec\u5b9a\u4e49</p> <p>\u5b9a\u4e492.2.1 \u6211\u4eec\u5c06\u4e00\u4e2a\u8c03\u7528\\(inv\\)\u5728tx trace tree\u4e2d\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\u8bb0\u4e3a\\(Participants(inv)\\)\uff0c\u5373\uff1a</p> \\[ Participants(inv) \\leftarrow \\{i| i \\text{ is ancestor of } inv\\} \\] <p>\u5b9a\u4e492.2.2 \u6211\u4eec\u5c06\u4e24\u4e2a\u8c03\u7528\\(inv_a, inv_b\\)\u5728tx trace tree\u4e2d\uff0c\u540c\u65f6\u4e3a\\(inv_a\\)\u7684\u5b50\u5b59\u8282\u70b9\u548c\\(inv_b\\)\u7684\u7236\u8282\u70b9\u7684\u8282\u70b9\u8bb0\u4e3a\\(Intermediary(inv_a, inv_b)\\)\uff0c\u5373</p> \\[ Intermediary(inv_a, inv_b) \\leftarrow \\{i|i \\text{ is ancestor of }inv_b, i \\text{ is sub of } inv_a\\} \\] <p>\u5b9a\u4e492.2.3 \u6211\u4eec\u5c06\u4e00\u4e2aSwap\u884c\u4e3a\u6d89\u53ca\u5230\u7684\u6240\u6709\u53c2\u4e0e\u8005\u5b9a\u4e49\u4e3a</p> \\[ SwapParticipants(swap) \\leftarrow Participants(swap.inv) \\cup \\bigcup_{inv_t.callee = swap.token} Intermediary(swap.inv, inv_t)  \\] <p>\u5982\u56fe\u6240\u793a\uff0c\u5bf9\u4e8eline=7\u7684Swap\u884c\u4e3a\uff0c\u7eff\u8272\u548c\u7ea2\u8272\u6807\u8bb0\u7684\u8c03\u7528\u5373\\(SwapParicipants(swap)\\)\u3002</p> <p></p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#price","title":"Price","text":"<p>\u5b9a\u4e492.3.1 \u5b9a\u4e49\u4e00\u4e2a\u6c60\u5b50\u4e2d\uff0cToken\u5931\u53bb\u4ef7\u503c\u7684\u72b6\u6001\u4e3a</p> \\[ IsPriceCrashed(pool, token) = (\\frac {BalanceAfterTx(pool, token)}{BalanceBeforeTx(pool, token)} &lt; limit\\%) \\]","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#identify-real-recipients","title":"Identify Real Recipients","text":"<p>\u83b7\u5229\u8005 Recipients\uff1a\u6307\u7684\u662f\u4ece Pool \u6362\u51fa\u7684 Token \u7684\u6700\u7ec8\u6d41\u5411\u3002\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662f Router\uff0c\u4ece Pool \u6362\u51fa\u7684 Token \u4f1a\u5148\u53d1\u9001\u7ed9 Router\uff0c\u518d\u53d1\u9001\u5230\u5411 Router \u53d1\u8d77\u4ea4\u6613\u7684\u8d26\u6237\u3002</p> <ul> <li>\\(AB\\) : \u67d0 Address A \u5230\u53e6\u4e00\u4e2a Address B \u7684Transfer </li> <li>\\(in(B)\\) : \u6240\u6709 Address \u5411 Address B \u53d1\u8d77\u7684 Transfer</li> <li>\\(out(B)\\) : Address B \u6240\u6709\u53d1\u8d77\u7684 Transfer \u7684\u5bf9\u8c61</li> <li>\\(flow(AB, C)\\) : AB \u7684 Transfer \u6709\u591a\u5c11 \u76f4\u63a5 \u6d41\u5411\u4e86 C</li> </ul> \\[  flow(AB,C) = \\left\\{\\begin{matrix}     BC.amount \\times \\frac{AB.amount}{\\sum out(B)} (\\sum in(B) \\leq \\sum out(B)) \\\\     BC.amount \\times \\frac{AB.amount}{\\sum in(B)}, (\\sum in(B) \\geq \\sum out(B))   \\end{matrix}\\right.  \\] \\[  flow(AB,B) = \\left\\{\\begin{matrix}     0, (\\sum in(B) \\leq \\sum out(B)) \\\\     AB.amount \\times (1- \\frac{\\sum in(B)}{\\sum out(B)}), (\\sum in(B) \\geq \\sum out(B))   \\end{matrix}\\right.  \\] <p>  \u6216\u8005\u8bf4\uff0c\u6211\u4eec\u8ba4\u4e3a</p> <ol> <li>\u5982\u679c\u8f6c\u51fa\u5927\u4e8e\u8f6c\u5165\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f6c\u51fa\u53bb\u7528\u5230\u4e86\u5730\u5740\u539f\u6709\u7684\u94b1\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u5730\u5740\u662f\u5148\u628a\u4ea4\u6613\u91cc\u8f6c\u5165\u7684\u94b1\u8f6c\u4e86\u51fa\u53bb\uff0c\u518d\u5269\u4e0b\u7684\u7528\u81ea\u5df1\u7684\u94b1\u8865\u5145\u3002</li> <li> <p>\u5982\u679c\u8f6c\u5165\u5927\u4e8e\u8f6c\u51fa\uff0c\u6211\u4eec\u8ba4\u4e3a\u5730\u5740\u628a\u5269\u4e0b\u7684\u94b1\u541e\u4e86\u3002</p> </li> <li> <p>\\(Flow(AB, C)\\) : AB \u7684 Transfer \u6709\u591a\u5c11 \u6700\u7ec8 \u6d41\u5411\u4e86 C \uff08\u8fd9\u4e2a\u516c\u5f0f\u4e0d\u592a\u5bf9\uff01\u611f\u89c9\u5f97\u7528\u5f52\u7eb3\u6cd5\u5b9a\u4e49\uff09</p> </li> </ol> \\[ flow(AB) = \\sum_{Mid} flow(AB, Mid) \\] \\[ Flow(AB,C) = flow(\\sum _{i=0}^{\\inf} flow(AB), C) \\] <p>[!Warning] \u8fd9\u79cd\u68c0\u6d4b Real Participants \u7684\u505a\u6cd5\uff0c\u53ea\u80fd\u53d1\u73b0\u76f4\u63a5\u7684 Transfer\u3002\u5982\u679c\u518d\u8fdb\u4e00\u6b65\u7684\u5bf9 Token \u8fdb\u884c wrap / swap \u64cd\u4f5c\uff0c\u6d41\u5411\u5c31\u65ad\u4e86\uff0c\u76ee\u524d\u5bf9 Native Token Wrap\u505a\u4e86\u7279\u6b8a\u5904\u7406\u3002\u4e0d\u8fc7 rug pull \u5e94\u8be5\u4e0d\u4f1a\u8fd9\u4e48\u590d\u6742\u3002</p> <ul> <li>\u627e\u5230\u4e86\u4e00\u4e2a rug \u4e4b\u540e\u518dswap\u7684tx</li> <li>\u8d44\u91d1\u6d41\u5206\u6790\u9519\u8bef\uff0c\u539f\u56e0\u662f\u8282\u70b9\u7ed9delegate call\u5e26\u4e0a\u4e86value\u3002tx</li> </ul> <p>\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2aswap/remove liquidity\u7684\u771f\u6b63Recipient\uff0c\u6211\u4eec\u5b9a\u4e49\u4e3a</p> \\[ Recipient(action, token) = \\{R | Flow(action.pool \\rightarrow action.recipient, R) \\}&gt;0 \\] <p>\u76f8\u5e94\u7684\uff0c\u5176\u771f\u6b63Receive \u7684Amount \u6211\u4eec\u5b9a\u4e49\u4e3a</p> \\[ RecipientAmount(action, token, addr) = Flow(action.pool \\rightarrow action.recipient, addr) \\] <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u6211\u4eec\u8bb0\\(Flow(action.pool \\rightarrow action.recipient,  action.recipient)\\) \u4e3a \\(Direct Flow(action.pool)\\)\u3002</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#detection","title":"Detection","text":"<p>Rug Pull Tx&amp;Token \u7684\u8bc6\u522b\uff1a</p> <ul> <li>\u53c2\u4e0e\u8005\u662fToken\u7684\u7591\u4f3c\u9879\u76ee\u65b9\u5730\u5740\uff0c\u5e76\u4e14\u6c60\u5b50\u7684Token\u4ef7\u683c\u66b4\u8dcc</li> </ul> \\[ IsRugPull(action) \\leftarrow \\exists token \\in action.tokens, Participant(action) \\cap XAddressSet(token) \\neq \\emptyset \\wedge IsPriceCrashed(action.pool, token)  \\] <ul> <li>\u83b7\u5229\u8005\u662fToken\u7684\u7591\u4f3c\u9879\u76ee\u65b9\u5730\u5740\uff0c\u5e76\u4e14\u6c60\u5b50\u7684Token\u4ef7\u683c\u66b4\u8dcc\uff0c\u5e76\u4e14\u53ef\u7591\u83b7\u5229\u8005\u83b7\u5229\u5360\u6bd4\u8d85\u8fc7\u9608\u503c\uff08\u83b7\u5229\u8005\u53ef\u7591\u662f\u5e38\u89c1\u7684\uff0c\u5408\u7ea6\u90e8\u7f72\u8005\u53ef\u80fd\u4f1a\u52a0\u5165\u624b\u7eed\u8d39\u673a\u5236\u3002\u6240\u4ee5\uff0c\u52a0\u5165\u53ef\u7591\u83b7\u5229\u8005\u83b7\u5229\u5360\u6bd4\u7684threshold\uff09\u3002</li> </ul> \\[ IsRugPull(action) \\leftarrow \\exists token \\in action.tokens, Recepient(action) \\cap XAddressSet(token) \\neq \\emptyset \\wedge IsPriceCrashed(action.pool, token) \\wedge IsRecipientExceed(action) $$ $$ IsRecipientExceed(action) = \\frac {\\sum_{addr | addr \\in XAddressSet(token)} RecipientAmount(action, token, addr)}{Flow()} &gt; limit\\% \\] <p>\u603b\u4f53\u601d\u8def\u5982\u56fe\u6240\u793a\uff1a</p> <p></p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#prediction","title":"Prediction","text":"<p>\u901a\u8fc7\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u7684\u6848\u4f8b\u8fdb\u884c\u5206\u6790\uff0c\u6211\u4eec\u63d0\u53d6\u4e86\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u7684\u6a21\u5f0f\uff0c\u8fdb\u800c\u63d0\u51fa\u4e86\u6697\u793a\u4ee3\u5e01\u53ef\u80fd\u4f1a\u5728\u4e4b\u540e\u8fdb\u884c\u6b3a\u8bc8\u7684\u56e0\u7d20\uff1a</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_4","title":"\u4ee3\u5e01\u90e8\u7f72\u8005\u5206\u6790","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u6b3a\u8bc8\u4ee3\u5e01\u7684\u90e8\u7f72\u8005\u7684\u884c\u4e3a\u5b58\u5728\u4e00\u4e9b\u6a21\u5f0f\uff1a</p> <ol> <li>\u6b3a\u8bc8\u4ee3\u5e01\u90e8\u7f72\u8005\u53ef\u80fd\u4f1a\u5c06\u6b3a\u8bc8\u7684\u6536\u76ca\u8f6c\u79fb\u5230\u65b0\u7684\u5730\u5740\uff0c\u518d\u505a\u8fdb\u4e00\u6b65\u7684\u6b3a\u8bc8\u3002</li> <li>\u82e5\u5e72\u4e2a\u6b3a\u8bc8\u4ee3\u5e01\u90e8\u7f72\u8005\u7684\u521d\u59cb\u8d44\u91d1\uff0c\u53ef\u80fd\u6765\u6e90\u4e8e\u540c\u4e00\u4e2a\u5730\u5740\u3002</li> <li>\u6b3a\u8bc8\u4ee3\u5e01\u7684\u90e8\u7f72\u8005\u5f88\u53ef\u80fd\u4f1a\u5229\u7528\u6df7\u5e01\u670d\u52a1\u6765\u9003\u907f\u76d1\u7ba1\u3002</li> <li>\u6b3a\u8bc8\u4ee3\u5e01\u7684\u90e8\u7f72\u8005\u53ef\u80fd\u4f1a\u90e8\u7f72\u4e0d\u6b62\u4e00\u4e2a\u4ee3\u5e01\u3002</li> </ol> <p>\u4ee5\u4e0a\u505a\u6cd5\u7684\u539f\u56e0\u662f\u4e3a\u4e86\uff0c\u8ba9\u4ee3\u5e01\u6b3a\u8bc8\u53ef\u4ee5\u89c4\u6a21\u5316\u3001\u81ea\u52a8\u5316\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u5927\u7684\u6536\u76ca\uff1b\u4ee5\u53ca\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9003\u907f\u76d1\u7ba1\u3002</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_5","title":"\u4ee3\u5e01\u5206\u5e03\u5206\u6790","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u6b3a\u8bc8\u4ee3\u5e01\u7684\u4ee3\u5e01\u5206\u5e03\u5b58\u5728\u4e00\u4e9b\u7279\u5f81\uff1a</p> <ol> <li>\u5bf9\u4e8e\u79fb\u9664\u6d41\u52a8\u6027\u7684\u6b3a\u8bc8\u65b9\u5f0f\uff0c\u4ea4\u6613\u5bf9\u5f88\u53ef\u80fd\u96c6\u4e2d\u5728\u9879\u76ee\u65b9\u624b\u4e2d\u3002</li> <li>\u5bf9\u4e8e\u4ea4\u6362\u4ee3\u5e01\u7684\u6b3a\u8bc8\u65b9\u6cd5\uff0c\u6b3a\u8bc8\u4ee3\u5e01\u5f88\u53ef\u80fd\u96c6\u4e2d\u5728\u9879\u76ee\u65b9\u624b\u4e2d\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_6","title":"\u4ee3\u5e01\u5408\u7ea6\u5206\u6790","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u6b3a\u8bc8\u4ee3\u5e01\u7684\u4ee3\u5e01\u5408\u7ea6\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u7279\u5f81\uff1a</p> <ol> <li>\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u4f1a\u8fdb\u884c\u5c11\u91cf\u7684\u4fee\u6539\uff08\u5982\u4fee\u6539\u67d0\u4e9b\u5e38\u91cf\uff09\uff0c\u800c\u5728\u94fe\u4e0a\u5927\u89c4\u6a21\u7684\u90e8\u7f72\u3002</li> <li>\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u53ef\u80fd\u4f1a\u9690\u85cf\u540e\u95e8\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#_7","title":"\u6b3a\u8bc8\u4ee3\u5e01\u98ce\u63a7\u6a21\u578b","text":"<p>\u57fa\u4e8e\u6211\u4eec\u5bf9\u6b3a\u8bc8\u4ee3\u5e01\u7684\u4ee3\u5e01\u90e8\u7f72\u8005\u3001\u4ee3\u5e01\u5206\u5e03\u548c\u4ee3\u5e01\u5408\u7ea6\u7684\u5206\u6790\u7ed3\u679c\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u98ce\u63a7\u6a21\u578b\uff0c\u5c06\u8fd9\u4e9b\u56e0\u7d20\u7efc\u5408\u8003\u91cf\uff0c\u4ee5\u5728\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u53d1\u751f\u4e4b\u524d\uff0c\u8fdb\u884c\u544a\u8b66\u3002</p> <p>\u6211\u4eec\u9009\u7528\u4e86\u68af\u5ea6\u63d0\u5347\u51b3\u7b56\u6811(GBDT)\u5b9e\u73b0\u7684Rug Pull\u68c0\u6d4b\u6a21\u578b\u3002\u6a21\u578b\u4f7f\u7528\u4e8615\u4e2a\u5173\u952e\u7279\u5f81\uff0c\u5305\u62ec\uff1a......\u8d44\u91d1\u6d41\u56fe\u7684\u4e00\u4e9b\u7cfb\u6570\uff0clike \u5165\u5ea6\u51fa\u5ea6...</p> <p>\u8fbe\u6210\u7684\u6548\u679c\u597d\u7684\u6709\u70b9\u8d85\u51fa\u9884\u671f\u3002\u6dfb\u52a0\u4e86\u4e00\u4e9b\u7279\u5f81\uff0c\u4fee\u590d\u4e86\u4e00\u4e9bbug\u4e4b\u540e\uff0c\u6548\u679c\u6bd4\u4e4b\u524d\u8fd8\u8981\u597d...</p> <p>F1 Score= 0.97</p> <p></p> <p>\u624b\u5de5\u8d44\u91d1\u6d41\u5206\u6790\uff1a</p> <p></p> <ol> <li>\u8bef\u533a\uff1aRugPull Creator\u53ef\u80fd\u5148\u8f6c\u79fb\u8d44\u91d1\uff0c\u518dRugPull\u3002</li> </ol> <pre><code>type Attributes {\n    pool_add_lp_count int  // dynamic\n    lp_x_distribution int // dynamic\n    token_x_distribution int  // dynamic\n    token_creator_nonce int\n\n    token_hash_is_rug bool\n    token_creator_is_rug bool\n    token_creator_funder_is_rug bool\n    has_mixing_tag bool\n    has_backdoor bool\n}\n</code></pre>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#implementation","title":"Implementation","text":"<p>\u7cfb\u7edf\u67b6\u6784\uff1a</p> <p></p> <p></p> <p>Block Push Service \u53c2\u8003\u6587\u732e: https://arxiv.org/pdf/2005.08278</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#case-study","title":"Case Study","text":"<p>\u5404\u79cd\u5404\u6837\u7684Rug Pull Token &amp; Tx\uff1a</p> <ol> <li>\u7279\u6b8a\u7684\u638f\u7a7a\u624b\u7eed\u8d39\u7684\u624b\u6cd5\uff1aGameGenToken, 0x6a16786b96c61ba72502b51064b5dcb2bfb62beb710b0ae672eec7ae1d8f179f</li> <li>Creator\u4e0d\u76f4\u63a5\u51fa\u624b\uff0c\u800c\u662f\u501f\u52a9\u4e8e\u5c0f\u53f7\u8fdb\u884cRugpull\u3002\u4f8b\u59820xc19f\uff0c\u8f6c\u8d26\u7ed90xd24a\uff0c\u8ba9\u4ed6\u53bb\u6c60\u5b50\u4ea4\u6613\u3002</li> <li>\u540e\u95e8TransferFrom\uff0ce.g. tx</li> <li>https://app.blocksec.com/explorer/tx/eth/0xec96c0bb3ece63de4d4991f339ab6e6b504c54fdd50963067d224c4daf1eb86a/ \u8fd9\u5230\u5e95\u7b97\u4e0d\u7b97 Rug Pull \uff0c\u53cd\u590d\u4ea4\u6613\u628aToken\u79ef\u7d2f\u7684\u624b\u7eed\u8d39\u638f\u7a7a\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#evaluation","title":"Evaluation","text":"<p>Detection</p> <ul> <li> TokenScout: Early Detection of Ethereum Scam Tokens via Temporal Graph Learning \u7684\u6570\u636e\u96c6\u8dd1\u4e00\u904d\uff0c\u6d4bFN</li> <li> 7\u65e5\u6570\u636e</li> <li> \u5386\u53f2\u6570\u636e https://github.com/Dianxiang111/Rug-Pull-Dataset</li> </ul>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#tokenscout","title":"TokenScout \u6570\u636e\u96c6","text":"<p>\u57281500,0000-1520,0000\u4e2d\uff0c\u6570\u636e\u96c6\u5305\u542b\u4e86441\u4e2aRug Pull Token\u3002\u7ecf\u8fc7\u4e86\u65e0Transfer\u3001\u65e0Pool\u7684\u7b5b\u9009\u4e4b\u540e\uff0c\u53ea\u5269\u4e0b\u4e8667\u4e2aToken\u3002</p> <p>\u5176\u4e2d44\u4e2a\u88abDetector\u53d1\u73b0\u3002\u5269\u4e0b23\u4e2a\u6ca1\u6709\u53d1\u73b0\u7684\uff1a</p> <ol> <li>1\u4e2a\u5e94\u8be5\u662f\u6570\u636e\u96c6\u7684\u95ee\u9898\uff0c\u6211\u89c9\u5f97\u4e0d\u662fRug Pull\u3002</li> <li>3\u4e2a\u662f\u6682\u65f6\u8fd8\u6ca1\u6709\u68c0\u6d4b\u5230\uff0c\u518d\u7ee7\u7eed\u8dd1\u53ef\u4ee5\u68c0\u6d4b\u5230\u3002\u65f6\u95f4\u8de8\u5ea6\u5f88\u5927\u3002\u4e0d\u7b97\u662f\u201cOne Day Rugpull\u201d</li> <li>19\u4e2a\u662f\u5bf9Contract Selector\u7684\u8bc6\u522b\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6ca1\u6709\u53d1\u73b0Token\u662fERC20\u3002\u4ed6\u4eec\u7684\u5408\u7ea6\u90fd\u662f\u4e00\u6837\u7684TokenMintERC20Token v0.5.0+commit.1d4f565a\u3002\u73b0\u5728\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\u505a\u4e86\u4fee\u590d\uff0cRug Pull\u7684\u6a21\u5f0f\u662f\u7b26\u5408Pattern\u7684\uff08\u5168\u90fd\u662fCreator Rugpull\uff09\uff0c\u91cd\u65b0\u8dd1\u53ef\u4ee5\u68c0\u6d4b\u5230\u3002</li> </ol> <pre><code>PUSH4 0x06fdde03\nDUP2\nEQ\nPUSH2 0x00be\nJUMPI\n</code></pre> <p>\u6240\u4ee5\u6570\u636e\u96c6\u5185\u6709Pool\u6709Transfer\u7684\uff0c\u771f\u6b63Rug Pull\u7684Token\uff0c\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5230\u3002\u68c0\u6d4b\u5230\u768444\u4e2aToken\u7684\u9884\u6d4b\u7ed3\u679c\u662f36/44\u3002</p> <p>\u5728Block Range 1500,0000-16730073\u4e2d\uff0cTokenScout\u6570\u636e\u96c6\u5305\u542b\u4e863245\u4e2aRug Pull Token\u3002\u7ecf\u8fc7\u4e86\u65e0Transfer\u3001\u65e0Pool\u7684\u7b5b\u9009\u4e4b\u540e\uff0c\u53ea\u5269\u4e0b\u4e86795\u4e2aToken\u3002\u4eba\u5de5\u53c8\u7b5b\u9009\u51fa\u4e86\u5176\u4e2d\u76849\u4e2aFP\uff0c\u8fd8\u5269786\u4e2aToken\u3002</p> <p>\u5728\u533a\u95f4\u5185\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u7684RugPull Token\u6709 57107 \u4e2a\uff0c\u5176\u4e2d\u7684\u9884\u6d4b\u7ed3\u679c\u662f 48875/57107=85.6%\u3002\u5728Token Scout\u7684786\u4e2aToken\u4e2d\uff0c\u6709780\u4e2a\u88ab\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u30024\u4e2a\u6211\u4e0d\u592a\u786e\u5b9a\u662f\u4e0d\u662fRug Pull\uff0c2\u4e2a\u786e\u5b9e\u662f\uff0c\u611f\u89c9\u4e5f\u662f\u80fd\u68c0\u6d4b\u5230\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u9057\u6f0f\u4e86\u3002</p> <p></p> <p>TL;DR: </p> <ol> <li>\u9884\u6d4b\u53ec\u56de\u7387\uff1a48875/57113=85.58%\u3002</li> <li>\u68c0\u6d4b\u53ec\u56de\u7387\uff1a57107/57113=99.99%\u3002</li> <li>TokenScout\u68c0\u6d4b\u53ec\u56de\u7387\uff1a786/57113=1.38%\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#address-cluster","title":"Address Cluster","text":"","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#method","title":"Method","text":"<p>\u76f4\u63a5\u805a\u7c7b\uff1a</p> <ul> <li>\u94fe\u4e0a\uff1a<ul> <li>Deposit Reuse\u805a\u7c7b\uff1a\u8ba4\u4e3a\u548c\u540c\u4e00\u4e2a\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\u5b58\u6b3e\u5730\u5740\u4ea4\u4e92\u7684\u5730\u5740\uff0c\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5b9e\u4f53\u3002</li> <li>Self Approval\u805a\u7c7b\uff1a\u4e00\u4e2a\u5730\u5740\uff0c\u53ea\u88ab\u5c11\u91cf\u5176\u4ed6\u5730\u5740approve\u3002</li> <li>Airdrop\u805a\u7c7b\uff1a\u8ba4\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u80fd\u4f1a\u7528\u591a\u4e2a\u5730\u5740\u53bb\u8585\u7a7a\u6295\u7136\u540e\u8f6c\u79fb\u5230\u4e3b\u5730\u5740\u3002</li> </ul> </li> <li>\u94fe\u4e0b\uff1a<ul> <li>ENS \u5728\u8bba\u6587\u91cc\u88ab\u4f5c\u4e3abase line\u3002</li> </ul> </li> </ul> <p>\u53c2\u8003\u4fe1\u606f\uff1a</p> <ul> <li>Funded by\uff1aFirst address &amp; transaction that funded an Externally-Owned Account with ETH\u3002\u6ca1\u6709\u8bba\u6587\u63d0\u5230\uff1f</li> <li>Gas Price\uff1a\u8ba4\u4e3a\u76f8\u540c\u7528\u6237\u5728\u4e00\u5929\u7684\u540c\u4e00\u65f6\u95f4\uff0c\u63d0\u4f9b\u7684Gas Price\u662f\u76f8\u540c\u7684\u3002\u3002\u3002</li> <li>Active Time\uff1a\u8ba4\u4e3a\u76f8\u540c\u7528\u6237\u5728\u6bcf\u4e00\u5929\u4e2d\u7684\u6d3b\u8dc3\u65f6\u95f4\u662f\u63a5\u8fd1\u7684\u3002\u3002\u3002</li> <li>\u76f8\u4f3c\u7684\u6e90\u4ee3\u7801\u98ce\u683c\u3002\u3002\u3002</li> <li>\u89e3\u6790\u4ea4\u6613\u4fe1\u606f\uff0c\u8ba9\u6a21\u578b\u65e0\u76d1\u7763\u5b66\u4e60</li> </ul>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#usage","title":"Usage","text":"<p>\u8bb0 \\(Relative(addr)\\) \u4e3a\u4e0e \\(addr\\) \u5173\u8054\u7684\u5730\u5740\u96c6\u5408\uff08e.g. addr\u7684\u521d\u59cb\u8d44\u91d1\u6765\u6e90/addr\u63d0\u4f9b\u521d\u59cb\u8d44\u91d1\u7684\u5730\u5740\uff09</p> <ul> <li>\u5982\u679c High Slippage \u4ea4\u6613\u7684\u83b7\u5229\u8005\u548c\u53ef\u7591\u5730\u5740\u6709\u5173\uff0c\u53ef\u4ee5\u6807\u8bb0\u4e3a Rug Pull\u3002</li> </ul> \\[Relative(Recepient(action)) \\cap XAddressSet \\neq \\emptyset\\] <ul> <li>\u7b26\u5408\u4e0b\u5217\u6761\u4ef6\u7684token\u53ef\u4ee5\u6807\u8bb0\u4e3a Rug Pull Token\uff1a </li> </ul> \\[token.creator \\in Y AddressSet$$   $$Relative(token.creator) \\cap YAddressSet \\neq \\emptyset\\] <ul> <li>\u7b26\u5408\u4e0b\u5217\u6761\u4ef6\u7684 token \u6709\u70b9\u53ef\u7591 \\(\\(XAddressSet(token) \\cap YAddressSet \\neq \\emptyset\\)\\) \\(\\(Relative[XAddressSet(token)] \\cap YAddressSet \\neq \\emptyset\\)\\)</li> </ul> <p>[!Note] Token\u5408\u7ea6\u4e5f\u53ef\u4ee5\u805a\u7c7b\u8bd5\u8bd5\uff0c\u7528similarity</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#progress-to-date","title":"Progress to Date","text":"<ul> <li>\u9664\u4e86 Address Cluster \u4e4b\u5916\u7684\u90fd\u5b9e\u73b0\u4e86\uff0c\u5728k8s dev\u73af\u5883\u8fd0\u884c\u3002\u4e24\u5929\u524d\u6700\u540e\u4e00\u6b21\u90e8\u7f72\u5230\u73b0\u5728\u7684\u5141\u8bb8\u8fd8\u7b97\u5e73\u7a33\u3002\u3002\u3002\u3002</li> <li>\u6709\u4e00\u4e9b\u7591\u4f3cFP\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002</li> <li>\u653b\u51fb\u68c0\u6d4b\u7cfb\u7edf\u524d\u4e24\u5468\u62a5\u51fa\u6765\u7684 Rug Pull\uff0c\u56de\u6d4b\u662f\u90fd\u53ef\u4ee5\u627e\u5230\u4e86\u3002</li> <li>\u73b0\u5728\u7684\u8f93\u51fa\u662f DingDing + \u6570\u636e\u5e93\u5b58\u6863\u3002</li> </ul>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#update","title":"Update","text":"<ul> <li> FP\uff1a\u79ef\u7d2f\u7684\u624b\u7eed\u8d39\u4ea4\u6613\uff0c\u7ed9\u6c60\u5b50\u9020\u6210\u4e86\u8f83\u5927\u7684\u6ce2\u52a8\uff0c1\u4e2a\u3002 tx<ol> <li>\u8fd9\u79cd\u6ce2\u52a8\u4e0d\u81f3\u4e8e\u628a\u6c60\u5b50\u638f\u7a7a\uff0c\u4f46\u662f\u6709\u4e00\u7b14\u8ba9\u6c60\u5b50\u53ea\u5269\u4e0b\u4e8645.7%\u7684\u6d41\u52a8\u6027\u3002</li> </ol> </li> <li> FN\uff1a\u6ca1\u6709\u8bc4\u4f30\u4e00\u4e2atransaction\u5bf9Pool\u7684\u5f71\u54cd\uff0c4\u4e2a\uff08\u653b\u51fb\u68c0\u6d4b\u62a5\u51fa\u6765\u7684\uff09\u3002 e.g. (rug\u4ea4\u6613 \u6028\u79cd\u4ea4\u6613)<ol> <li>\u6028\u79cdbot\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u5927\u91cf\u4e70\u5165\u8fd9\u4e2ascam token\u3002</li> <li>\u53ef\u7591\u5730\u5740\u5728\u540c\u4e00\u4e2a\u5757\u5185\u53cd\u4e70\uff0c\u5bf9\u51b2\u4e86\u3002\u5e76\u4e14\u8fd9\u4eba\u662f\u7b97\u8fc7\u7684\uff0c\u6b63\u597d\u8ba9\u6c60\u5b50\u56de\u5230\u548c\u539f\u6765\u5dee\u4e0d\u591a\u7684\u72b6\u6001\u3002</li> <li>\u8fd9\u4e2a\u5757\u5728\u6211\u770b\u6765\u6ca1\u6709\u8f83\u5927\u7684\u6ce2\u52a8\uff0c\u628a\u6c60\u5b50\u6ce2\u52a8\u6539\u6210tx\u7c92\u5ea6\u7684\u4e86\u3002</li> </ol> </li> <li> TP\uff0c\u4f46\u662fMoney Flow\u8ba1\u7b97\u9519\u8bef\uff1a<ol> <li>\u8282\u70b9\u7ed9delegate call\u8fd4\u56de\u4e86value\uff0c\u6211\u6ca1\u6709\u533a\u5206\u3002</li> </ol> </li> <li> \u5947\u602a\u7684\u810f\u6570\u636e https://app.blocksec.com/explorer/tx/bsc/0xe4dd1a5e00a414078291a1950a2a085a3199ef6a53224d2693dcbf59c1f313a5?line=1<ul> <li> OOM\uff1a\u5185\u5b58\u8d85\u8fc7\u4e86k8s\u9650\u5236\u76842G\uff0c~~\u8fd8\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\u3002\u5185\u5b58\u6cc4\u6f0f\u4e86\u3002~~ \u597d\u50cf\u5728\u4fee\u522b\u7684bug\u7684\u65f6\u5019\u597d\u4e86...</li> </ul> </li> <li> Corner Case Twitter \u91cc\u9762\u535a\u4e3b\u5206\u6790\u4e86\u4e00\u5927\u5806\uff0c\u8bba\u8bc10x00d60f6a85d121d5fe4d13b28ec87fdd3e9c3b04\u548cNeiro Token\u662f\u4e00\u4f19\u7684\uff0c\u64cd\u7eb5\u5e02\u573a\u3002</li> </ul> <p>P.S TP\u4e2d\u76843140\u4e2a\uff0c\u662f\u6c60\u5b50\u6d41\u52a8\u6027\u4e0d\u8db31%\u4e14\u7531Creator&amp;X\u5730\u5740\u76f4\u63a5\u64cd\u4f5c\u7684\uff0c\u6211\u76f4\u63a5\u8ba4\u4e3a\u662fTP\u3002</p> <pre><code>pie showData title Rug Pull Detection Result\n    \"TP\" : 83\n    \"TP Empty\": 3140\n    \"FP\" : 1\n</code></pre> <pre><code>pie showData title Rug Pull Participiant\n    \"By Creator\" : 2570\n    \"X(not creator)\" : 652\n    \"Others\": 14\n</code></pre> <p>\u8fd9\u4e2a\u535a\u4e3b\u5e94\u8be5\u53ea\u662f\u6000\u75910x00d60f6a85d121d5fe4d13b28ec87fdd3e9c3b04\u8fd9\u4e2a\u6240\u8c13\u7684\u201c\u5de8\u9cb8\u201d\u662f\u548cToken\u9879\u76ee\u65b9\u4e00\u4f19\u7684\uff0c\u8fd8\u6ca1\u6709\u7838\u76d8\u5427</p> <p>\u4e00\u4f19\u4eba 0xf87c81ef24b7bebc127f35ebec66af94e2d7e762</p> <p>Neiro Fake?: 0xee2a03aa6dacf51c18679c516ad5283d8e7c2637</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#update-oct-18","title":"Update Oct 18","text":"<p>OOM: \u5e94\u8be5\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\u76ee\u524d\u4f1a\u4e0d\u65ad\u7d2f\u79ef\u7684\u6570\u636e\u53ea\u6709\u53ef\u7591\u5730\u5740\u96c6\u5408\uff0c\u6570\u91cf\u76ee\u524d\u8fbe\u5230\u4e86\u9884\u8bbe\u6700\u5927\u503c\u76841/2\uff0c\u4f7f\u7528\u4e86\u7ea625M\u5185\u5b58\uff0c\u7a0b\u5e8f\u603b\u4f53\u4f7f\u7528\u7ea6100M\u5185\u5b58\u3002</p> <p>\u5730\u5740\u805a\u7c7b\uff1a \u770b\u4e86\u4e00\u4e9b\u8bba\u6587\uff0c\u611f\u89c9\u65b9\u6cd5\u5206\u62103\u7c7b\uff1a</p> <ol> <li>\u542f\u53d1\u5f0f\u65b9\u6cd5\uff1a\u901a\u8fc7\u4e00\u4e9b\u89c4\u5219\uff0c\u5c06\u5730\u5740\u805a\u96c6\u4e3a\u4e00\u7c07\uff1a<ul> <li>\u94fe\u4e0a\uff1a<ul> <li>Deposit Reuse\u805a\u7c7b\uff1a\u8ba4\u4e3a\u548c\u540c\u4e00\u4e2a\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\u5b58\u6b3e\u5730\u5740\u4ea4\u4e92\u7684\u5730\u5740\uff0c\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5b9e\u4f53\u3002</li> <li>Self Approval\u805a\u7c7b\uff1a\u4e00\u4e2a\u5730\u5740\uff0c\u53ea\u88ab\u5c11\u91cf\u5176\u4ed6\u5730\u5740approve\u3002</li> <li>Airdrop\u805a\u7c7b\uff1a\u8ba4\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u80fd\u4f1a\u7528\u591a\u4e2a\u5730\u5740\u53bb\u8585\u7a7a\u6295\u7136\u540e\u8f6c\u79fb\u5230\u4e3b\u5730\u5740\u3002</li> </ul> </li> <li>\u94fe\u4e0b\uff1a<ul> <li>ENS \u5728\u8bba\u6587\u91cc\u88ab\u4f5c\u4e3abase line\u3002</li> </ul> </li> </ul> </li> <li>AI\u5927\u6cd5\uff1a\u5c06\u94fe\u4e0a\u7684\u4ea4\u6613\u6570\u636e\u505a\u5404\u79cd\u5f62\u5f0f\u7684\u89e3\u6790\uff08e.g. \u8c03\u7528\u56fe\uff09\uff0c\u7136\u540e\u4ea4\u7ed9\u6a21\u578b\u8fdb\u884c\u65e0\u76d1\u7763\u5b66\u4e60\u3002</li> <li>\u611f\u89c9\u6709\u70b9\u626f\u6de1\u7684\u65b9\u6cd5\uff1a<ul> <li>Gas Price\uff1a\u8ba4\u4e3a\u76f8\u540c\u7528\u6237\u5728\u4e00\u5929\u7684\u540c\u4e00\u65f6\u95f4\uff0c\u63d0\u4f9b\u7684Gas Price\u662f\u76f8\u540c\u7684\u3002\u3002\u3002</li> <li>Active Time\uff1a\u8ba4\u4e3a\u76f8\u540c\u7528\u6237\u5728\u6bcf\u4e00\u5929\u4e2d\u7684\u6d3b\u8dc3\u65f6\u95f4\u662f\u63a5\u8fd1\u7684\u3002\u3002\u3002</li> <li>\u76f8\u4f3c\u7684\u6e90\u4ee3\u7801\u98ce\u683c\u3002\u3002\u3002</li> </ul> </li> </ol> <p>\u611f\u89c9\u9664\u4e86\u805a\u7c7b\uff0c\u5bfb\u627e\u4e24\u4e2a\u5730\u5740\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u80fd\u66f4\u52a0\u5b9e\u7528\u3002\u4f8b\u5982\u4e24\u4e2a\u5730\u5740\u4e4b\u95f4\u7684\u8d44\u91d1\u6d41\u3002</p> <p>TODO</p> <ul> <li> \u5730\u5740\u805a\u7c7b\u7b97\u6cd5\uff08\u5355\u72ec\u7684\u4e00\u4e2a\u4efb\u52a1\uff09</li> <li> \u6839\u636eScam Token Creator\u53d1\u73b0Scam Token<ul> <li> \u4eba\u5de5\u6807\u8bb0\u7684Scam Token\uff0c\u53cd\u9988\u5230\u7ebf\u4e0a\u3002</li> <li> \u5185\u5b58\u91cc\u641c\u4e0d\u5230\u5230\u6570\u636e\u5e93\u91cc\u641c\uff0c\u5185\u5b58\u4f5cCreator\u7684LRU Cache\u3002</li> <li> Scam Creator \u7684\u540c\u7c07\u5730\u5740\u90e8\u7f72\u7684 Token \uff08\u628a\u540cToken\u4e00\u8d77\u90e8\u7f72\u7684Pool\u4e5f\u6807\u8bb0\u6210Rug Token\u4e86\uff09</li> </ul> </li> <li> \u6839\u636eScam Token X\u53d1\u73b0Scam Token<ul> <li> \u7c7b\u4f3c\uff0c\u540c\u4e0a\u3002</li> <li> \u5982\u679cX\u662f\u5408\u7ea6\uff0c\u53ef\u4ee5\u4f7f\u7528Similarity\u3002</li> </ul> </li> <li> \u6839\u636eScam Token Similarity\u53d1\u73b0Scam Token\u3002\u4e0d\u8003\u8651Similarity\u6548\u679c\uff0c\u8fd9\u4e2a\u4e8b\u60c5\u672c\u8eab\u4e0d\u4e00\u5b9a\u5408\u7406\uff0c\u9664\u975e\u662f\u6709\u540e\u95e8\u7684\u5408\u7ea6\uff1f\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2aToken\u5408\u7ea6\u3002\u4f46\u662f\u53ef\u4ee5\u770b\u770b\u5b9e\u9a8c\u6548\u679c\uff1f</li> <li> \u9759\u6001\u5206\u6790Token\u5408\u7ea6\u7684\u540e\u95e8\u3002\u5df2\u7ecf\u6709\u4e00\u4e9b\u5de5\u4f5c\u4e86\uff0c\u53ef\u4ee5\u62ff\u8fc7\u6765\u6539\u6539\u7528\u3002</li> </ul> <pre><code>/**\n *Submitted for verification at Etherscan.io on 2024-10-13\n*/\n\npragma solidity ^0.8.2;\n\ncontract Token {\n    mapping(address =&gt; uint) public balances;\n    mapping(address =&gt; mapping(address =&gt; uint)) public allowance;\n    uint public totalSupply = 1500000000000 * 10 ** 18;\n    string public name = \"NISO\";\n    string public symbol = \"NISO\";\n    uint public decimals = 18;\n\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed owner, address indexed spender, uint value);\n\n    constructor() {\n        balances[msg.sender] = totalSupply;\n    }\n\n    function balanceOf(address owner) public returns(uint) {\n        return balances[owner];\n    }\n\n    function transfer(address to, uint value) public returns(bool) {\n        require(balanceOf(msg.sender) &gt;= value, 'balance too low');\n        balances[to] += value;\n        balances[msg.sender] -= value;\n       emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) public returns(bool) {\n        require(balanceOf(from) &gt;= value, 'balance too low');\n        require(allowance[from][msg.sender] &gt;= value, 'allowance too low');\n        balances[to] += value;\n        balances[from] -= value;\n        emit Transfer(from, to, value);\n        return true;   \n    }\n\n    function approve(address spender, uint value) public returns (bool) {\n        allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;   \n    }\n}\n</code></pre> <p>0x2de6ee4f67e7a9fc15409a2b5395f16652d3ee11 \u627e\u5230\u4e86\u4e00\u4e2aRug\u4ea4\u6613\uff0c\u90e8\u7f72\u4e86\u5f88\u591aToken\uff0c https://www.oklink.com/eth/address/0x2de6ee4f67e7a9fc15409a2b5395f16652d3ee11?channelId=blksec</p>","tags":["scam"]},{"location":"hidden/%E4%BB%A3%E5%B8%81%E6%AC%BA%E8%AF%88/#something-interesting","title":"Something Interesting","text":"<ol> <li>0x2de6ee4f67e7a9fc15409a2b5395f16652d3ee11 \u8fd9\u8d27\u5927\u91cf\u90e8\u7f72Rug Pull Token</li> <li>Contract Address 0x52e7f063060ef78f175ff4d105553716d324e26b | Etherscan \u8fd9\u4e2aToken\u521b\u5efa\u7684\u76ee\u7684\u662f\u7528\u6765\u6d17\u94b1\uff1f</li> </ol>","tags":["scam"]},{"location":"hidden/%E5%A4%A7%E7%BA%B2/","title":"\u5927\u7eb2","text":"<ol> <li>\u5de5\u4f5c<ol> <li>RugPull \u7684\u68c0\u6d4b<ol> <li>\u7279\u6743\u8d26\u6237\u68c0\u6d4b\u3001\u8d44\u91d1\u6d41\u5411\u7b97\u6cd5\u3001\u4ea4\u6613\u53c2\u4e0e\u8005\u7b97\u6cd5</li> </ol> </li> <li>RugPull \u7684\u9884\u6d4b<ol> <li>\u4ee3\u5e01\u5206\u5e03\u3001\u90e8\u7f72\u8005\u8d44\u91d1\u6d41/\u5386\u53f2\u4ea4\u6613</li> </ol> </li> <li>Phishing \u7684\u68c0\u6d4b<ol> <li>\u5047\u4ee3\u5e01\u68c0\u6d4b\uff0c\u53ef\u7591TransferFrom\u68c0\u6d4b</li> </ol> </li> </ol> </li> <li>\u53d1\u73b0<ol> <li>RugPull \u7684\u51e0\u79cd\u6a21\u5f0f<ol> <li>\u4ece\u8d26\u6237\u6765\u770b\uff1a\u90e8\u7f72\u8005\uff0c\u7279\u6b8a\u8d26\u6237\uff0c\u7279\u6743\u5408\u7ea6\uff1b</li> <li>\u4ece\u8d44\u91d1\u6d41\u6765\u770b\uff1aMINT&amp;SWAP /REMOVE LP /TRANSFER&amp;SWAP\uff09</li> </ol> </li> <li>RugPuller \u7684\u51e0\u79cd\u6a21\u5f0f<ol> <li>\u4ece\u8d44\u91d1\u6d41\u6765\u770b\uff1a\u94fe\u5f0f\u6d17\u94b1\uff0c\u661f\u5f62\u6d17\u94b1</li> <li>\u4ece\u8d26\u6237\u6765\u770b\uff1a\u4e00\u4e2a\u8d26\u6237\u5927\u91cf\u90e8\u7f72</li> <li>\u4ece\u5408\u7ea6\u6765\u770b\uff1a\u76f8\u540c\u5408\u7ea6\u91cd\u590d\u90e8\u7f72\uff0c\u540e\u95e8\u5408\u7ea6</li> </ol> </li> </ol> </li> <li>\u8bc4\u4f30<ol> <li>TokenScout \u6570\u636e\u96c6\uff08\u68c0\u6d4b\uff0c\u9884\u6d4b\uff09</li> <li>\u94fe\u4e0a\u771f\u5b9e\u6570\u636e\uff08\u68c0\u6d4b\uff0c\u9884\u6d4b\uff09</li> <li>\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u9884\u6d4b\uff09</li> </ol> </li> </ol>"},{"location":"hidden/%E5%A4%A7%E7%BA%B2/#tokenscout","title":"TokenScout \u6570\u636e\u96c6","text":"<p>\u5bf9Contract Selector\u7684\u8bc6\u522b\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6ca1\u6709\u53d1\u73b0Token\u662fERC20\u3002\u4ed6\u4eec\u7684\u5408\u7ea6\u90fd\u662f\u4e00\u6837\u7684TokenMintERC20Token v0.5.0+commit.1d4f565a\u3002\u73b0\u5728\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\u505a\u4e86\u4fee\u590d\uff0cRug Pull\u7684\u6a21\u5f0f\u662f\u7b26\u5408Pattern\u7684\uff08\u5168\u90fd\u662fCreator Rugpull\uff09\uff0c\u91cd\u65b0\u8dd1\u53ef\u4ee5\u68c0\u6d4b\u5230\u3002</p> <pre><code>PUSH4 0x06fdde03\nDUP2\nEQ\nPUSH2 0x00be\nJUMPI\n</code></pre> <p>\u5728Block Range 1500,0000-16730073\u4e2d\uff0cTokenScout\u6570\u636e\u96c6\u5305\u542b\u4e863245\u4e2aRug Pull Token\u3002\u7ecf\u8fc7\u4e86\u65e0Transfer\u3001\u65e0Pool\u7684\u7b5b\u9009\u4e4b\u540e\uff0c\u53ea\u5269\u4e0b\u4e86795\u4e2aToken\u3002\u4eba\u5de5\u53c8\u7b5b\u9009\u51fa\u4e86\u5176\u4e2d\u76849\u4e2aFP\uff0c\u8fd8\u5269786\u4e2aToken\u3002</p> <p>\u5728\u533a\u95f4\u5185\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u7684RugPull Token\u6709 57107 \u4e2a\uff0c\u5176\u4e2d\u7684\u9884\u6d4b\u7ed3\u679c\u662f 48875/57107=85.6%\u3002\u5728Token Scout\u7684786\u4e2aToken\u4e2d\uff0c\u6709780\u4e2a\u88ab\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u30024\u4e2a\u6211\u4e0d\u592a\u786e\u5b9a\u662f\u4e0d\u662fRug Pull\uff0c2\u4e2a\u786e\u5b9e\u662f\uff0c\u611f\u89c9\u4e5f\u662f\u80fd\u68c0\u6d4b\u5230\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u9057\u6f0f\u4e86\u3002</p> <p></p> <p>TL;DR: </p> <ol> <li>\u9884\u6d4b\u53ec\u56de\u7387\uff1a48875/57113=85.58%\u3002</li> <li>\u68c0\u6d4b\u53ec\u56de\u7387\uff1a57107/57113=99.99%\u3002</li> <li>TokenScout\u68c0\u6d4b\u53ec\u56de\u7387\uff1a786/57113=1.38%\u3002</li> </ol>"},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/","title":"\u533a\u5757\u94fe\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u68c0\u6d4b\u548c\u9884\u9632","text":"","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_2","title":"\u9009\u9898\u4f9d\u636e","text":"","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_3","title":"\u8bfe\u9898\u6765\u6e90","text":"<p>\u672c\u8bfe\u9898\u6e90\u4e8e\u5f53\u524d\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09\u9886\u57df\u4e2d\u65e5\u76ca\u4e25\u91cd\u7684\u4e00\u4e2a\u73b0\u5b9e\u95ee\u9898\u2014\u2014\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u7316\u7357\u3002\u8fd9\u4e9b\u6b3a\u8bc8\u884c\u4e3a\u4e0d\u4ec5\u7834\u574f\u4e86\u6570\u5b57\u91d1\u878d\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\uff0c\u8fd8\u5bf9\u6295\u8d44\u8005\u6784\u6210\u4e86\u91cd\u5927\u98ce\u9669\uff0c\u56e0\u6b64\u8feb\u5207\u9700\u8981\u5bf9\u6b64\u8fdb\u884c\u6df1\u5165\u7814\u7a76\uff0c\u5e76\u5f00\u53d1\u51fa\u6709\u6548\u7684\u9632\u8303\u63aa\u65bd\u3002</p>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_4","title":"\u8bfe\u9898\u7684\u7814\u7a76\u610f\u4e49","text":"<p>\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\uff08Decentralized Exchanges, DEXs\uff09\u6784\u6210\u4e86\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08Decentralized Finance, DeFi\uff09\u9886\u57df\u7684\u6838\u5fc3\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e00\uff0c\u5e76\u901a\u5e38\u88ab\u8ba4\u4e3a\u4f18\u4e8e\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\uff08Centralized Exchanges, CEXs\uff09\u5728\u4e8e\u5176\u589e\u5f3a\u7684\u53ef\u9760\u6027\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u5b58\u5728\u8fd9\u79cd\u666e\u904d\u770b\u6cd5\uff0c\u4e00\u4e9b\u9886\u5148\u7684\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u5e73\u53f0\u5982Uniswap\u5374\u5141\u8bb8\u4efb\u4f55\u672a\u7ecf\u5ba1\u8ba1\u7684ERC20\u4ee3\u5e01\u5728\u5176\u5e73\u53f0\u4e0a\u81ea\u7531\u90e8\u7f72\u3002\u8fd9\u79cd\u5f00\u653e\u6027\u7b56\u7565\u867d\u7136\u7b26\u5408\u53bb\u4e2d\u5fc3\u5316\u7cbe\u795e\uff0c\u4f46\u4e5f\u65e0\u53ef\u907f\u514d\u5730\u5f15\u53d1\u4e86\u5927\u91cf\u7684\u6b3a\u8bc8\u6d3b\u52a8\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6b3a\u8bc8\u8005\u901a\u8fc7\u521b\u5efa\u5e76\u63a8\u5e7f\u65e8\u5728\u7a83\u53d6\u4ea4\u6613\u8005\u8d44\u4ea7\u7684\u4ee3\u5e01\uff0c\u8bf1\u4f7f\u6295\u8d44\u8005\u5c06\u5b9d\u8d35\u7684\u8d44\u4ea7\uff08\u4f8b\u5982\u4ee5\u592a\u574aETH\uff09\u6295\u5165\u5230\u6240\u8c13\u7684\u6d41\u52a8\u6027\u6c60\u4e2d\u6362\u53d6\u8fd9\u4e9b\u6b3a\u8bc8\u6027\u4ee3\u5e01\uff0c\u7ed3\u679c\u5374\u53d1\u73b0\u8fd9\u4e9b\u4ee3\u5e01\u65e0\u6cd5\u518d\u5151\u6362\u56de\u539f\u59cb\u8d44\u4ea7\u3002</p> <p>\u6839\u636eFederico Cernera\u5728\u5176\u7814\u7a76\u6587\u7ae0\u4e2d\u63d0\u4f9b\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u8fd9\u7c7b\u6b3a\u8bc8\u884c\u4e3a\u6d89\u53ca\u7684\u6076\u610f\u884c\u4e3a\u8005\u5df2\u8d85\u8fc7\u6570\u5341\u4e07\u4eba\u6b21\uff0c\u6d89\u53ca\u7684\u8d44\u91d1\u8f6c\u79fb\u603b\u989d\u8fbe\u5230\u60ca\u4eba\u768410\u4ebf\u7f8e\u5143\u4ee5\u4e0a\u3002\u8fd9\u4e0d\u4ec5\u635f\u5bb3\u4e86\u4ea4\u6613\u8005\u7684\u8d22\u4ea7\u5b89\u5168\uff0c\u66f4\u5bf9\u6574\u4e2a\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\u751f\u6001\u7cfb\u7edf\u7684\u4fe1\u8a89\u548c\u7a33\u5b9a\u6027\u9020\u6210\u4e86\u4e25\u91cd\u7684\u8d1f\u9762\u5f71\u54cd\u3002</p> <p>\u9274\u4e8e\u6b64\uff0c\u672c\u7814\u7a76\u8bfe\u9898\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5f52\u7eb3\u5e76\u603b\u7ed3\u8fd9\u79cd\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u6a21\u5f0f\u53ca\u5176\u7279\u5f81\uff0c\u57fa\u4e8e\u6b64\u8fdb\u4e00\u6b65\u5f00\u53d1\u51fa\u4e00\u5957\u521b\u65b0\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u76d1\u6d4b\u7cfb\u7edf\u4ee5\u53ca\u9488\u5bf9\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u7684\u68c0\u6d4b\u7cfb\u7edf\u3002\u8fd9\u4e9b\u7cfb\u7edf\u7684\u8bbe\u8ba1\u65e8\u5728\u901a\u8fc7\u5148\u8fdb\u7684\u7b97\u6cd5\u548c\u5206\u6790\u6280\u672f\uff0c\u5b9e\u65f6\u76d1\u6d4b\u548c\u8bc6\u522b\u6f5c\u5728\u7684\u6b3a\u8bc8\u884c\u4e3a\uff0c\u4e3aDEX\u5e73\u53f0\u63d0\u4f9b\u5f3a\u6709\u529b\u7684\u5b89\u5168\u4fdd\u969c\u63aa\u65bd\uff0c\u4ece\u800c\u4fdd\u62a4\u6295\u8d44\u8005\u8d44\u4ea7\u5b89\u5168\uff0c\u7ef4\u62a4DeFi\u751f\u6001\u7cfb\u7edf\u7684\u516c\u6b63\u6027\u548c\u900f\u660e\u5ea6\u3002</p>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_5","title":"\u56fd\u5185\u5916\u7814\u7a76\u73b0\u72b6\u5206\u6790","text":"<p>\u5b66\u672f\u754c\u5bf9\u6b3a\u8bc8\u6027\u4ee3\u5e01\u7684\u7814\u7a76\u4e3b\u8981\u96c6\u4e2d\u5728\u4e24\u4e2a\u65b9\u9762\uff1a\u5b9e\u8bc1\u5206\u6790\u548c\u68c0\u6d4b\u7b56\u7565\u7684\u5f00\u53d1\u3002</p> <p>\u5b9e\u8bc1\u5206\u6790\u8c03\u67e5\u4e86\u5404\u79cd\u533a\u5757\u94fe\u5e73\u53f0\u4e0a\u6b3a\u8bc8\u6027\u4ee3\u5e01\u7684\u6a21\u5f0f\u548c\u5f71\u54cd\uff0c\u4e3a\u6b3a\u8bc8\u6027\u4ee3\u5e01\u63d0\u4f9b\u4e86\u91cd\u8981\u89c1\u89e3\u3002Xia\u7b49\u4eba\u5bf9Uniswap\u4e0a\u7684\u6b3a\u8bc8\u4ee3\u5e01\u8fdb\u884c\u4e86\u542f\u53d1\u5f0f\u6536\u96c6\uff0c\u5206\u6790\u4e86\u6b3a\u8bc8\u4ee3\u5e01\u7684\u884c\u4e3a\u7279\u70b9\u3002Cernera\u7b49\u4eba\u5bf9Binance Smart Chain\u4e0a\u7684\u6b3a\u8bc8\u884c\u4e3a\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u53d1\u73b0\u6b3a\u8bc8\u4ee3\u5e01\u7684\u6b3a\u9a97\u5bf9\u8c61\u4e0d\u53ea\u662f\u4eba\uff0c\u8fd8\u6709\u4ea4\u6613\u673a\u5668\u4eba\u3002Sun\u7b49\u4eba\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u8fdb\u884c\u4e86\u5f52\u7eb3\u603b\u7ed3\uff0c\u7efc\u5408\u4e86\u5f88\u591a\u4e0d\u540c\u7684\u5de5\u4f5c\u7ed9\u51fa\u4e86\u8f83\u4e3a\u5b8c\u5584\u7684\u6b3a\u8bc8\u4ea4\u6613\u6570\u636e\u5e93\u3002</p> <p>\u5f53\u524d\u7684\u68c0\u6d4b\u7b56\u7565\u5219\u591a\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u3001\u6a21\u7cca\u6d4b\u8bd5\u6216\u9759\u6001\u5206\u6790\u7b49\u65b9\u5f0f\uff0c\u65e8\u5728\u9884\u5148\u8bc6\u522b\u6b3a\u8bc8\u4ee3\u5e01\u3002Nguyen\u7b49\u4eba\u63d0\u51fa\u4e86\u57fa\u4e8e\u7279\u5f81\u5de5\u7a0b\u7b49\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u6765\u68c0\u6d4b\u6b3a\u8bc8\u4ee3\u5e01\uff0cHu\u7b49\u4eba\u4f7f\u7528\u9884\u8bad\u7ec3\u7684Transformer\u5bf9\u4ee5\u592a\u574a\u7684\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u68c0\u6d4b\u6b3a\u8bc8\u884c\u4e3a\uff1bCao\u7b49\u4eba\u901a\u8fc7\u6a21\u7cca\u6d4b\u8bd5\u6765\u68c0\u6d4b\u4ee3\u5e01\u5408\u7ea6\u4e2d\u662f\u5426\u5b58\u5728\u64cd\u7eb5\u4ee3\u5e01\u4ef7\u683c\u7684\u65b9\u6cd5\uff0cTokeer, CRPWarner, Pied-Pier\u7b49\u5de5\u5177\u5206\u6790\u4e86\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u4e2d\u5e38\u89c1\u7684\u540e\u95e8\u7c7b\u578b\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5f00\u53d1\u4e86\u9488\u5bf9\u540e\u95e8\u7684\u9759\u6001\u5206\u6790\u5de5\u5177\uff1b\u7136\u800c\uff0c\u4ee3\u5e01\u60f3\u8981\u5b8c\u6210\u6b3a\u8bc8\u884c\u4e3a\uff0c\u4e0d\u4e00\u5b9a\u8981\u5728\u5408\u7ea6\u4e2d\u6dfb\u52a0\u540e\u95e8\u3002\u9664\u4e86\u5bf9\u4ee3\u5e01\u5408\u7ea6\u8fdb\u884c\u5206\u6790\uff0cMazorra\u7b49\u4eba\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u5206\u6790\u4ee3\u5e01\u5728Uniswap\u4e2d\u7684\u4ea4\u6613\u6a21\u5f0f\uff0c\u6765\u9884\u6d4b\u6076\u610f\u4ee3\u5e01\u3002</p> <p>\u5728\u5730\u5740\u805a\u7c7b\u65b9\u9762\uff0cVictor\u7b49\u4eba\u63d0\u51fa\u4e86\u57fa\u4e8e\u542f\u53d1\u5f0f\u89c4\u5219\u5c06\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5b9e\u4f53\u63a7\u5236\u7684\u5730\u5740\u8fdb\u884c\u805a\u7c7b\u3002Zhou\u7b49\u4eba\u5229\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u5bf9\u5bf9\u4ea4\u6613\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u5c1d\u8bd5\u5bf9\u4ee5\u592a\u574a\u5730\u5740\u8fdb\u884c\u53bb\u533f\u540d\u5316\u3002\u5c3d\u7ba1\u76f8\u5173\u7684\u5de5\u4f5c\u63d0\u51fa\u4e86\u4e0d\u540c\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u4f46\u662f\u5730\u5740\u805a\u7c7b\u4f9d\u7136\u662f\u4e00\u4e2a\u5f00\u653e\u6027\u7684\u95ee\u9898\u3002</p> <p>\u5de5\u4e1a\u5c4a\u7684 GoPlus Security\u3001TokenSniffer\u3001RugPullDetector \u7b49\u5de5\u5177\u901a\u8fc7\u5ba1\u8ba1\u4ee3\u5e01\u5408\u7ea6\u7684\u6e90\u4ee3\u7801\u6765\u68c0\u67e5\u4ee3\u5e01\u5b89\u5168\u6027\u3002\u5176\u4e2d\u4e00\u4e9b\u5de5\u5177\u53ef\u4ee5\u8986\u76d6\u5bf9\u591a\u79cd\u6b3a\u8bc8\u6027\u4ee3\u5e01\u98ce\u9669\u7684\u68c0\u6d4b\u3002\u7136\u800c,\u8fd9\u4e9b\u5de5\u5177\u8fc7\u5ea6\u4f9d\u8d56\u5408\u7ea6\u6e90\u4ee3\u7801\u548c\u5df2\u77e5\u7684\u6b3a\u8bc8\u6027\u4ee3\u5e01\u6a21\u5f0f\uff0c\u5bb9\u6613\u53d7\u5230\u6e90\u4ee3\u7801\u7ea7\u6df7\u6dc6\u7684\u5f71\u54cd\uff0c\u5e76\u4e14\u65e0\u6cd5\u8986\u76d6\u590d\u6742\u7684\u4ee3\u7801\u7ed3\u6784\u3002</p>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_6","title":"\u4e3b\u8981\u53c2\u8003\u6587\u732e","text":"<ul> <li>Cernera, Federico, Massimo La Morgia, and Alessandro Mei. \u201cToken Spammers, Rug Pulls, and Sniper Bots: An Analysis of the Ecosystem of Tokens in Ethereum and in the Binance Smart Chain (BNB),\u201d n.d.</li> <li>Lin, Zewei, Jiachi Chen, Jiajing Wu, Weizhe Zhang, Yongjuan Wang, and Zibin Zheng. \u201cCRPWarner: Warning the Risk of Contract-Related Rug Pull in DeFi Smart Contracts.\u201d IEEE TRANSACTIONS ON SOFTWARE ENGINEERING 50, no. 6 (2024).</li> <li>Ma, Fuchen, Meng Ren, Lerong Ouyang, Yuanliang Chen, Juan Zhu, Ting Chen, Yingli Zheng, Xiao Dai, Yu Jiang, and Jiaguang Sun. \u201cPied-Piper: Revealing the Backdoor Threats in Ethereum ERC Token Contracts.\u201d ACM Transactions on Software Engineering and Methodology 32, no. 3 (July 31, 2023): 1\u201324. https://doi.org/10.1145/3560264.</li> <li>Sharma, Trishie, Rachit Agarwal, and Sandeep Kumar Shukla. \u201cUnderstanding Rug Pulls: An In-Depth Behavioral Analysis of Fraudulent NFT Creators.\u201d ACM Trans. Web 18, no. 1 (October 11, 2023): 8:1-8:39. https://doi.org/10.1145/3623376.</li> <li>Sun, Dianxiang, Wei Ma, Liming Nie, and Yang Liu. \u201cSoK: Comprehensive Analysis of Rug Pull Causes, Datasets, and Detection Tools in DeFi.\u201d arXiv, March 24, 2024. http://arxiv.org/abs/2403.16082.</li> <li>Torres, Christof Ferreira, Mathis Steichen, and Radu State. \u201cThe Art of The Scam: Demystifying Honeypots in Ethereum Smart Contracts,\u201d n.d.</li> <li>Xia, Pengcheng, Haoyu wang, Bingyu Gao, Weihang Su, Zhou Yu, Xiapu Luo, Chao Zhang, Xusheng Xiao, and Guoai Xu. \u201cTrade or Trick? Detecting and Characterizing Scam Tokens on Uniswap Decentralized Exchange.\u201d arXiv, November 11, 2021. http://arxiv.org/abs/2109.00229.</li> <li>Zhou, Yuanhang, Jingxuan Sun, Fuchen Ma, Yuanliang Chen, Zhen Yan, and Yu Jiang. \u201cStop Pulling My Rug: Exposing Rug Pull Risks in Crypto Token to Investors.\u201d In Proceedings of the 46th International Conference on Software Engineering: Software Engineering in Practice, 228\u201339. ICSE-SEIP \u201924. New York, NY, USA: Association for Computing Machinery, 2024. https://doi.org/10.1145/3639477.3639722.</li> <li>\u201cSoK: Decentralized Exchanges (DEX) with Automated Market Maker (AMM) Protocols | ACM Computing Surveys.\u201d Accessed October 11, 2024. https://dl.acm.org/doi/abs/10.1145/3570639.</li> <li>\u201cWhy Trick Me: The Honeypot Traps on Decentralized Exchanges | Proceedings of the 2023 Workshop on Decentralized Finance and Security.\u201d Accessed October 11, 2024. https://dl.acm.org/doi/abs/10.1145/3605768.3623546.</li> <li>Cao, Mingpei, Yueze Zhang, Zhenxuan Feng, Jiahao Hu, and Yuesheng Zhu. \u201cTokenAuditor: Detecting Manipulation Risk in Token Smart Contract by Fuzzing.\u201d In 2022 IEEE 22nd International Conference on Software Quality, Reliability and Security (QRS), 651\u201362. Guangzhou, China: IEEE, 2022. https://doi.org/10.1109/QRS57517.2022.00071.</li> <li>Hu, Sihao, Zhen Zhang, Bingqiao Luo, Shengliang Lu, Bingsheng He, and Ling Liu. \u201cBERT4ETH: A Pre-Trained Transformer for Ethereum Fraud Detection.\u201d In Proceedings of the ACM Web Conference 2023, 2189\u201397. Austin TX USA: ACM, 2023. https://doi.org/10.1145/3543507.3583345.</li> <li>Victor, Friedhelm. \u201cAddress Clustering Heuristics for Ethereum.\u201d In Financial Cryptography and Data Security, edited by Joseph Bonneau and Nadia Heninger, 12059:617\u201333. Lecture Notes in Computer Science. Cham: Springer International Publishing, 2020. https://doi.org/10.1007/978-3-030-51280-4_33.</li> <li>Zhou, Jiajun, Chenkai Hu, Jianlei Chi, Jiajing Wu, Meng Shen, and Qi Xuan. \u201cBehavior-Aware Account De-Anonymization on Ethereum Interaction Graph.\u201d IEEE Transactions on Information Forensics and Security 17 (2022): 3433\u201348. https://doi.org/10.1109/TIFS.2022.3208471.</li> </ul>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_7","title":"\u7814\u7a76\u65b9\u6848","text":"","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_8","title":"\u7814\u7a76\u76ee\u6807\u3001\u5185\u5bb9\u548c\u62df\u89e3\u51b3\u7684\u5173\u952e\u95ee\u9898","text":"<p>\u672c\u7814\u7a76\u6709\u4e09\u4e2a\u7814\u7a76\u76ee\u6807\uff1a</p> <ol> <li>\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u8fdb\u884c\u7cfb\u7edf\u7684\u5f52\u7eb3\u603b\u7ed3\u3002</li> <li>\u63d0\u51fa\u4e00\u79cd\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u76d1\u6d4b\u7cfb\u7edf\u3002\u5f53\u68c0\u6d4b\u5230\u94fe\u4e0a\u53d1\u751f\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u65f6\uff0c\u8fdb\u884c\u9884\u8b66\u3002</li> <li>\u63d0\u51fa\u4e00\u79cd\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u68c0\u6d4b\u7cfb\u7edf\u3002\u5f53\u68c0\u6d4b\u5230\u94fe\u4e0a\u6709\u7591\u4f3c\u6b3a\u8bc8\u4ee3\u5e01\u90e8\u7f72\u65f6\uff0c\u8fdb\u884c\u9884\u8b66\u3002</li> </ol> <p>\u4e3a\u4e86\u5b8c\u6210\u8fd9\u4e09\u4e2a\u7814\u7a76\u76ee\u6807\uff0c\u7814\u7a76\u5185\u5bb9\u5305\u62ec</p> <ol> <li>\u8c03\u7814\u73b0\u6709\u6587\u732e\uff0c\u68b3\u7406\u5df2\u6709\u7684\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u5206\u7c7b\u65b9\u6cd5\u3002</li> <li>\u603b\u7ed3\u4e0d\u540c\u7c7b\u578b\u4ee3\u5e01\u6b3a\u8bc8\u7684\u7279\u70b9\u3001\u5b9e\u65bd\u65b9\u5f0f\u548c\u5371\u5bb3\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5efa\u7acb\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u76d1\u6d4b\u7cfb\u7edf\uff0c\u6839\u636e\u76d1\u6d4b\u7cfb\u7edf\u7684\u7ed3\u679c\uff0c\u53cd\u590d\u8fed\u4ee3\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u8ba4\u8bc6\uff0c\u6539\u8fdb\u76d1\u6d4b\u7cfb\u7edf\u3002</li> <li>\u57fa\u4e8e\u76d1\u6d4b\u7cfb\u7edf\u7684\u7ed3\u679c,\u6536\u96c6\u548c\u6807\u6ce8\u5df2\u77e5\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u7684\u94fe\u4e0a\u6570\u636e,\u6784\u5efa\u9ad8\u8d28\u91cf\u7684\u6570\u636e\u96c6\u3002\u6df1\u5165\u5206\u6790\u6b3a\u8bc8\u4ea4\u6613\u7684\u94fe\u4e0a\u7279\u5f81,\u5982\u4ea4\u6613\u6a21\u5f0f\u3001\u91d1\u989d\u3001\u9891\u7387\u7b49\u3002\u5728\u5b9e\u8bc1\u7814\u7a76\u7684\u57fa\u7840\u4e0a,\u8fdb\u4e00\u6b65\u52a0\u6df1\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u7684\u8ba4\u77e5,\u5bf9\u4ee3\u5e01\u6b3a\u8bc8\u624b\u6bb5\u7684\u53d1\u5c55\u8d8b\u52bf\u8fdb\u884c\u5206\u6790\u548c\u9884\u6d4b\u3002</li> <li>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u57fa\u4e8e\u9759\u6001\u5206\u6790\u3001\u52a8\u6001\u5206\u6790\u3001\u5730\u5740\u805a\u7c7b\u7b49\u7684\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u68c0\u6d4b\u65b9\u6cd5\uff0c\u4e3a\u7528\u6237\u9884\u8b66\u6b3a\u8bc8\u4ee3\u5e01\u4fe1\u606f\u3002</li> </ol> <p>\u4e3a\u6b64\uff0c\u9700\u8981\u89e3\u51b3\u7684\u5173\u952e\u95ee\u9898\u5305\u62ec\uff1a</p> <ol> <li>\u73b0\u6709\u7684\u6b3a\u8bc8\u4ee3\u5e01\u4ea4\u6613\u6570\u636e\u96c6\u89c4\u6a21\u6709\u9650\uff0c\u96be\u4ee5\u5168\u9762\u53cd\u6620\u94fe\u4e0a\u771f\u5b9e\u7684\u6b3a\u8bc8\u60c5\u51b5\u3002\u5982\u4f55\u5728\u6709\u9650\u7684\u6570\u636e\u96c6\u57fa\u7840\u4e0a\uff0c\u8bbe\u8ba1\u6709\u6548\u7684\u6b3a\u8bc8\u4ea4\u6613\u68c0\u6d4b\u89c4\u5219\u548c\u7b56\u7565\uff0c\u63d0\u9ad8\u68c0\u6d4b\u7684\u8986\u76d6\u8303\u56f4\u3002</li> <li>\u6b3a\u8bc8\u624b\u6bb5\u4e0d\u65ad\u6f14\u5316\uff0c\u5355\u4e00\u7279\u5f81\u96be\u4ee5\u51c6\u786e\u5224\u65ad\u6b3a\u8bc8\u4ea4\u6613\u548c\u6b3a\u8bc8\u5408\u7ea6\u3002\u9700\u8981\u63a2\u7d22\u591a\u7ef4\u5ea6\u3001\u591a\u6307\u6807\u7efc\u5408\u5206\u6790\u7684\u68c0\u6d4b\u65b9\u6cd5\uff0c\u63d0\u9ad8\u68c0\u6d4b\u7cfb\u7edf\u5e94\u5bf9\u65b0\u578b\u6b3a\u8bc8\u7684\u80fd\u529b\u3002\u540c\u65f6\uff0c\u8fd8\u8981\u6301\u7eed\u8ddf\u8e2a\u6b3a\u8bc8\u624b\u6bb5\u7684\u53d1\u5c55\u53d8\u5316\uff0c\u53ca\u65f6\u66f4\u65b0\u68c0\u6d4b\u89c4\u5219\u3002</li> <li>\u6b63\u5e38\u4ea4\u6613\u4e0e\u6b3a\u8bc8\u4ea4\u6613\u5728\u67d0\u4e9b\u7279\u5f81\u4e0a\u53ef\u80fd\u5b58\u5728\u76f8\u4f3c\u6027\uff0c\u5bfc\u81f4\u8bef\u62a5\u60c5\u51b5\u7684\u53d1\u751f\u3002\u9700\u8981\u6df1\u5165\u7814\u7a76\u6b63\u5e38\u4ea4\u6613\u548c\u6b3a\u8bc8\u4ea4\u6613\u7684\u533a\u5206\u8fb9\u754c\uff0c\u4f18\u5316\u68c0\u6d4b\u7b97\u6cd5\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u7cbe\u51c6\u5ea6\uff0c\u964d\u4f4e\u5047\u9633\u6027\u7387\u3002</li> <li>\u6d77\u91cf\u4ea4\u6613\u6570\u636e\u7ed9\u68c0\u6d4b\u7cfb\u7edf\u5e26\u6765\u4e86\u8ba1\u7b97\u548c\u5b58\u50a8\u538b\u529b\u3002\u9700\u8981\u5728\u7b97\u6cd5\u8bbe\u8ba1\u4e0a\u8ffd\u6c42\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387,\u5e76\u5145\u5206\u5229\u7528\u5206\u5e03\u5f0f\u8ba1\u7b97\u3001\u5e76\u884c\u5904\u7406\u7b49\u6280\u672f\u624b\u6bb5,\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u3002</li> <li>\u6b3a\u8bc8\u5408\u7ea6\u7684\u4ee3\u7801\u5b9e\u73b0\u591a\u79cd\u591a\u6837\uff0c\u9700\u8981\u51c6\u786e\u7684\u63d0\u53d6\u548c\u8868\u793a\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u7684\u5173\u952e\u7279\u5f81\uff0c\u8bbe\u8ba1\u6709\u9488\u5bf9\u6027\u7684\u76d1\u6d4b\u65b9\u6cd5\uff0c\u5e76\u5177\u6709\u4e00\u5b9a\u6269\u5c55\u6027\uff0c\u4ee5\u5e94\u5bf9\u65b0\u578b\u6b3a\u8bc8\u624b\u6bb5\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_9","title":"\u62df\u91c7\u53d6\u7684\u7814\u7a76\u65b9\u6cd5\u3001\u6280\u672f\u8def\u7ebf\u3001\u8bd5\u9a8c\u65b9\u6848\u53ca\u53ef\u884c\u6027\u5206\u6790","text":"<p>\u4e3a\u5b9e\u73b0\u9884\u8bbe\u7684\u7814\u7a76\u76ee\u6807\uff0c\u672c\u7814\u7a76\u62df\u7efc\u5408\u8fd0\u7528\u4ee5\u4e0b\u6280\u672f\uff1a</p> <ol> <li>\u4ea4\u6613\u5206\u6790\u6280\u672f\uff1a\u901a\u8fc7\u5bf9\u533a\u5757\u94fe\u4ea4\u6613\u6570\u636e\u7684\u89e3\u6790\uff0c\u63d0\u53d6\u4ea4\u6613\u4e2d\u8574\u542b\u7684\u9ad8\u9636DeFi\u8bed\u4e49\u4fe1\u606f\uff0c\u6316\u6398\u6b3a\u8bc8\u4ee3\u5e01\u7684\u6d41\u8f6c\u6a21\u5f0f\u548c\u7528\u6237\u884c\u4e3a\u7279\u5f81\uff0c\u4e3a\u6b3a\u8bc8\u4ea4\u6613\u7684\u8bc6\u522b\u63d0\u4f9b\u4f9d\u636e\u3002</li> <li>\u5730\u5740\u805a\u7c7b\u6280\u672f:\u8fd0\u7528\u57fa\u4e8e\u4ea4\u6613\u5173\u7cfb\u548c\u884c\u4e3a\u7279\u5f81\u7684\u805a\u7c7b\u7b97\u6cd5,\u5c06\u96b6\u5c5e\u4e8e\u540c\u4e00\u63a7\u5236\u4e3b\u4f53\u7684\u591a\u4e2a\u5730\u5740\u8fdb\u884c\u5f52\u7c7b,\u63ed\u793a\u6b3a\u8bc8\u4ee3\u5e01\u80cc\u540e\u7684\u5e55\u540e\u64cd\u7eb5\u8005,\u4e3a\u6f5c\u5728\u6b3a\u8bc8\u5408\u7ea6\u7684\u8bc6\u522b\u63d0\u4f9b\u91cd\u8981\u7ebf\u7d22\u3002</li> <li>\u667a\u80fd\u5408\u7ea6\u76f8\u4f3c\u5ea6\u5206\u6790\u6280\u672f:\u901a\u8fc7\u6e90\u4ee3\u7801\u3001\u5b57\u8282\u7801\u3001\u63a7\u5236\u6d41\u56fe\u7b49\u591a\u5c42\u6b21\u7684\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u548c\u6bd4\u8f83,\u53d1\u73b0\u529f\u80fd\u76f8\u8fd1\u6216\u4ee3\u7801\u76f8\u4f3c\u7684\u667a\u80fd\u5408\u7ea6,\u8bc6\u522b\u51fa\u6f5c\u4f0f\u7684\u6b3a\u8bc8\u5408\u7ea6,\u6709\u6548\u6269\u5927\u6b3a\u8bc8\u5408\u7ea6\u7684\u68c0\u51fa\u8303\u56f4\u3002</li> <li>\u667a\u80fd\u5408\u7ea6\u9759\u6001\u5206\u6790\u6280\u672f:\u7efc\u5408\u8fd0\u7528\u7b26\u53f7\u6267\u884c\u3001\u6570\u636e\u6d41\u5206\u6790\u3001\u63a7\u5236\u6d41\u5206\u6790\u7b49\u7a0b\u5e8f\u5206\u6790\u6280\u672f,\u5bf9\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u5168\u9762\u7684\u8bed\u6cd5\u8bed\u4e49\u68c0\u67e5,\u7cbe\u51c6\u8bc6\u522b\u5408\u7ea6\u4e2d\u9690\u85cf\u7684\u540e\u95e8\u3001\u6743\u9650\u7f3a\u9677\u7b49\u6b3a\u8bc8\u98ce\u9669\u70b9\u3002</li> </ol> <p></p> <p>\u56fe1 \u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u68c0\u6d4b</p> <p>\u56fe\u4e00\u5c55\u793a\u4e86\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u68c0\u6d4b\u7684\u65b9\u6cd5\u6d41\u7a0b\u3002\u9996\u5148\uff0c\u901a\u8fc7\u5bf9\u533a\u5757\u94fe\u4e0a\u7684\u4ea4\u6613\u6570\u636e\u8fdb\u884c\u8bed\u4e49\u5316\u89e3\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u51fa\u4e0e\u4ea4\u6613\u76f8\u5173\u7684\u4ee3\u5e01\u4fe1\u606f\u3001\u8d44\u91d1\u6d41\u5411\u56fe\u4ee5\u53ca\u64cd\u4f5c\u5730\u5740\u3002\u8fdb\u4e00\u6b65\u7684\u5206\u6790\u5c06\u63ed\u793a\u4ee3\u5e01\u4ef7\u683c\u7684\u6ce2\u52a8\u60c5\u51b5\u4ee5\u53ca\u8d44\u91d1\u7684\u6d41\u5411\u3002\u901a\u8fc7\u6bd4\u5bf9\u7591\u4f3c\u4ee3\u5e01\u56e2\u961f\u5730\u5740\u4e0e\u8d44\u91d1\u6d41\u5411\u4eba\u7684\u4ea4\u6613\u8bb0\u5f55\u548c\u4ea4\u6613\u64cd\u4f5c\u8005\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc4\u4f30\u8be5\u4ea4\u6613\u662f\u5426\u6d89\u53ca\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\u3002</p> <p></p> <p>\u56fe2 \u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u68c0\u6d4b</p> <p>\u56fe\u4e8c\u5c55\u793a\u4e86\u6b3a\u8bc8\u4ee3\u5e01\u5408\u7ea6\u68c0\u6d4b\u7684\u601d\u8def\u3002</p> <ol> <li>\u4f7f\u7528\u9759\u6001\u5206\u6790\u7684\u65b9\u5f0f\uff0c\u5bf9\u4ee3\u5e01\u5408\u7ea6\u4e2d\u9690\u85cf\u7684\u540e\u95e8\u8fdb\u884c\u5206\u6790\u3002</li> <li>\u4f7f\u7528\u5730\u5740\u805a\u7c7b\u548c\u5408\u7ea6\u76f8\u4f3c\u5ea6\u5206\u6790\u7684\u65b9\u5f0f\uff0c\u5c06\u65b0\u90e8\u7f72\u7684\u4ee3\u5e01\u548c\u5df2\u77e5\u7684\u6b3a\u8bc8\u4ee3\u5e01\u8fdb\u884c\u5206\u6790\u6bd4\u5bf9\u3002</li> <li>\u4f7f\u7528\u4ea4\u6613\u5206\u6790\u7684\u65b9\u5f0f\uff0c\u5bf9\u4ee3\u5e01\u7684\u4ea4\u6613\u3001\u5206\u5e03\u8fdb\u884c\u5206\u6790\u3002</li> <li>\u4f7f\u7528\u8d26\u6237\u7684\u6df7\u5e01\u60c5\u51b5\u548c\u4ea4\u6613\u6570\u91cf\uff0c\u5206\u6790\u8d26\u6237\u7684\u6f5c\u5728\u98ce\u9669\u3002</li> </ol> <p>\u4e0a\u8ff0\u6280\u672f\u5747\u5df2\u5728\u533a\u5757\u94fe\u5b89\u5168\u3001\u7a0b\u5e8f\u5206\u6790\u7b49\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u7814\u7a76\u548c\u5e94\u7528\uff0c\u5177\u6709\u6210\u719f\u7684\u7406\u8bba\u57fa\u7840\u548c\u5b9e\u8df5\u6848\u4f8b\u3002\u8fd9\u4e3a\u672c\u7814\u7a76\u7684\u987a\u5229\u5f00\u5c55\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u6280\u672f\u4fdd\u969c\u548c\u7ecf\u9a8c\u53c2\u8003\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7814\u7a76\u6210\u529f\u7684\u53ef\u80fd\u6027\u548c\u7ed3\u679c\u7684\u53ef\u4fe1\u5ea6\u3002</p>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_10","title":"\u7814\u7a76\u7684\u521b\u65b0\u70b9","text":"<p>\u672c\u7814\u7a76\u7684\u521b\u65b0\u70b9\u6709\uff1a</p> <ol> <li>\u672c\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u79cd\u96c6\u6210\u591a\u79cd\u7279\u5f81\u5206\u6790\u65b9\u6cd5\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u68c0\u6d4b\u6846\u67b6\uff0c\u8f83\u73b0\u6709\u65b9\u6cd5\u5b9e\u73b0\u4e86\u66f4\u5e7f\u7684\u8986\u76d6\u8303\u56f4\u548c\u66f4\u9ad8\u7684\u68c0\u6d4b\u7cbe\u5ea6\u3002\u7531\u6b64\u6784\u5efa\u4e86\u4e00\u4e2a\u5168\u9762\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u6570\u636e\u96c6\uff0c\u6db5\u76d6\u4e86\u5404\u7c7b\u5178\u578b\u7684\u6b3a\u8bc8\u624b\u6cd5\u3002</li> <li>\u672c\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u667a\u80fd\u5408\u7ea6\u76f8\u4f3c\u5ea6\u5206\u6790\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u5c06\u5408\u7ea6\u4ee3\u7801\u62bd\u8c61\u4e3a\u8bed\u6cd5\u4f9d\u8d56\u56fe\uff0c\u901a\u8fc7\u56fe\u5377\u79ef\u64cd\u4f5c\u5b66\u4e60\u5408\u7ea6\u7684\u8bed\u4e49\u8868\u793a\uff0c\u5728\u6b3a\u8bc8\u5408\u7ea6\u68c0\u6d4b\u4efb\u52a1\u4e0a\u53d6\u5f97\u4e86\u4f18\u4e8e\u4f20\u7edf\u65b9\u6cd5\u7684\u6548\u679c\u3002\u6b64\u5916\uff0c\u6240\u63d0\u51fa\u7684\u76f8\u4f3c\u5ea6\u5206\u6790\u7b97\u6cd5\u8fd8\u53ef\u7528\u4e8e\u5408\u7ea6\u514b\u9686\u68c0\u6d4b\u3001\u5408\u7ea6\u6f0f\u6d1e\u68c0\u6d4b\u7b49\u667a\u80fd\u5408\u7ea6\u5206\u6790\u573a\u666f\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u901a\u7528\u6027\u3002</li> <li>\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u4ea4\u6613\u6a21\u5f0f\u3001\u8d44\u91d1\u6d41\u5411\u3001\u4ee3\u7801\u8c03\u7528\u7684\u5730\u5740\u805a\u7c7b\u7b97\u6cd5\uff0c\u6539\u8fdb\u4e86\u5df2\u6709\u7814\u7a76\u7684\u5730\u5740\u805a\u7c7b\u7b97\u6cd5\u53ef\u89e3\u91ca\u6027\u5dee\u3001\u8ba1\u7b97\u5f00\u9500\u5927\u7b49\u95ee\u9898\u3002\u6240\u63d0\u51fa\u7684\u5730\u5740\u805a\u7c7b\u7b97\u6cd5\u8fd8\u53ef\u7528\u4e8e\u9493\u9c7c\u68c0\u6d4b\uff0c\u53cd\u6d17\u94b1\u5206\u6790\u7b49\u5de5\u4f5c\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_11","title":"\u7814\u7a76\u8ba1\u5212\u53ca\u9884\u6d4b\u8fdb\u5c55","text":"<ol> <li>2024\u5e7410\u6708\u524d\uff0c\u8c03\u7814\u548c\u6536\u96c6\u8fd1\u5e74\u6765\u5173\u4e8e\u4ee3\u5e01\u6b3a\u8bc8\u7684\u5b66\u672f\u548c\u884c\u4e1a\u62a5\u544a\uff0c\u603b\u7ed3\u548c\u5f52\u7eb3\u4ee3\u5e01\u6b3a\u8bc8\u7684\u7c7b\u578b\u548c\u7279\u70b9\u3002\u521d\u6b65\u7b5b\u9009\u548c\u6807\u6ce8\u6570\u636e\uff0c\u5efa\u7acb\u521d\u6b65\u7684\u6b3a\u8bc8\u4ea4\u6613\u6570\u636e\u96c6\u3002</li> <li>2025\u5e746\u6708\u524d\uff0c\u6839\u636e\u7b2c\u4e00\u9636\u6bb5\u6536\u96c6\u7684\u6570\u636e\u548c\u6587\u732e\u56de\u987e\u7ed3\u679c\uff0c\u8bbe\u8ba1\u521d\u6b65\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u76d1\u6d4b\u89c4\u5219\u548c\u7b97\u6cd5\u3002\u5b9e\u73b0\u76d1\u6d4b\u7cfb\u7edf\u7684\u539f\u578b\uff0c\u5e76\u5728\u5b9e\u9645\u6570\u636e\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002\u5229\u7528\u7a0b\u5e8f\u5206\u6790\u3001\u5730\u5740\u805a\u7c7b\u7b49\u65b9\u6cd5\uff0c\u68c0\u6d4b\u6b3a\u8bc8\u5408\u7ea6\u3002\u6839\u636e\u6d4b\u8bd5\u7ed3\u679c\u4e0d\u65ad\u8fdb\u884c\u7cfb\u7edf\u8fed\u4ee3\u3002</li> <li>2025\u5e7410\u6708\u524d\uff0c\u5bf9\u7cfb\u7edf\u8fdb\u884c\u5168\u9762\u8bc4\u4f30\uff0c\u5305\u62ec\u51c6\u786e\u7387\u3001\u53ec\u56de\u7387\u548c\u5b9e\u65f6\u6027\u7b49\u3002\u6574\u7406\u7814\u7a76\u6210\u679c\uff0c\u64b0\u5199\u5b66\u672f\u8bba\u6587\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_12","title":"\u9884\u671f\u7814\u7a76\u6210\u679c","text":"<ol> <li>\u4ee3\u5e01\u6b3a\u8bc8\u7c7b\u578b\u548c\u7279\u5f81\u7684\u7cfb\u7edf\u6574\u7406\uff1a\u901a\u8fc7\u6587\u732e\u56de\u987e\u548c\u5f00\u53d1\u7684\u68c0\u6d4b\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e00\u4efd\u5173\u4e8e\u4ee3\u5e01\u6b3a\u8bc8\u7c7b\u578b\u548c\u884c\u4e3a\u7279\u5f81\u7684\u8be6\u5c3d\u62a5\u544a\uff0c\u4e3a\u5b66\u672f\u754c\u548c\u4e1a\u754c\u63d0\u4f9b\u7814\u7a76\u57fa\u7840\u3002</li> <li>\u6b3a\u8bc8\u6a21\u5f0f\u548c\u884c\u4e3a\u8bc6\u522b\u6846\u67b6\uff1a\u5efa\u7acb\u4e00\u4e2a\u7406\u8bba\u6846\u67b6\uff0c\u7528\u4e8e\u8bc6\u522b\u548c\u5206\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u4ee3\u5e01\u6b3a\u8bc8\u884c\u4e3a\uff0c\u589e\u5f3a\u5bf9\u65b0\u51fa\u73b0\u6b3a\u8bc8\u624b\u6bb5\u7684\u7406\u89e3\u548c\u5e94\u5bf9\u3002</li> <li>\u4ee3\u5e01\u4ea4\u6613\u76d1\u6d4b\u7cfb\u7edf\uff1a\u5f00\u53d1\u4e00\u4e2a\u80fd\u5b9e\u65f6\u76d1\u6d4b\u548c\u8b66\u62a5\u53ef\u7591\u4ee3\u5e01\u4ea4\u6613\u7684\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5c06\u5229\u7528\u6700\u65b0\u7684\u6570\u636e\u5206\u6790\u6280\u672f\uff0c\u63d0\u9ad8\u6b3a\u8bc8\u68c0\u6d4b\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\u3002</li> <li>\u6b3a\u8bc8\u4ee3\u5e01\u5206\u6790\u5de5\u5177\uff1a\u521b\u5efa\u4e00\u4e2a\u98ce\u63a7\u4f53\u7cfb\uff0c\u7efc\u5408\u7a0b\u5e8f\u5206\u6790\u548c\u94fe\u4e0a\u4ea4\u6613\u4fe1\u606f\uff0c\u5bf9\u6f5c\u5728\u7684\u6b3a\u8bc8\u4ee3\u5e01\u8fdb\u884c\u8bc6\u522b\u3002</li> </ol>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_13","title":"\u7814\u7a76\u57fa\u7840","text":"","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_14","title":"\u4e0e\u672c\u9879\u76ee\u6709\u5173\u7684\u7814\u7a76\u5de5\u4f5c\u79ef\u7d2f\u548c\u5df2\u53d6\u5f97\u7684\u7814\u7a76\u5de5\u4f5c\u6210\u7ee9\uff08\u62a5\u544a\u8005\u672c\u4eba\u7684\u5355\u72ec\u5217\u51fa\uff09","text":"<p>\u4e0e\u672c\u9879\u76ee\u6709\u5173\u7684\u57fa\u7840\u6027\u7684\u7814\u7a76\u5de5\u4f5c\u79ef\u7d2f\u6709\u4ee5\u4e0b\u90e8\u5206\uff0c\u5747\u4e3a\u672c\u4eba\u5b8c\u6210\uff1a</p> <ol> <li>\u5bf9\u76f8\u5173\u6587\u732e\u3001\u5df2\u62ab\u9732\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4e8b\u4ef6\u7684\u5f52\u7eb3\u603b\u7ed3\u3002</li> <li>\u5bf9\u4ee5\u592a\u574a\u865a\u62df\u673a\u6267\u884c\u7684\u533a\u5757\u3001\u4ea4\u6613\u7684\u89e3\u6790\u3002</li> <li>\u5bf9\u4ee5\u592a\u574a\u4ea4\u6613\u7684\u90e8\u5206DeFi\u8bed\u4e49\u5316\u89e3\u6790\u3002</li> <li>\u5bf9\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u76f8\u4f3c\u5ea6\u7684\u5206\u6790\u5de5\u4f5c\u3002</li> </ol> <p>\u5728\u8fd9\u4e9b\u57fa\u5de5\u4f5c\u79ef\u7d2f\u7684\u57fa\u7840\u4e0a\uff0c\u6839\u636e\u5bf9\u73b0\u6709\u7684\u6b3a\u8bc8\u4ea4\u6613\u6570\u636e\u7684\u5f52\u7eb3\u603b\u7ed3\uff0c\u5b8c\u6210\u4e86\u521d\u6b65\u7684\u4ee3\u5e01\u6b3a\u8bc8\u4ea4\u6613\u76d1\u6d4b\u7cfb\u7edf\uff0c\u7a33\u5b9a\u8fd0\u884c\u5e76\u5b9e\u65f6\u76d1\u6d4b\u4ee5\u592a\u574a\u4e0a\u7684\u4ea4\u6613\uff0c\u79ef\u7d2f\u4e86\u4e00\u4e9b\u591a\u6b3a\u8bc8\u4ea4\u6613\u6570\u636e\u3002</p>","tags":["scam"]},{"location":"hidden/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/#_15","title":"\u5df2\u5177\u5907\u7684\u5b9e\u9a8c\u3001\u8d44\u6599\u7b49\u6761\u4ef6\uff0c\u5c1a\u7f3a\u5c11\u7684\u5b9e\u9a8c\u3001\u8d44\u6599\u6761\u4ef6\u548c\u62df\u89e3\u51b3\u7684\u9014\u5f84","text":"<p>\u5df2\u5177\u5907\u5fc5\u8981\u7684\u8ba1\u7b97\u786c\u4ef6\u3001\u8f6f\u4ef6\u3002\u5b9e\u9a8c\u5ba4\u8fd0\u884c\u533a\u5757\u94fe\u8282\u70b9\uff0c\u53ef\u4ee5\u5b9e\u65f6\u83b7\u53d6\u6700\u65b0\u7684\u533a\u5757\u6570\u636e\u3002</p>","tags":["scam"]},{"location":"hidden/%E9%92%93%E9%B1%BC/","title":"Phishing","text":""},{"location":"hidden/%E9%92%93%E9%B1%BC/#definition","title":"Definition","text":"<p>\u94fe\u4e0a\u9493\u9c7c\u884c\u4e3a\uff08On-chain phishing\uff09\u6307\u7684\u662f\u653b\u51fb\u8005\u901a\u8fc7\u7279\u5b9a\u624b\u6bb5\u8bf1\u5bfc\u53d7\u5bb3\u8005\u5c06\u52a0\u5bc6\u4ee3\u5e01\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8f6c\u79fb\u7ed9\u653b\u51fb\u8005\u7684\u4e00\u79cd\u7f51\u7edc\u5b89\u5168\u653b\u51fb\u5f62\u5f0f\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6b64\u7c7b\u884c\u4e3a\u53ef\u7ec6\u5206\u4e3a\u76f4\u63a5\u8f6c\u79fb\uff08Direct Transfer\uff09\u548c\u95f4\u63a5\u8f6c\u79fb\uff08Indirect Transfer\uff09\u3002\u5728\u76f4\u63a5\u8f6c\u79fb\u7684\u653b\u51fb\u6a21\u5f0f\u4e2d\uff0c\u53d7\u5bb3\u8005\u88ab\u8bf1\u5bfc\u6267\u884c <code>transfer</code> \u64cd\u4f5c\uff0c\u5c06\u4ee3\u5e01\u76f4\u63a5\u4ece\u5176\u94b1\u5305\u53d1\u9001\u5230\u653b\u51fb\u8005\u7684\u5730\u5740\u3002\u95f4\u63a5\u8f6c\u79fb\u6d89\u53ca\u66f4\u4e3a\u590d\u6742\u7684\u6b65\u9aa4\uff0c\u9996\u5148\u5305\u62ec\u53d7\u5bb3\u8005\u5728\u4e0d\u5b8c\u5168\u4e86\u89e3\u60c5\u51b5\u7684\u60c5\u51b5\u4e0b\u5bf9\u653b\u51fb\u8005\u8fdb\u884c\u6388\u6743\uff08<code>approve</code>/<code>permit</code>\uff09\uff0c\u5141\u8bb8\u653b\u51fb\u8005\u4ee3\u8868\u4ed6\u4eec\u6267\u884c<code>transferFrom</code>\u64cd\u4f5c\u3002\u8fd9\u4e00\u8fc7\u7a0b\u901a\u5e38\u6db5\u76d6\u4e86\u5bf9\u53d7\u5bb3\u8005\u7684\u6743\u9650\u8bbe\u7f6e\u548c\u53ef\u80fd\u7684\u4fe1\u4efb\u6ee5\u7528\u3002</p> <p>Ice Phishing\uff1aIce Phishing\u4e2d\uff0c\u653b\u51fb\u8005\u8bf1\u4f7f\u7528\u6237\u901a\u8fc7\u6388\u6743\u64cd\u4f5c\uff0c\u5141\u8bb8\u653b\u51fb\u8005\u4ece\u7528\u6237\u8d26\u6237\u4e2d\u8f6c\u79fb\u4ee3\u5e01\u3002\u4e00\u65e6\u83b7\u5f97\u6388\u6743\uff0c\u653b\u51fb\u8005\u968f\u540e\u6267\u884c<code>transferFrom</code>\u64cd\u4f5c\uff0c\u5c06\u7528\u6237\u7684\u8d44\u4ea7\u8f6c\u79fb\u5230\u653b\u51fb\u8005\u63a7\u5236\u7684\u5730\u5740\u3002</p> <p>Address Poisoning Phishing\uff1aAddress Poisoning Phishing\u6d89\u53ca\u5411\u7528\u6237\u53d1\u9001\u5fae\u91cf\u7684\u4ee3\u5e01\u6216\u4e0d\u5177\u4ef7\u503c\u7684\u4ee3\u5e01\uff0c\u4f7f\u5f97\u653b\u51fb\u8005\u7684\u5730\u5740\u51fa\u73b0\u5728\u7528\u6237\u7684\u4ea4\u6613\u5386\u53f2\u8bb0\u5f55\u4e2d\u3002\u8fd9\u4e00\u7b56\u7565\u5229\u7528\u4e86\u7528\u6237\u53ef\u80fd\u4f1a\u9519\u8bef\u5730\u5c06\u503c\u94b1\u7684\u4ee3\u5e01\u8f6c\u79fb\u5230\u5148\u524d\u4ea4\u6613\u4e2d\u51fa\u73b0\u7684\u5730\u5740\u7684\u5fc3\u7406\u548c\u64cd\u4f5c\u5931\u8bef\uff0c\u4ece\u800c\u8bef\u5c06\u8d44\u4ea7\u8f6c\u7ed9\u653b\u51fb\u8005\u3002</p>"},{"location":"hidden/%E9%92%93%E9%B1%BC/#detection","title":"Detection","text":""},{"location":"hidden/%E9%92%93%E9%B1%BC/#ice-phishing-detection","title":"Ice Phishing Detection","text":"<p>\u5b9a\u4e492.1.1 \u5b9a\u4e49\u4e00\u4e2a\u4ea4\u6613 \\(tx\\) \u4e2d\uff0c\u6240\u6709\u7684 \\(transfer\\) \u884c\u4e3a\u4e3a\\(\\text{TransferSet}(tx)\\)\u3002</p> <p>\u5b9a\u4e492.1.2 \u5b9a\u4e49\u4e00\u4e2a\u4ea4\u6613 \\(tx\\) \u4e2d\uff0c\u4e00\u4e2a\u8d26\u6237 \\(account\\) \u7684\u4f59\u989d\u53d8\u5316\u4e3a \\(\\text{BalanceChange}(account)\\)\u3002</p> <p>\u5b9a\u4e492.1.3 \u5b9a\u4e49\u4e00\u4e2a\u8c03\u7528\u5728\u4e00\u7b14\u4ea4\u6613\u4e2d\u7684 \\(\\text{Participant}(action)\\) \uff08\u5728RugPull\u68c0\u6d4b\u4e2d\u5b9a\u4e49\u4e86\uff09</p> <p>\u5b9a\u4e492.1.4 \u8003\u8651\u5230\u9493\u9c7c\u4ea4\u6613\u5f80\u5f80\u6bd4\u8f83\u7b80\u5355\u7684\u7279\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5224\u65ad\\(transfer\\)\u662f\u5426\u7b80\u5355\u7684\u51fd\u6570\u3002\u5224\u65ad\u4f9d\u636e\u4e3b\u8981\u67092\u4e2a</p> <ul> <li>\u9493\u9c7c\u5408\u7ea6\u4e00\u822c\u4e0d\u6253Log\u3002</li> </ul> <p>[!NOTE] </p> <p>\u8fd9\u4e2a\u5e76\u4e0d\u662f\u5f88\u6709\u4f9d\u636e\u3002\u552f\u4e00\u53d1\u73b0\u7684\u6253Log\u7684\u7591\u4f3c\u9493\u9c7c\u4ea4\u6613\uff1ahttps://app.blocksec.com/explorer/tx/eth/0x3f6d8a8384b3c8fdb676541b319ac6f7777e5ee418b3fa06b4ce60bc383c8208?line=0</p> <ul> <li>\u9493\u9c7c\u4ea4\u6613\u7684\u8d44\u91d1\u6d41\u4e00\u822c\u6bd4\u8f83\u7b80\u5355\uff0c\u53d7\u5bb3\u8005\u7684\u8d44\u91d1\u5355\u7eaf\u7684\u51cf\u5c11\u3002</li> </ul> \\[ \\text{IsSimple}(transfer) \\leftarrow (\\forall c \\in \\text{BalanceChange}(transfer.from), c \\le 0) \\\\ \\land (\\forall i \\in \\text{Participant}(transfer), |i.logs| = 0) \\] <p>\u5b9a\u4e492.1.5 \u7ed9\u51fa\u5224\u65ad\u4e00\u4e2atransfer\u662f\u5426\u662fice phishing\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>transfer.from \u4e0d\u662f tx.origin \u3002\u8fd9\u8bf4\u660etransfer \u4e0d\u662f\u7528\u6237\u4e3b\u52a8\u53d1\u8d77\u7684\u3002</li> <li>transfer.from \u662f EOA\u3002</li> <li>Transfer\u7684\u91d1\u989d\u51e0\u4e4e\u662f\u7528\u6237\u7684\u4f59\u989d\u3002\u653b\u51fb\u8005\u6ca1\u6709\u7406\u7531\u4e0d\u628a\u7528\u6237\u7684\u4f59\u989d\u53d6\u5149</li> </ol> <p>[!NOTE]</p> <p>\u7136\u800c\u73b0\u5b9e\u6709\u4e00\u4e9b\u7591\u4f3c\u9493\u9c7c\u7684\u4ea4\u6613\uff0c\u7559\u4e86\u5f88\u591a\u94b1\uff1a https://app.blocksec.com/explorer/tx/eth/0x32f17ac8b2d471d8a1461c7f32da32a1bb73e1948ee53bcc5346e8c77dcbf61b/?line=0</p> <ol> <li>\u9493\u9c7c\u4ea4\u6613\u6bd4\u8f83\u7b80\u5355\uff08\u5b9a\u4e492.1.4\uff09</li> <li> <p>transfer\u7684Participant\u548crecipient\u4e0d\u5728\u767d\u540d\u5355\u4e2d\u3002\u7531\u4e8e\u4e00\u4e9b\u4ea4\u6613\u5b9e\u5728\u96be\u4ee5\u533a\u5206\uff0c\u52a0\u5165\u767d\u540d\u5355\u673a\u5236\u3002\uff08~~\u6216\u8005\u7ed3\u5408\u5386\u53f2\u4ea4\u6613\uff1f\u4f8b\u5982\u6709\u8d44\u91d1\u5f80\u6765\uff1fApprove\u548cTransferFrom\u7684\u95f4\u9694\uff1f\u6709\u5f85\u8003\u8bc1~~\uff09\u5982\u679c\u4e0d\u52a0\u5165\uff0c\u4f1a\u6709\u8f83\u591a\u7684FP\u3002\u76ee\u524d\uff0c\u5bfc\u5165\u4e86\u6240\u6709\u70ed\u94b1\u5305\u7684\u5730\u5740\uff0c\u4ee5\u53ca0x0\u548c0xdead\u548c\u90e8\u5206\u5408\u7ea6\u4e3a\\(Whitelist\\)\u3002\u4e0d\u52a0\u5165\u767d\u540d\u5355\u5bfc\u81f4\u7684FP\u5982\u4e0b\u3002\u5982\u679c\u4e0d\u770b\u6807\u7b7e\uff0c\u6211\u771f\u4f1a\u89c9\u5f97\u53ef\u80fd\u662f\u9493\u9c7c\u3002</p> </li> <li> <p>e.g. \u4ea4\u6613\u6240\u70ed\u94b1\u5305 https://app.blocksec.com/explorer/tx/eth/0x7dc52028adacda75a5a90d25f2dc48f5a8282b2788aaba5a9783fa3c46cf8b3c</p> </li> <li>e.g. \u8de8\u94fe\u6865 https://app.blocksec.com/explorer/tx/eth/0xf9db918627ad9774aa06929070cfdf7e65c7b2db093da600889b903ee6f9e414?line=5</li> </ol> \\[ \\text{IsIcePhishing}(transfer) \\leftarrow transfer.from \\neq transfer.tx.from \\land \\text{isEOA}(transfer.from)  \\land \\\\ \\frac{transfer.value}{transfer.from.value} &gt; limit \\land \\text{IsSimple}(transfer) \\land \\\\ \\text{Participants}(transfer) \\cap \\text{Whitelist} = \\empty \\land transfer.to \\notin \\text{Whitelist} \\] <p>[!NOTE]</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u65e0\u6cd5\u5224\u65ad\u7528\u6237\u7684Approve\u884c\u4e3a\uff0c\u662f\u5426\u662f\u53d7\u5230\u8bf1\u9a97\u540e\u7684\u884c\u4e3a\u3002\u6240\u4ee5\u8fd9\u91cc\u5e94\u8be5\u662f Potential Ice Phishing\u3002</p> <p>TransferFrom\u884c\u4e3a\u4e5f\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u7279\u6743\u7684TransferFrom\uff0c\u4f8b\u5982\u76f4\u63a5\u4eceEOA\u53d1\u8d77\uff0c\u6216\u8005\u8c03\u7528\u6709\u8eab\u4efd\u9a8c\u8bc1\u7684\u7279\u6743\u5408\u7ea6\u3002\u53e6\u4e00\u79cd\u662f\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8c03\u7528\u7684TransferFrom\uff0c\u5982Arbitrary Call\uff0c\u6216\u8005\u6709\u95ee\u9898\u7684TransferFrom\u3002\u73b0\u5728\u4e5f\u6ca1\u6709\u505a\u4efb\u4f55\u5224\u65ad\u3002</p>"},{"location":"hidden/%E9%92%93%E9%B1%BC/#address-poisoning-phishing-detection","title":"Address Poisoning Phishing Detection","text":"<p>\u5b9a\u4e492.2.1 \u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613\u7684\u5b58\u50a8\u53d8\u5316\u6765\u68c0\u6d4b\u5047\u4ee3\u5e01\u3002\u5047Token\u4e3a\u4e86\u6b3a\u9a97\u7528\u6237\uff0c\u5fc5\u7136\u8981\u52a0Log\uff0c\u5927\u6982\u662f\u51fa\u4e8e\u8282\u7701Gas\u7684\u76ee\u7684\uff0c\u89c2\u5bdf\u5230\u7684\u5047Token\u4e0d\u4f1a\u4fee\u6539Storage\u3002</p> \\[\\text{IsFakeTransfer}(transfer) \\leftarrow |\\text{TransferSet}(transfer.tx)| &gt; limit \\land \\text{StorageWrite}(transfer.tx) = \\emptyset\\] <p>\u5b9a\u4e492.2.2 \u5c06\u5411\u7528\u6237account\u53d1\u9001\u5047Token\uff0c\u6216\u8005\u5f88\u5c11\u91cf\u771fToken\u7684\u6240\u6709\u5730\u5740\u8bb0\u4e3a</p> \\[\\text{PoisonAddressSet}(account) = \\bigcup_{transfer} \\{ transfer.from \\mid transfer.to=account \\land \\\\ (\\text{IsFakeTransfer}(transfer) \\lor (\\neg \\text{IsFakeTransfer}(transfer) \\land transfer.amount &lt; \\text{limit})) \\}\\] <p>[!NOTE]</p> <p>\u5047Token Transfer\u5b9e\u5728\u662f\u592a\u591a\u4e86\uff0c\u6539\u6210\u8bb0\u5f55Tx\u8bd5\u8bd5\u3002\u5b9e\u9645\u4e0a\u5047Token Transfer\u6ca1\u6709\u5b8c\u6210\u9493\u9c7c\uff0c\u4f46\u662f\u653b\u51fb\u68c0\u6d4b\u7206\u51fa\u7684\u662f\u5047Token Transfer\u7684\u4ea4\u6613\uff0c\u6240\u4ee5\u5165\u53e6\u4e00\u4e2a\u5e93\u3002</p> <p>\u5b9a\u4e492.2.3 \u90a3\u4e48\u6211\u4eec\u68c0\u6d4bAddress Poisoning Phishing\u5c31\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f</p> \\[ IsAddressPoisonPhishing(transfer) \\leftarrow transfer.from = transfer.tx.from \\land \\\\ transfer.to \\in PoisonAddressSet(transfer.from) \\]"},{"location":"hidden/%E9%92%93%E9%B1%BC/#implementation","title":"Implementation","text":"<p>\u90e8\u7f72\u5728k8s\u4e0a\u8fd0\u884c\u4e86\uff0c\u8fd0\u884c\u5728 Ethereum, Bsc, Arbitrum, Optimism\u4e0a\u3002\u7ed3\u679c\u5199\u5165Postgresql\u7684 <code>archive_phishing</code> \u548c <code>archive_fake_token</code> \u8868\u3002</p> <p>\u7531\u4e8e\u548cRugpull\u68c0\u6d4b\u5171\u4eab\u4e00\u4e9b\u5e95\u5c42\u4ee3\u7801\uff0c\u76ee\u524d\u7ec4\u5408\u6210\u4e00\u4e2a\u670d\u52a1\u3002RugPull\u5199\u5728<code>archive_rugpull_info</code>\u8868\u4e2d\u3002\u7b80\u5355\u7684\u8fc7\u6ee4\u53ef\u4ee5\u67e5\u8868\u3002</p> <p>\u76ee\u524dRugPull\u68c0\u6d4b\u53ea\u80fd\u53d1\u73b0\u670d\u52a1\u5f00\u59cb\u8fd0\u884c\u4e4b\u540e\u90e8\u7f72\u7684Token\u7684RugPull\u884c\u4e3a\u3002\u56e0\u4e3a\u5bf9Token\u7591\u4f3c\u7279\u6743\u8d26\u6237\u7684\u76d1\u63a7\u5fc5\u987b\u4eceToken\u90e8\u7f72\u5f00\u59cb\u3002\u9891\u7e41\u7684\u91cd\u542f\uff08\u73b0\u5728\u57fa\u672c\u6ca1\u6709\u56e0\u4e3aBug\u91cd\u542f\uff0c\u4e3b\u8981\u662f\u66f4\u65b0\uff09\u4f1a\u5bfc\u81f4\u5f88\u591a\u7684\u9057\u6f0f\u3002\u8981\u4e0d\u8981\u5355\u72ec\u5c06Token\u7591\u4f3c\u7279\u6743\u8d26\u6237\u7684\u76d1\u63a7\u4f5c\u4e3a\u4e00\u4e2a\u670d\u52a1\uff1f</p> <p>\u5982\u679c\u53d1\u73b0\u8bef\u62a5\uff0c\u53ef\u4ee5\u5c06\u767d\u540d\u5355\u5730\u5740\u52a0\u5165Postgresql\u7684 <code>whitelist_phishing_participants</code>\uff0c\u7136\u540ePOST <code>http://host:7001/update_whitelist</code>\u3002</p>"},{"location":"hidden/%E9%92%93%E9%B1%BC/#evaluation","title":"Evaluation","text":"<p>\u5bf9\u4e8e\u964d\u4f4e\u653b\u51fb\u68c0\u6d4b\u7684FP\u7684\u5b9e\u9a8c\uff1a</p> <ul> <li>\u7528\u653b\u51fb\u68c0\u6d4b\u7684\u5171120\u4e2aFP\uff08\u7b5b\u9009\u51fa\u4e86\u90e8\u5206\u91cd\u590d\u7684\uff0c\u548c\u6253\u9519\u6807\u7b7e\u7684\uff09\uff0c\u505a\u6d4b\u8bd5\u3002</li> <li>Ice Phishing \u6709 6 \u4e2a FN\uff08\u4e0d\u6b626\u6bd4\u4ea4\u6613\uff09\uff0c<ul> <li>3\u4e2a\u539f\u56e0\u662f\u8f6c\u8d26\u7684\u91d1\u989d\u8fbe\u4e0d\u5230\u8bbe\u7f6e\u7684\u9608\u503c\uff08\u767e\u5206\u6bd4\uff09\u3002\u4f46\u662f\u964d\u4f4e\u9608\u503c\u4f1a\u63d0\u9ad8FP\uff0c\u4e0d\u5b9c\u4fee\u6539\u3002\uff083\u4e2aFN\u5305\u542b\u5f88\u591a\u6761\u4ea4\u6613\uff09\uff08\u4e8b\u5b9e\u4e0a\u53ef\u80fd\u4e5f\u4e0d\u662f\u9493\u9c7c\uff0c\u9493\u9c7c\u4e3a\u5565\u4e0d\u628a\u94b1\u8f6c\u5149\uff1f\uff09</li> <li>e.g. https://app.blocksec.com/explorer/tx/eth/0x32f17ac8b2d471d8a1461c7f32da32a1bb73e1948ee53bcc5346e8c77dcbf61b/?line=0</li> <li>2\u4e2a\u539f\u56e0\u662f\u88ab\u201c\u9493\u9c7c\u201d\u7684\u5730\u5740\u662f\u5408\u7ea6\u3002\u770b\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u9493\u9c7c\u8005\u5728\u8f6c\u79fb\u8d43\u6b3e\u3002</li> <li>e.g. https://app.blocksec.com/explorer/tx/eth/0xa48de887a2518869adfdee36f4353b5e8af438c00968f2d7a0dc2fb3b841b30e</li> <li>1\u4e2a\u539f\u56e0\u662f\u9493\u9c7c\u5408\u7ea6\u6253Log\u3002\u770b\u4e86\u4e00\u4e0b\uff0c\u88ab\u201c\u9493\u9c7c\u201d\u7684\u5730\u5740\u90fd\u662f\u540c\u4e00\u4e2aFunder\uff0c\u4e14\u53ea\u6709Transfer In\u548cApprove\u4ea4\u6613\uff0c\u611f\u89c9\u662f\u5728\u6d17\u94b1\u3002</li> <li>e.g. https://app.blocksec.com/explorer/tx/eth/0x3f6d8a8384b3c8fdb676541b319ac6f7777e5ee418b3fa06b4ce60bc383c8208?line=0</li> </ul> </li> <li>Payable Function \u51713\u4e2a\u3002\u6ca1\u6709\u5bf9Payable Function\u505a\u68c0\u6d4b\uff0c\u8fd9\u4e09\u4e2a\u5176\u5b9e\u66f4\u50cf\u6ca1\u6709\u6c60\u5b50\u7684RugPull\u3002\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u7279\u6743\u5730\u5740\u7684\u68c0\u6d4b\u673a\u5236\u627e\u51fa\u3002<ul> <li>e.g. https://app.blocksec.com/explorer/tx/bsc/0x7075739bd85ad8eaaa46be4594559ba94dc1744981265d48d8e5b3ba02bd998d</li> </ul> </li> <li>Address Poisoning \u6ca1\u6709\u53d1\u73b0 FN\u3002</li> <li>\u91d1\u989d\u8d85\u8fc71M\u7684\u90fd\u68c0\u6d4b\u51fa\u6765\u4e86\u3002</li> </ul> <p>\u653b\u51fb\u4e8b\u4ef6\u6570\u636e\u96c6\uff0c158\u4e2a\u653b\u51fb\uff0c</p> <ul> <li>5\u4e2aFP\uff1aArbitrary Call + TransferFrom</li> <li>e.g. Maestro Incident \u653b\u51fb\u8005\u6709\u9493\u9c7c\u6807\u7b7e</li> <li>e.g. BasketDao Incident \u653b\u51fb\u8005\u6709\u9493\u9c7c\u6807\u7b7e</li> <li>e.g. Bored Ape Incident \u653b\u51fb\u8005\u6709\u9493\u9c7c\u6807\u7b7e</li> <li>e.g. Seneca Incident \u8fd9\u4e2a\u4ea4\u6613\u5b9e\u5728\u662f\u548c\u666e\u901a\u7684\u9493\u9c7c\u4ea4\u6613\u4e00\u6a21\u4e00\u6837\u3002</li> <li>e.g. Spectra Incident</li> <li>1\u4e2a\u6ca1\u6709\u88ab\u653b\u51fb\u68c0\u6d4b\u62a5\u544a\u7684FP\uff1a</li> <li>e.g. https://app.blocksec.com/explorer/tx/bsc/0x5d42e47aade5892cd33f370bb7cd933fbe4d25ac35a29ed91c0dfe5d184cadb1/?line=5 \u6ca1\u6709\u6821\u9a8cAllowance\u7684TransferFrom</li> </ul> <p>\u9648\u5353\u5b66\u957f\u7684\u6570\u636e\u96c6\uff1aTODO</p> <p>\u94fe\u4e0a\u5386\u53f2\uff1aTODO</p>"},{"location":"hidden/%E9%92%93%E9%B1%BC/#something-interesting","title":"Something Interesting","text":"<ul> <li>\u7528\u6c60\u5b50\u6765\u5b58\u50a8\u83b7\u5229\u7684\u9ad8\u7ea7\u9493\u9c7c\uff1a https://app.blocksec.com/explorer/tx/bsc/0x385f13baa4fd2316780de7bba822b0b1e8187c0913b55bb4a6338f55fdf5ee0e/ </li> <li>\u8c8c\u4f3c\u662f\u9493\u9c7c\u8005\u5f52\u96c6\u8d43\u6b3e\u7684\u4ea4\u6613\uff0cvictim\u662f\u5408\u7ea6\uff1ahttps://app.blocksec.com/explorer/tx/eth/0x7467e5d0e0d20943f931757c444f249a69ed59eea85bc503cded0c9a15958aea/?line=2 </li> <li>\u9493\u9c7c+swap\uff1ahttps://app.blocksec.com/explorer/tx/bsc/0x898655eec538eeb3e76f7923f98aebe49c334ac6627832c37ba7a0daa4aa8a4e/?line=1 </li> <li>\u8c8c\u4f3c\u662f\u9493\u9c7c\uff0c\u4f46\u662f\u51fd\u6570\u6709\u4e00\u4e2a\u8ba9\u4eba\u8ff7\u60d1\u7684\u540d\u5b57<code>swapExactTokensForETHSupportingFeeOnTransferTokens</code>\uff1ahttps://app.blocksec.com/explorer/tx/bsc/0x62222d99085079dd26de2631353bc8f7e926a30eb07531da5925ad352a07175f/ </li> <li>\u6253Log\u7684\u5408\u7ea6\uff0c\u662f\u9493\u9c7c\u5417\uff1ahttps://app.blocksec.com/explorer/tx/eth/0x3f6d8a8384b3c8fdb676541b319ac6f7777e5ee418b3fa06b4ce60bc383c8208?line=0 \uff1f</li> <li>\u6709\u5f85\u5546\u69b7\uff0c\u7406\u8bba\u4e0a\uff0c\u6709\u53ef\u80fd\u8ba9\u7528\u6237approve\u7ed9\u5408\u7ea6\uff0c\u518d\u5728\u5408\u7ea6\u4e2d\u6388\u6743\u7ed9\u81ea\u5df1\uff0c\u5b8c\u6210\u9493\u9c7c\u3002</li> <li>https://app.blocksec.com/explorer/tx/eth/0xda80640f973ac2eea54704455d448f3bfc70a1c05e60c516ed023676568ecb63/?line=6</li> <li>https://app.blocksec.com/explorer/tx/bsc/0x342b0d971c58c3d81257d4d6dc2ddee86327c2efca8d682dae07840a1b25a0f3/?line=4</li> <li>https://app.blocksec.com/explorer/tx/eth/0xf9230a08278f14811d48e050249a0472945d65559a28d20462544f485810bd80/?line=0</li> <li>\u8868\u9762\u4e0a\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709\u7ed9\u51fa\u6b63\u786e\u7684Permit\u624d\u80fd\u521b\u9020\u51fa\u6b63\u786e\u5408\u7ea6\uff0c\u628a\u94b1\u8f6c\u8d70\u3002https://app.blocksec.com/explorer/tx/eth/0x31a222f52c0eb97bda383d846bd74c400e324027ec27f4db849723fe243c29fa/?line=5</li> <li>\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u83b7\u5229\u8005\u662f\u5199\u6b7b\u7684 https://app.blocksec.com/explorer/tx/eth/0xa85e64a86e4b4901a27bd4e5b74ad9004ea40e97656395c76fb8aa6c3994b938?line=0</li> </ul> <p>\u8fd8\u662f\u60f3\u7b80\u5355\u4e86\uff0c\u7528uwin\u7684\u5de5\u5177\u8c03\u4e86\u51e0\u4e2acase\uff0c\u53d1\u73b0\u4e24\u7c7b\u53cd\u4f8b\uff1a</p> <ul> <li>\u7279\u5b9a\u53c2\u6570\uff1a\u5bf9\u4e8epermit\u7c7b\u578b\u7684\u9493\u9c7c\uff0c\u53d1\u8d77transferFrom\u7684\u9493\u9c7c\u5408\u7ea6\u5f88\u53ef\u80fd\u662f\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u5173\u952e\u662f\u8981\u4f20\u6b63\u786e\u7684permit\u53c2\u6570\u3002\u53ea\u7528\u8fd9\u4e2a\u7ef4\u5ea6\u4f5c\u4e3a\u533a\u5206\u9493\u9c7c\u548c\u653b\u51fb\u7684\u8bdd\uff0c \u4f1a\u628a\u8fd9\u7c7b\u9493\u9c7c\u5168\u90fd\u5f53\u6210arbitrary call\u3002</li> <li>\u7279\u5b9a\u83b7\u5229\u8005\uff1a\u53c8\u6216\u8005\u662f\u9493\u9c7c\u5408\u7ea6\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u4f1a\u628a\u83b7\u5229\u53d1\u9001\u5230\u56fa\u5b9a\u7684\u5730\u5740\u3002</li> </ul> <p>\u5728\u6211\u53ea\u770b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u5df2\u7ecf\u6709\u8fd9\u4e24\u7c7b\u4e86\u3002 \u8fd9\u4e2a\u7ef4\u5ea6\u80af\u5b9a\u662f\u6709\u7528\u7684\uff0c\u4f46\u662f\u4f5c\u4e3a\u5355\u4e00\u7ef4\u5ea6\u8fd8\u662f\u4e0d\u591f\uff0c \u53ef\u80fd\u5f97\u5b9e\u73b0\u51fa\u6765\u626b\u4e00\u904d\u624d\u77e5\u9053\u4f1a\u600e\u4e48\u6837\uff0c\u7136\u540e\u52a0\u66f4\u7ec6\u7c92\u5ea6\u7684\u89c4\u5219\u3002\u597d\u9ebb\u70e6\u3002</p>"},{"location":"hidden/%E9%92%93%E9%B1%BC/#arbitrary-call-todo","title":"\u533a\u5206Arbitrary Call, TODO","text":"<p>\u5bf9TransferFrom\u7684Participants\u4f9d\u6b21\u8fdb\u884c\u66ff\u6362</p> <ul> <li>TransferFrom\u7684msg.sender\u66ff\u6362\u540e\uff0c\u6267\u884c\uff1a</li> <li>\u6210\u529f\uff1atransferFrom\u53ef\u80fd\u6ca1\u6709\u6821\u9a8cAllowance</li> <li>\u5931\u8d25\uff1a</li> <li>Participants\u4e2d\u7684\u67d0msg.sender\u66ff\u6362\u540e\uff0c\u6267\u884c\uff1a</li> <li>\u6210\u529f\uff1a\u8fd9\u4e2ainvocation\u6ca1\u6709\u5bf9msg.sender\u8fdb\u884c\u6821\u9a8c\u3002</li> <li>\u5931\u8d25\uff1a\u8fd9\u4e2ainvocation\u5bf9msg.sender\u53ef\u80fd\u8fdb\u884c\u6821\u9a8c\u3002</li> </ul> <p>\u4f46\u662f\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff0c\u6821\u9a8c\u53ef\u80fd\u53d1\u751f\u5728\u53c2\u6570\u4e0a\u3002\u6ca1\u6709\u6821\u9a8c\u8fd8\u53ef\u80fd\u662f\u56e0\u4e3a\u83b7\u5229\u8005\u5199\u6b7b\u4e86\u3002</p> <ul> <li>\u66ff\u6362\u53c2\u6570\u4e2d\u7684\u83b7\u5229\u8005\u3002</li> <li>Permit\u7684\u53c2\u6570\u5f97\u8bc6\u522b\u51fa\u6765\u3002</li> </ul>"},{"location":"hidden/crypto-agent/DSL/","title":"DSL","text":"<p>\u6211\u7684\u670d\u52a1\u5305\u62ec\uff1a 1. \u6570\u636e\u751f\u4ea7\u8005\uff0c\u4f1a\u4e0d\u65ad\u7684\u4ece\u7f51\u7edc\u4e2d\u722c\u53d6\u6700\u65b0\u7684\u6570\u636e\u3002\u540c\u65f6\u8fd9\u4e9b\u6570\u636e\u662f\u6709\u65f6\u6548\u6027\u7684\uff0c\u4e0d\u9700\u8981\u4fdd\u5b58\uff0c\u800c\u662f\u7acb\u5373\u5904\u7406\u3002\u6211\u60f3\u8f93\u51fa\u5230\u6d88\u606f\u961f\u5217\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 2. \u6570\u636e\u5904\u7406\u8005\uff1a\u63a5\u6536\u7279\u5b9a\u7684\u8f93\u5165\uff0c\u8fd4\u56de\u7279\u5b9a\u7684\u8f93\u51fa\u3002\u6211\u60f3\u53ef\u4ee5\u5305\u88c5\u6210API\u670d\u52a1\u3002\u80cc\u540e\u53ef\u80fd\u662fLLM, OCR, \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5c0f\u811a\u672c\u3002 3. \u6570\u636e\u5e93\uff1a\u4e00\u4e9b\u957f\u671f\u6709\u6548\u7684\u6570\u636e\u3002 4. \u6267\u884c\u8005\uff1a\u63a5\u6536\u7279\u5b9a\u7684\u8f93\u5165\uff0c\u4e0e\u5916\u90e8\u4e16\u754c\u4ea4\u4e92\u6267\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u4e70\u5e01\uff0c\u5356\u5e01\u3002 \u6211\u7684DSL\u5c31\u662f\u8981\u80fd\u7075\u6d3b\u7684\u5c06\u4ed6\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u6d41\u7a0b\u3002\u6d41\u7a0b\u5fc5\u987b\u662f\u6709\u5411\u65e0\u73af\u56fe\uff0c\u5305\u62ec\u5206\u652f\u4f46\u662f\u6ca1\u6709\u5faa\u73af\u3002\u636e\u6b64\uff0c\u5e2e\u6211\u91cd\u65b0\u8bbe\u8ba1DSL\u548c\u670d\u52a1\u7ec4\u5408\u65b9\u6848\uff0c\u7ed9\u51fa\u8be6\u7ec6\u7684\u5efa\u8bae\u3002</p>"},{"location":"hidden/crypto-agent/DSL/#dsl","title":"DSL","text":""},{"location":"hidden/crypto-agent/DSL/#1","title":"1. \u8282\u70b9\u7c7b\u578b\u5b9a\u4e49","text":"\u7c7b\u578b \u5c5e\u6027 \u8bf4\u660e \u4f8b\u5b50 \u8f93\u5165 \u8f93\u51fa producer queue/output_rate_limit \u6570\u636e\u751f\u4ea7\u8005\uff0c\u81ea\u5e26\u6d41\u63a7\u3002 twitter\u722c\u866b\uff0c\u7528\u6237\u8f93\u5165 \u65e0 output processor input/filter/output/params \u6570\u636e\u5904\u7406\u5355\u5143\uff0c\u652f\u6301\u591a\u8f93\u5165\u6e90\uff0c\u6ca1\u6709\u526f\u4f5c\u7528\u3002 LLM, OCR, script inputs outputs db_processor operation/query/update \u6570\u636e\u5e93\u4ea4\u4e92\u8282\u70b9\uff08\u67e5/\u6539\uff09\uff0c \u7528\u6237\u914d\u7f6e\u6587\u4ef6 input output executor retry/timeout/confirm_required \u6267\u884c\u7ec8\u7ed3\u70b9\uff0c\u81ea\u5e26\u91cd\u8bd5\u548c\u786e\u8ba4\u673a\u5236\uff0c\u6709\u526f\u4f5c\u7528\u3002 \u4e70\u5e01\u3001\u5356\u5e01 input output"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/","title":"\u57fa\u4e8eGolang\u751f\u6001\u7684\u81ea\u52a8\u5316\u4ea4\u6613\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\u6587\u6863","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#1","title":"1. \u6280\u672f\u9009\u578b","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#11","title":"1.1 \u6838\u5fc3\u7ec4\u4ef6","text":"\u7ec4\u4ef6 \u6280\u672f\u65b9\u6848 \u8bf4\u660e \u6d88\u606f\u961f\u5217 RabbitMQ \u652f\u6301AMQP\u534f\u8bae\uff0c\u6210\u719f\u7a33\u5b9a\uff0c\u9002\u5408\u4e1a\u52a1\u6d88\u606f\u573a\u666f Web\u6846\u67b6 Gin \u9ad8\u6027\u80fdHTTP\u6846\u67b6\uff0c\u9002\u5408API\u670d\u52a1\u5f00\u53d1 \u6570\u636e\u5e93 PostgreSQL + pgvector \u652f\u6301JSONB\u5b58\u50a8\u7528\u6237\u914d\u7f6e\uff0cpgvector\u652f\u6301\u5411\u91cf\u641c\u7d22 ORM\u6846\u67b6 GORM \u5b8c\u5584\u7684ORM\u89e3\u51b3\u65b9\u6848\uff0c\u652f\u6301PostgreSQL\u7279\u6027 \u5206\u5e03\u5f0f\u4efb\u52a1 Machinery \u57fa\u4e8eRabbitMQ\u7684\u4efb\u52a1\u961f\u5217\u6846\u67b6 \u914d\u7f6e\u4e2d\u5fc3 etcd \u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\uff0c\u7528\u4e8e\u52a8\u6001\u914d\u7f6e\u7ba1\u7406 \u670d\u52a1\u53d1\u73b0 Consul \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u5bb9\u5668\u7f16\u6392 Docker + Kubernetes \u5bb9\u5668\u5316\u90e8\u7f72\u548c\u96c6\u7fa4\u7ba1\u7406"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#12","title":"1.2 \u670d\u52a1\u77e9\u9635","text":"\u670d\u52a1\u540d\u79f0 \u6280\u672f\u6808 \u6269\u5c55\u65b9\u6848 \u722c\u866b\u670d\u52a1 Colly + Chromedp \u652f\u6301\u5206\u5e03\u5f0f\u722c\u866b\u8282\u70b9\u6ce8\u518c OCR\u670d\u52a1 Tesseract + OpenCV GPU\u52a0\u901f\u65b9\u6848 LLM\u5206\u6790\u670d\u52a1 Transformers + ONNX Runtime \u652f\u6301\u591a\u6a21\u578b\u5e76\u884c\u63a8\u7406 \u4ea4\u6613\u6267\u884c\u670d\u52a1 Binance API + Websocket \u591a\u4ea4\u6613\u6240\u9002\u914d\u5c42 \u76d1\u63a7\u7cfb\u7edf Prometheus + Grafana \u81ea\u5b9a\u4e49\u4e1a\u52a1\u6307\u6807\u91c7\u96c6"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#2","title":"2. \u7cfb\u7edf\u67b6\u6784","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#21","title":"2.1 \u6574\u4f53\u67b6\u6784\u56fe","text":"<pre><code>+-------------------+     +-------------------+     +-------------------+\n|   \u722c\u866b\u670d\u52a1\u96c6\u7fa4      |     |   OCR\u670d\u52a1\u96c6\u7fa4       |     |  LLM\u5206\u6790\u670d\u52a1\u96c6\u7fa4    |\n| (Twitter/Telegram)|     | (\u56fe\u7247\u8f6c\u6587\u5b57)        |     | (\u60c5\u611f\u5206\u6790/\u4e8b\u4ef6\u63d0\u53d6)|\n+-------------------+     +-------------------+     +-------------------+\n          |                        |                          |\n          v                        v                          v\n+---------------------------------------------------------------+\n|                         RabbitMQ Cluster                      |\n|   Exchange: crawler_data   |   ocr_results   |   analysis_signals|\n+---------------------------------------------------------------+\n          |                        |                          |\n          v                        v                          v\n+-------------------+     +-------------------+     +-------------------+\n|  \u6570\u636e\u6e05\u6d17\u670d\u52a1      |     |  \u7279\u5f81\u5de5\u7a0b\u670d\u52a1      |     |  \u4fe1\u53f7\u5206\u53d1\u670d\u52a1       |\n| (\u6570\u636e\u6807\u51c6\u5316)       |     | (\u7ed3\u6784\u5316\u5904\u7406)       |     | (\u7b56\u7565\u5339\u914d\u5f15\u64ce)      |\n+-------------------+     +-------------------+     +-------------------+\n                                   |\n                                   v\n                         +-------------------+\n                         |  \u4ea4\u6613\u6267\u884c\u670d\u52a1\u96c6\u7fa4  |\n                         | (\u8ba2\u5355\u7ba1\u7406/\u98ce\u63a7)   |\n                         +-------------------+\n                                   |\n                                   v\n                         +-------------------+\n                         |  \u4ea4\u6613\u6240API\u7f51\u5173     |\n                         | (\u63a5\u53e3\u7edf\u4e00\u9002\u914d)     |\n                         +-------------------+\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#22","title":"2.2 \u6838\u5fc3\u6a21\u5757\u4ea4\u4e92\u6d41\u7a0b","text":"<pre><code>sequenceDiagram\n    participant C as Crawler\n    participant Q as RabbitMQ\n    participant O as OCR\n    participant L as LLM\n    participant S as Signal\n    participant T as Trading\n    participant U as UserService\n\n    C-&gt;&gt;Q: \u53d1\u5e03\u539f\u59cb\u6570\u636e(crawler_data)\n    Q-&gt;&gt;O: \u6d88\u8d39\u539f\u59cb\u6570\u636e\n    O-&gt;&gt;Q: \u53d1\u5e03OCR\u7ed3\u679c(ocr_results)\n    Q-&gt;&gt;L: \u6d88\u8d39\u805a\u5408\u6570\u636e\n    L-&gt;&gt;Q: \u53d1\u5e03\u5206\u6790\u4fe1\u53f7(analysis_signals)\n    S-&gt;&gt;Q: \u8ba2\u9605\u4fe1\u53f7\n    S-&gt;&gt;U: \u67e5\u8be2\u5339\u914d\u7528\u6237\n    S-&gt;&gt;T: \u751f\u6210\u4ea4\u6613\u6307\u4ee4\n    T-&gt;&gt;Exchange: \u6267\u884c\u4ea4\u6613\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#3","title":"3. \u8be6\u7ec6\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#31","title":"3.1 \u6d88\u606f\u961f\u5217\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#311","title":"3.1.1 \u6d88\u606f\u7c7b\u578b\u5b9a\u4e49","text":"<pre><code>// \u539f\u59cb\u6570\u636e\u6d88\u606f\ntype CrawlerMessage struct {\n    Source      string    `json:\"source\"`     // twitter/telegram\n    ContentType string    `json:\"type\"`      // text/image/video\n    RawData     string    `json:\"data\"`      // \u539f\u59cb\u5185\u5bb9\n    MediaURLs   []string  `json:\"media_urls\"` \n    Timestamp   time.Time `json:\"timestamp\"`\n}\n\n// OCR\u5904\u7406\u7ed3\u679c\ntype OCRResult struct {\n    OriginalURL  string `json:\"original_url\"`\n    TextContent  string `json:\"text\"`\n    Confidence   float32 `json:\"confidence\"`\n    Language     string `json:\"language\"`\n}\n\n// \u5206\u6790\u4fe1\u53f7\ntype AnalysisSignal struct {\n    SignalID     string         `json:\"signal_id\"`\n    SignalType   string         `json:\"type\"`      // bullish/bearish\n    Confidence   float32        `json:\"confidence\"`\n    RelatedCoins []string       `json:\"coins\"`\n    Evidence     []EvidenceItem `json:\"evidence\"` // \u652f\u6301\u4f9d\u636e\n}\n\n// \u4ea4\u6613\u6307\u4ee4\ntype TradeCommand struct {\n    UserID      string  `json:\"user_id\"`\n    Action      string  `json:\"action\"`    // buy/sell\n    CoinPair    string  `json:\"pair\"`      // BTC/USDT\n    AmountType  string  `json:\"amount_type\"` // percentage/fixed\n    AmountValue float64 `json:\"amount\"`\n    Conditions  []Condition `json:\"conditions\"`\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#32","title":"3.2 \u5173\u952e\u670d\u52a1\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#321","title":"3.2.1 \u4fe1\u53f7\u5206\u53d1\u670d\u52a1","text":"<pre><code>type SignalDispatcher struct {\n    strategyCache *redis.Client      // \u7528\u6237\u7b56\u7565\u7f13\u5b58\n    userService   UserServiceClient  // gRPC\u5ba2\u6237\u7aef\n    tradeQueue    amqp.Queue        // \u4ea4\u6613\u6307\u4ee4\u961f\u5217\n}\n\nfunc (s *SignalDispatcher) HandleSignal(signal AnalysisSignal) {\n    // 1. \u901a\u8fc7\u5411\u91cf\u641c\u7d22\u5339\u914d\u76f8\u5173\u5e01\u79cd\n    relatedCoins := vectorSearch(signal.Embedding)\n\n    // 2. \u67e5\u8be2\u5173\u6ce8\u8fd9\u4e9b\u5e01\u79cd\u7684\u7528\u6237\n    users := s.userService.QueryUsersByCoins(relatedCoins)\n\n    // 3. \u5339\u914d\u7528\u6237\u5177\u4f53\u7b56\u7565\n    for _, user := range users {\n        strategy := s.getUserStrategy(user.ID)\n        matched := evaluateStrategy(strategy, signal)\n        if matched {\n            cmd := buildTradeCommand(user, strategy, signal)\n            publishTradeCommand(cmd)\n        }\n    }\n}\n\nfunc evaluateStrategy(strategy UserStrategy, signal AnalysisSignal) bool {\n    // \u5b9e\u73b0\u591a\u6761\u4ef6\u5339\u914d\u903b\u8f91\uff1a\n    // - \u6765\u6e90\u767d\u540d\u5355\n    // - \u5173\u952e\u8bcd\u5339\u914d\n    // - \u7f6e\u4fe1\u5ea6\u9608\u503c\n    // - \u65f6\u95f4\u7a97\u53e3\u9650\u5236\n    // - \u98ce\u9669\u63a7\u5236\u6761\u4ef6\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#322","title":"3.2.2 \u4ea4\u6613\u6267\u884c\u670d\u52a1","text":"<pre><code>type TradeExecutor struct {\n    exchangeClients map[string]ExchangeAdapter\n    riskEngine      RiskEngine\n    orderManager    OrderManager\n}\n\nfunc (t *TradeExecutor) Execute(cmd TradeCommand) error {\n    // 1. \u98ce\u9669\u68c0\u67e5\n    if err := t.riskEngine.Check(cmd); err != nil {\n        return err\n    }\n\n    // 2. \u9009\u62e9\u6700\u4f18\u4ea4\u6613\u6240\n    exchange := selectBestExchange(cmd.CoinPair)\n\n    // 3. \u8f6c\u6362\u8ba2\u5355\u7c7b\u578b\n    order := t.createOrder(exchange, cmd)\n\n    // 4. \u6267\u884c\u5e76\u76d1\u63a7\n    result := t.orderManager.Execute(order)\n\n    // 5. \u751f\u6210\u6267\u884c\u62a5\u544a\n    generateExecutionReport(result)\n\n    return nil\n}\n\nfunc selectBestExchange(pair string) string {\n    // \u5b9e\u73b0\u667a\u80fd\u8def\u7531\u903b\u8f91\uff1a\n    // - \u6d41\u52a8\u6027\u5206\u6790\n    - \u8d39\u7387\u5bf9\u6bd4\n    - \u7528\u6237\u504f\u597d\n    - \u4ea4\u6613\u6240\u5065\u5eb7\u72b6\u6001\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#4","title":"4. \u63a5\u53e3\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#41-api","title":"4.1 \u7528\u6237\u670d\u52a1API","text":"<pre><code>// \u7528\u6237\u7b56\u7565\u914d\u7f6e\u63a5\u53e3\nPOST /api/v1/strategies\n{\n    \"user_id\": \"uuid\",\n    \"watch_list\": {\n        \"twitter_users\": [\"elonmusk\"],\n        \"telegram_groups\": [\"cryptosignals\"],\n        \"keywords\": [\"merge\", \"halving\"]\n    },\n    \"actions\": {\n        \"bullish\": {\n            \"percentage\": 30,\n            \"max_amount\": 5000\n        },\n        \"bearish\": {\n            \"percentage\": 50,\n            \"stop_loss\": 10\n        }\n    }\n}\n\n// \u5b9e\u65f6\u4fe1\u53f7\u67e5\u8be2\u63a5\u53e3\nGET /api/v1/signals?coin=BTC&amp;since=2023-07-01\nResponse:\n{\n    \"signals\": [\n        {\n            \"id\": \"signal_123\",\n            \"type\": \"bullish\",\n            \"confidence\": 0.92,\n            \"sources\": [\"twitter:elonmusk\"],\n            \"timestamp\": \"2023-07-01T14:30:00Z\"\n        }\n    ]\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#5","title":"5. \u6269\u5c55\u6027\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#51","title":"5.1 \u63d2\u4ef6\u673a\u5236","text":"<pre><code>// \u722c\u866b\u63d2\u4ef6\u63a5\u53e3\ntype CrawlerPlugin interface {\n    Name() string\n    Init(config json.RawMessage) error\n    Fetch() ([]CrawlerMessage, error)\n    Validate(msg CrawlerMessage) bool\n}\n\n// \u5206\u6790\u6a21\u5757\u63d2\u4ef6\ntype AnalyzerPlugin interface {\n    Analyze(text string, images []OCRResult) (AnalysisSignal, error)\n    Weight() float32  // \u7528\u4e8e\u6df7\u5408\u6a21\u578b\u52a0\u6743\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#52","title":"5.2 \u52a8\u6001\u914d\u7f6e","text":"<pre><code># crawler.toml\n[twitter]\nenabled = true\ninterval = \"5m\"\naccounts = [\"elonmusk\"]\n\n[telegram]\napi_id = \"YOUR_API_ID\"\napi_hash = \"YOUR_API_HASH\"\nchannels = [\"cryptochannel\"]\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#6","title":"6. \u76d1\u63a7\u4e0e\u8fd0\u7ef4","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#61","title":"6.1 \u76d1\u63a7\u6307\u6807","text":"\u6307\u6807\u7c7b\u578b Prometheus\u6307\u6807\u540d\u79f0 \u544a\u8b66\u9608\u503c \u6d88\u606f\u961f\u5217\u79ef\u538b rabbitmq_queue_messages_ready &gt;1000\u6301\u7eed5\u5206\u949f OCR\u5904\u7406\u5ef6\u8fdf ocr_process_duration_seconds P99 &gt; 10s \u4fe1\u53f7\u51c6\u786e\u7387 signal_accuracy &lt; 0.8\u6301\u7eed1\u5c0f\u65f6 \u4ea4\u6613\u6210\u529f\u7387 trade_success_rate &lt; 95%\u6301\u7eed30\u5206\u949f"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#62","title":"6.2 \u65e5\u5fd7\u89c4\u8303","text":"<pre><code>// \u7ed3\u6784\u5316\u65e5\u5fd7\u793a\u4f8b\nzap.Info(\"Trade executed\",\n    zap.String(\"user_id\", \"u123\"),\n    zap.String(\"exchange\", \"binance\"),\n    zap.Float64(\"amount\", 1.5),\n    zap.String(\"coin_pair\", \"BTC/USDT\"),\n    zap.Duration(\"latency\", 230*time.Millisecond))\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#7","title":"7. \u5b89\u5168\u8bbe\u8ba1","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#71","title":"7.1 \u6570\u636e\u5b89\u5168","text":"<ul> <li>\u7528\u6237API\u5bc6\u94a5\uff1a\u4f7f\u7528AES-GCM\u52a0\u5bc6\u5b58\u50a8</li> <li>\u901a\u4fe1\u52a0\u5bc6\uff1a\u5168\u94fe\u8defTLS 1.3</li> <li>\u654f\u611f\u6570\u636e\u8131\u654f\uff1a\u65e5\u5fd7\u8fc7\u6ee4\u5668\u5904\u7406\u5173\u952e\u5b57\u6bb5</li> </ul>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#72","title":"7.2 \u98ce\u63a7\u7b56\u7565","text":"<pre><code>type RiskPolicy struct {\n    MaxDailyLoss    float64 `json:\"max_daily_loss\"`   // \u6700\u5927\u5355\u65e5\u4e8f\u635f\n    PositionLimit   float64 `json:\"position_limit\"`  // \u6700\u5927\u6301\u4ed3\n    CoolingPeriod   int     `json:\"cooling_period\"`   // \u4ea4\u6613\u51b7\u5374\u65f6\u95f4\uff08\u5206\u949f\uff09\n    Blacklist       []string `json:\"blacklist\"`      // \u9ad8\u98ce\u9669\u4ea4\u6613\u5bf9\n}\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#8","title":"8. \u90e8\u7f72\u65b9\u6848","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#81","title":"8.1 \u96c6\u7fa4\u62d3\u6251","text":"<pre><code>+-----------------+       +-----------------+\n|  Load Balancer  |       |   Consul Server |\n+--------+--------+       +--------+--------+\n         |                           |\n+--------v---------+       +--------v--------+\n|  API Gateway     |       |  Config Center  |\n| (Rate Limiting)  |       |     (etcd)      |\n+--------+---------+       +--------+--------+\n         |                           |\n+--------v---------+       +--------v--------+\n|  Service Mesh   &lt;-------+  Service Nodes  |\n| (Istio)          |       | (\u81ea\u52a8\u6ce8\u518c\u53d1\u73b0)   |\n+------------------+       +-----------------+\n</code></pre>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#9","title":"9. \u6f14\u8fdb\u8def\u7ebf","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#_1","title":"\u9636\u6bb5\u6f14\u8fdb\u8ba1\u5212","text":"<ol> <li>MVP\u9636\u6bb5\uff1a\u6838\u5fc3\u6d41\u7a0b\u8d2f\u901a\uff0c\u652f\u6301\u57fa\u7840\u4fe1\u53f7\u89e6\u53d1</li> <li>\u6269\u5c55\u9636\u6bb5\uff1a\u589e\u52a0\u4ea4\u6613\u6240\u9002\u914d\uff0c\u5b8c\u5584\u98ce\u9669\u63a7\u5236</li> <li>\u667a\u80fd\u9636\u6bb5\uff1a\u5f15\u5165\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\u7b56\u7565\u53c2\u6570</li> <li>\u751f\u6001\u9636\u6bb5\uff1a\u5f00\u653e\u7b56\u7565\u5e02\u573a\uff0c\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u63d2\u4ef6</li> </ol>"},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#10","title":"10. \u6027\u80fd\u4f18\u5316","text":""},{"location":"hidden/crypto-agent/%E6%9E%B6%E6%9E%84/#_2","title":"\u5173\u952e\u4f18\u5316\u70b9","text":"<ol> <li>\u6d88\u606f\u6279\u5904\u7406\uff1a\u4f7f\u7528RabbitMQ\u7684\u6279\u91cf\u786e\u8ba4\u673a\u5236</li> <li>\u5411\u91cf\u8ba1\u7b97\u52a0\u901f\uff1a\u5229\u7528GPU\u8fdb\u884cembedding\u8ba1\u7b97</li> <li> <p>\u8fde\u63a5\u6c60\u7ba1\u7406\uff1a</p> <pre><code>type ResourcePool struct {\n    dbPool       *pgxpool.Pool      // PostgreSQL\u8fde\u63a5\u6c60\n    redisPool    *redis.Pool        // Redis\u8fde\u63a5\u6c60\n    httpClients  *fasthttp.PClient  // HTTP\u5ba2\u6237\u7aef\u6c60\n}\n</code></pre> </li> <li> <p>\u7f13\u5b58\u7b56\u7565\uff1a\u4f7f\u7528LRU\u7f13\u5b58\u9ad8\u9891\u8bbf\u95ee\u7684\u7528\u6237\u7b56\u7565</p> </li> </ol> <p>\u8be5\u67b6\u6784\u8bbe\u8ba1\u5145\u5206\u8003\u8651\u4e86\u677e\u8026\u5408\u3001\u53ef\u6269\u5c55\u6027\u548c\u5b89\u5168\u6027\uff0c\u5404\u7ec4\u4ef6\u53ef\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55\u3002\u5efa\u8bae\u5b9e\u65bd\u65f6\u91c7\u7528\u6e10\u8fdb\u5f0f\u4ea4\u4ed8\uff0c\u4f18\u5148\u6784\u5efa\u6838\u5fc3\u7ba1\u9053\uff0c\u9010\u6b65\u589e\u52a0\u9ad8\u7ea7\u529f\u80fd\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>\u5982\u679c\u8bf4\u7f16\u7a0b\u8bed\u8a00\u662f\u5b9d\u5251\uff0c\u90a3\u4e48\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u5c31\u662f\u5185\u529b\u3002\u53ea\u6709\u5185\u529b\u8db3\u591f\u6df1\u539a\uff0c\u624d\u80fd\u9a7e\u9a6d\u5b9d\u5251\u6740\u654c\u3002\u8fd9\u91cc\uff0c\u5c06\u57fa\u7840\u77e5\u8bc6\u7b3c\u7edf\u7684\u5206\u6210\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206</p> <ul> <li>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\uff1a</li> <li>\u7f51\u7edc</li> <li>\u64cd\u4f5c\u7cfb\u7edf</li> <li>\u4eba\u5de5\u667a\u80fd</li> <li>\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/","title":"AI","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/","title":"\u68af\u5ea6\u63d0\u5347\u51b3\u7b56\u6811","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#_2","title":"\u51b3\u7b56\u6811","text":"<p>\u51b3\u7b56\u6811\uff08Decision tree\uff09\u662f\u57fa\u4e8e\u5df2\u77e5\u5404\u79cd\u60c5\u51b5\uff08\u7279\u5f81\u53d6\u503c\uff09 \u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u6784\u5efa \u6811\u578b\u51b3\u7b56 \u7ed3\u6784\u6765\u8fdb\u884c\u5206\u6790\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u662f\u5e38\u7528\u7684\u7b80\u5355\u7684\u6709\u76d1\u7763\u7684\u5206\u7c7b\u7b97\u6cd5\u3002\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u53ef\u4ee5\u6e05\u695a\u7684\u8bf4\u660e\u6a21\u578b\u7684\u9884\u6d4b\u539f\u7406\uff1a</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u5224\u65ad\u975e\u8bda\u52ff\u6270\u5973\u5609\u5bbe\u7ed9\u7537\u5609\u5bbe\u7684\u7559\u706f\u6982\u7387\u3002\u7537\u5609\u5bbe\u7684\u5c5e\u6027\u6709 \u9ad8\u3001\u5bcc\u3001\u5e05\u3002\u6bcf\u4e2a\u5c5e\u6027\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5b9a\u4e49\u4e3a\u201c\u662f\u201d\u6216\u201c\u5426\u201d\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u6709\u4e0b\u9762\u7684\u51b3\u7b56\u6811\uff1a</p> <pre><code>\u662f\u5426\u5e05\n\u251c\u2500\u2500 \u662f\n\u2502   \u251c\u2500\u2500 \u662f\u5426\u5bcc\n\u2502   \u2502   \u251c\u2500\u2500 \u662f\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \u662f\u5426\u9ad8\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u975e\u5e38\u9ad8 (90%)\n\u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u9ad8 (80%)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \u5426\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u4e2d\u7b49 (50%)\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u4f4e (30%)\n\u2502   \u2502   \u2514\u2500\u2500 \u5426\n\u2502   \u2502       \u251c\u2500\u2500 \u662f\u5426\u9ad8\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u4f4e (30%)\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u975e\u5e38\u4f4e (10%)\n\u2502   \u2514\u2500\u2500 \u5426\n\u2502       \u251c\u2500\u2500 \u662f\u5426\u5bcc\n\u2502       \u2502   \u251c\u2500\u2500 \u662f\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 \u662f\u5426\u9ad8\n\u2502       \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u4f4e (30%)\n\u2502       \u2502   \u2502   \u2502   \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u975e\u5e38\u4f4e (10%)\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 \u5426\n\u2502       \u2502   \u2502       \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u975e\u5e38\u4f4e (10%)\n\u2502       \u2502   \u2502       \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u6781\u4f4e (5%)\n\u2502       \u2502   \u2514\u2500\u2500 \u5426\n\u2502       \u2502       \u251c\u2500\u2500 \u662f\u5426\u9ad8\n\u2502       \u2502       \u2502   \u251c\u2500\u2500 \u662f: \u7559\u706f\u7684\u6982\u7387\u975e\u5e38\u4f4e (10%)\n\u2502       \u2502       \u2502   \u2514\u2500\u2500 \u5426: \u7559\u706f\u7684\u6982\u7387\u6781\u4f4e (5%)\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7528\u51b3\u7b56\u6811\u89e3\u51b3\u56de\u5f52\u95ee\u9898\u3002\u5982\u679c\u6700\u540e\u5224\u65ad\u7684\u7ed3\u679c\u662f\u7559\u706f\u4e0e\u5426\uff0c\u5c31\u662f\u5206\u7c7b\u95ee\u9898\u3002\u51b3\u7b56\u6811\u65e2\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u56de\u5f52\u95ee\u9898\uff0c\u53c8\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u8fc7\u4e8e\u7b80\u5355\u4e86\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#cart","title":"CART \u5206\u7c7b\u548c\u56de\u5f52\u6811","text":"<p>CART\uff1a\u5047\u8bbe\u51b3\u7b56\u6811\u662f\u4e8c\u53c9\u6811\uff0c\u5185\u90e8\u7ed3\u70b9\u7279\u5f81\u7684\u53d6\u503c\u4e3a\u300c\u662f\u300d\u548c\u300c\u5426\u300d\uff0c\u53f3\u5206\u652f\u662f\u53d6\u503c\u4e3a\u300c\u662f\u300d\u7684\u5206\u652f\uff0c\u5de6\u5206\u652f\u662f\u53d6\u503c\u4e3a\u300c\u5426\u300d\u7684\u5206\u652f\u3002\u8fd9\u6837\u7684\u51b3\u7b56\u6811\u7b49\u4ef7\u4e8e\u300c\u9012\u5f52\u5730\u4e8c\u5206\u6bcf\u4e2a\u7279\u5f81\u300d\uff0c\u5c06\u8f93\u5165\u7a7a\u95f4\uff08\u7279\u5f81\u7a7a\u95f4\uff09\u5212\u5206\u4e3a\u6709\u9650\u4e2a\u5355\u5143\uff0c\u5e76\u5728\u8fd9\u4e9b\u5355\u5143\u4e0a\u786e\u5b9a\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u5728\u8f93\u5165\u7ed9\u5b9a\u7684\u6761\u4ef6\u4e0b\u8f93\u51fa\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\uff08\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684CART\uff09</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u5f0f\uff1a</p> <p>\u5c06\u7279\u5f81\u7a7a\u95f4\uff08\u9ad8\uff0c\u5bcc\uff0c\u5e05\uff09\u5206\u62108\u5757\uff0c\u6bcf\u4e00\u5757\u90fd\u6709\u4e00\u5806\u7537\u5609\u5bbe\u4ee5\u53ca\u5176\u662f\u5426\u7559\u706f\u6210\u529f\uff080,1\uff09\u3002\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6c42\u6bcf\u4e00\u5757\u7559\u706f\u6210\u529f\u51e0\u7387\u7684\u5e73\u5747\u503c\u3002</p> <p>\u4e00\u822c\u7684\uff0c\u7279\u5f81\u7a7a\u95f4\u7684\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u4e0d\u4e00\u5b9a\u662f\u53ef\u6570\u7684\uff08\u4f8b\u5982\uff0c\u201c\u9ad8\u201d \u5176\u5b9e\u53ef\u4ee5\u5177\u4f53\u4e3a 187 cm ...\uff09\uff0c\u7559\u706f\u6210\u529f\u4e5f\u53ef\u4ee5\u662f\u7559\u706f\u6570\u91cf\u3002\u4f46\u662f\u603b\u4f53\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u5c06\u7279\u5f81\u7a7a\u95f4\u5206\u6210\\(J\\)\u4efd\uff08\\(R_1,R_2...R_j\\)\uff09\uff0c\u6bcf\u4e00\u4efd\u7ed9\u51fa\u7684\u9884\u6d4b\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u53ef\u4ee5\u7528\u7559\u706f\u6570\u91cf\u7684\u5e73\u5747\u503c\u3002</p> <p>\u5bf9\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7edf\u8ba1\u4e2d\u4ecb\u7ecd\u7684\u5747\u65b9\u5dee\uff0c\u5bf9\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7edf\u8ba1\u4e2d\u4ecb\u7ecd\u7684\u57fa\u5c3c\u7cfb\u6570\u3002\u4f46\u662fCART\u7b97\u6cd5\u4e00\u822c\u90fd\u7528\u6765\u505a\u5206\u7c7b\u95ee\u9898\u3002</p> <p>[!NOTE] \u7f51\u7edc\u4e0a\u5f88\u591a\u6587\u7ae0\u4e00\u8fb9\u7528\u57fa\u5c3c\u7cfb\u6570\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u540e\u9762\u53c8\u5728\u6c42\u89e3\u5747\u65b9\u5dee\u7684\u6700\u4f18\u5316\u95ee\u9898\u3002\u770b\u7684\u4eba\u4e91\u91cc\u96fe\u91cc\u3002</p> <p>\u5982\u4f55\u8ba9\u635f\u5931\u51fd\u6570\u6700\u5c0f\uff1f\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u6709X\u4e2a\u7537\u5609\u5bbe\u5c31\u5c06\u7a7a\u95f4\u5206\u6210X\u4efd\uff0c\u635f\u5931\u51fd\u6570\u5c31\u662f0\u4e86\u3002\u6240\u4ee5\u51b3\u7b56\u6811\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\uff0c\u5728\u89e3\u51b3\u6700\u4f18\u5316\u95ee\u9898\u4e4b\u540e\uff0c\u540e\u7eed\u8fd8\u6709\u526a\u679d\u6b65\u9aa4\u3002\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\u3002</p> <p>\u53e6\u5916\uff0c\u51b3\u7b56\u6811\u7684\u53c2\u6570\u4e2a\u6570\uff08\u5373\u6811\u5230\u5e95\u7528\u51e0\u4e2a\u4e2d\u95f4\u8282\u70b9\u5206\u5272\u7a7a\u95f4\uff09\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u5728\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\u4e0a\u7684\u65b9\u6cd5\u53ef\u80fd\u4e0d\u90a3\u4e48\u76f4\u89c2\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#boosting","title":"Boosting","text":"<p>Boosting \u662f\u673a\u5668\u5b66\u4e60\u4e2d\u4e00\u79cd\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\u6280\u672f\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u7ec4\u5408\u591a\u4e2a\u8f83\u5f31\u7684\u5b66\u4e60\u5668\uff08\u5f31\u5206\u7c7b\u5668\u6216\u5f31\u5b66\u4e60\u7b97\u6cd5\uff0c\u79f0\u4e3a\u57fa\u6a21\u578b\uff09\u6765\u521b\u5efa\u4e00\u4e2a\u66f4\u5f3a\u7684\u5b66\u4e60\u5668\uff08\u5f3a\u5206\u7c7b\u5668\uff09\u3002\u4f8b\u5982\uff0c\u57fa\u6a21\u578b\u4e3a\\(y=f(x)\\)\uff0cboosting\u7684\u6a21\u578b\u5c31\u662f\u8fed\u4ee3\u591a\u8f6e\u4e4b\u540e\u76f8\u52a0\u5f97\u5230\u7684\u6a21\u578b\\(y=\\sum_{m=1}^M f_m(x)\\)\uff0c\u5176\u4e2d\\(f_m\\)\u5c31\u662f\u6bcf\u4e00\u8f6e\u8bad\u7ec3\u5f97\u5230\u7684\u57fa\u6a21\u578b\u3002</p> <p>\u68af\u5ea6\u63d0\u5347\uff08Gradient Boosting\uff09\u5c31\u662f\u4ee5\u68af\u5ea6\u4e0b\u964d\u7684\u601d\u60f3\u4e3a\u57fa\u7840\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u5728\u5f53\u524d\u6a21\u578b\u7684\u6b8b\u5dee\u65b9\u5411\u4e0a\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u5f31\u5b66\u4e60\u5668\u3002\u4e0d\u59a8\u8ba9\u635f\u5931\u51fd\u6570\u4e3a\u5747\u65b9\u8bef\u5dee\uff0c\u5177\u4f53\u7684\u8bf4</p> <p>\u7b2cM\u8f6e\u7684\u635f\u5931\u51fd\u6570\u4e3a</p> \\[L(w)=\\sum_{i=1}^n (\\hat y_i - y_i) ^2 = \\sum_{i=1}^n (\\hat y_i - \\sum_{m=1}^{M-1}f_m(x_i) - f_M(x_i))^2\\] <p>\\(w\\)\u662f\u6240\u6709\u7684\u53c2\u6570\u3002\u5176\u4e2d\\(\\hat y_i - \\sum_{m=1}^{M-1}f_m(x_i)\\)\u5373\u6b8b\u5dee\uff0c\u8bb0\u505a\\(r_i\\)\uff0c\u90a3\u4e48\u7b2cM\u8f6e\u7684\u6700\u4f18\u5316\u76ee\u6807\u5c31\u662f\u8ba9\u4e0b\u9762\u7684\u516c\u5f0f\u6700\u5c0f\uff0c\u5373\u9884\u6d4b\u503c\u63a5\u8fd1\u6b8b\u5dee\u3002</p> \\[\\sum_{i=1}^n (r_i-f_M(x_i))^2\\] <p>\u8fd9\u91cc\u662f\u9488\u5bf9\u635f\u5931\u51fd\u6570\u4e3a\u5747\u65b9\u8bef\u5dee\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e\u66f4\u4e00\u822c\u7684\u635f\u5931\u51fd\u6570\u5462\uff1fGBDT\u89c4\u5b9a\uff0c\u5229\u7528\u635f\u5931\u51fd\u6570\u7684\u8d1f\u68af\u5ea6\u5728\u5f53\u524d\u6a21\u578b\u7684\u503c\u4f5c\u4e3a\u6b8b\u5dee\u7684\u8fd1\u4f3c\u503c\uff0c\u5373</p> \\[r_i \\approx-[\\frac{\\partial L(w)}{\\partial f_{M-1}(x)}] \\]"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#gbdt","title":"GBDT \u68af\u5ea6\u63d0\u5347\u51b3\u7b56\u6811","text":"<p>\u68af\u5ea6\u63d0\u5347\u51b3\u7b56\u6811\uff08Gradient Boosting Decision Tree\uff09\uff0c\u662f\u4e00\u79cd\u8fed\u4ee3\u7684\u51b3\u7b56\u6811\u7b97\u6cd5\uff0c\u5c31\u662f\u4e4b\u524d\u4ecb\u7ecd\u7684 \u68af\u5ea6\u63d0\u5347+CART\u51b3\u7b56\u6811 \u7684\u7ec4\u5408\u3002</p> <p>Demo\uff1a</p> <pre><code># Example code for GBDT algorithm\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport matplotlib.pyplot as plt\n\n# 1. Generate sample data\ndef generate_sample_data(n_samples=1000):\n    np.random.seed(42)\n    X = np.random.rand(n_samples, 3) * 10  # Generate 3 features\n    # Create a target variable with a nonlinear relationship\n    y = (X[:, 0] ** 2) +100* np.sin(X[:, 1]) +100* np.log(X[:, 2] + 1) + np.random.normal(0, 0.1, n_samples)\n    return X, y\n\n# 2. Data preprocessing and splitting\nX, y = generate_sample_data()\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 3. Create and train GBDT model\ngbdt = GradientBoostingRegressor(\n    n_estimators=100,        # Number of decision trees\n    learning_rate=0.1,       # Learning rate\n    max_depth=3,             # Maximum depth of the tree\n    min_samples_split=5,     # Minimum number of samples required to split an internal node\n    min_samples_leaf=3,      # Minimum number of samples required to be at a leaf node\n    subsample=0.8,           # Fraction of samples used for fitting the individual learners\n    random_state=42\n)\n\n# Train the model\ngbdt.fit(X_train, y_train)\n\n# 4. Model evaluation\ny_pred_train = gbdt.predict(X_train)\ny_pred_test = gbdt.predict(X_test)\n\n# Calculate evaluation metrics for training and test sets\ntrain_mse = mean_squared_error(y_train, y_pred_train)\ntest_mse = mean_squared_error(y_test, y_pred_test)\ntrain_r2 = r2_score(y_train, y_pred_train)\ntest_r2 = r2_score(y_test, y_pred_test)\n\nprint(f'Training set MSE: {train_mse:.4f}')\nprint(f'Test set MSE: {test_mse:.4f}')\nprint(f'Training set R2: {train_r2:.4f}')\nprint(f'Test set R2: {test_r2:.4f}')\n\n# 5. Feature importance analysis\nfeature_importance = pd.DataFrame({\n    'Feature': [f'Feature {i+1}' for i in range(X.shape[1])],\n    'Importance': gbdt.feature_importances_\n})\nfeature_importance = feature_importance.sort_values('Importance', ascending=False)\nprint(\"\\nFeature Importance:\")\nprint(feature_importance)\n\n# 6. Plot learning curve\nplt.figure(figsize=(10, 5))\nplt.subplot(1, 2, 1)\nplt.plot(gbdt.train_score_, label='Training set score')\nplt.xlabel('Iterations')\nplt.ylabel('Loss')\nplt.title('Learning Curve')\nplt.legend()\n\n# 7. Plot predicted vs actual values\nplt.subplot(1, 2, 2)\nplt.scatter(y_test, y_pred_test, alpha=0.5)\nplt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', lw=2)\nplt.xlabel('Actual values')\nplt.ylabel('Predicted values')\nplt.title('Predicted vs Actual')\nplt.tight_layout()\nplt.show()\n\n# 8. Example of model prediction\ndef predict_example():\n    # Generate a new sample\n    new_sample = np.array([[5.0, 2.0, 3.0]])\n    prediction = gbdt.predict(new_sample)\n    print(f'\\nPrediction for new sample: {prediction[0]:.4f}')\n\npredict_example()\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#_3","title":"\u7f3a\u70b9\u548c\u4f18\u70b9","text":"<ol> <li>\u5904\u7406\u975e\u7ebf\u6027\u95ee\u9898\u7684\u80fd\u529b\u6709\u9650\uff1a\u51b3\u7b56\u6811\u901a\u8fc7\u987a\u5e8f\u5730\u68c0\u67e5\u5b57\u6bb5\u503c\u662f\u5426\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u6765\u505a\u51b3\u7b56\uff0c\u8fd9\u79cd\u5206\u5272\u65b9\u5f0f\u4e0d\u9002\u5408\u5904\u7406\u5177\u6709\u9ad8\u5ea6\u975e\u7ebf\u6027\u5173\u7cfb\u7684\u6570\u636e\u3002\u5047\u8bbe\u4e00\u4e2a\u957f\u65b9\u4f53\u6709\u5c5e\u6027\u957f\u3001\u5bbd\u3001\u9ad8\uff0c\u6211\u4eec\u60f3\u7528\u51b3\u7b56\u6811\u8bad\u7ec3\u51fa\u53ef\u4ee5 \u5224\u65ad\u957f\u65b9\u4f53\u4f53\u79ef\u662f\u5426\u5927\u4e8e100 cm3 \u7684\u6a21\u578b\u3002\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528 \u957f*\u5bbd*\u9ad8 \u8fd9\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u8f83\u597d\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u662f\u4f7f\u7528\u957f\u3001\u5bbd\u3001\u9ad8\u4e09\u4e2a\u5c5e\u6027\uff0c\u51b3\u7b56\u6811\u5c31\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u3002\u5982\u679c\u95ee\u9898\u7684\u5f71\u54cd\u56e0\u7d20\u8fc7\u4e8e\u590d\u6742\uff0c\u53ef\u4ee5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u3002</li> <li>\u51b3\u7b56\u6811\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u3002</li> <li>\u51b3\u7b56\u6811\u6709\u975e\u5e38\u597d\u7684\u53ef\u89e3\u91ca\u6027\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/DT/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u56fe\u89e3\u673a\u5668\u5b66\u4e60 | GBDT\u6a21\u578b\u8be6\u89e3</li> <li>\u673a\u5668\u5b66\u4e60 | \u8be6\u89e3GBDT\u68af\u5ea6\u63d0\u5347\u6811\u539f\u7406\uff0c\u770b\u5b8c\u518d\u4e5f\u4e0d\u6015\u9762\u8bd5\u4e86 - Coder\u6881 - \u535a\u5ba2\u56ed</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/","title":"\u673a\u5668\u5b66\u4e60","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#basic","title":"Basic","text":"<ul> <li>\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\uff1a<ul> <li>\u5206\u7c7b\uff08classification\uff09\uff1a\u6837\u672c\u5c5e\u4e8e\u4e24\u4e2a\u6216\u591a\u4e2a\u7c7b\u522b\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u5df2\u7ecf\u6807\u8bb0\u7684\u6570\u636e\u4e2d\u5b66\u4e60\u5982\u4f55\u9884\u6d4b\u672a\u6807\u8bb0\u6570\u636e\u7684\u7c7b\u522b\u3002</li> <li>\u56de\u5f52\uff08regression\uff09: \u7528\u4e8e\u4f30\u8ba1\u56e0\u53d8\u91cf\uff08dependent variable, outcome, response...\uff09\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u53d8\u91cf\uff08independent variable, co-variants, feature...\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\u3002<ul> <li>\u7ebf\u6027\u56de\u5f52\uff08linear regression\uff09\uff1a\u8fd9\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u5b83\u8ba4\u4e3a\u56e0\u53d8\u91cf\u548c\u81ea\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u7ebf\u6027\u7684(\\(y=wx+b\\)\uff0c\u66f4\u51c6\u786e\u7684\u8868\u8fbe\u662f\\(y = \\vec{w}^T\\vec{x} + b\\))\u3002\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u62df\u5408\u3002</li> <li>\u903b\u8f91\u65af\u8c1b\u56de\u5f52\uff08Logistic regression\uff09\uff1a\u7ed3\u679c\u53ea\u67090\u548c1\u4e24\u79cd\u60c5\u51b5\uff0c\u7c7b\u4f3c\u4e8e\u5206\u7c7b\u95ee\u9898\u4e86\u3002</li> </ul> </li> </ul> </li> <li>\u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09\uff1a<ul> <li>\u805a\u7c7b\uff08clustering\uff09: \u5728\u6570\u636e\u4e2d\u53d1\u73b0\u76f8\u4f3c\u793a\u4f8b\u7684\u7ec4\uff0c\u5176\u4e2d\u79f0\u4e3a\u805a\u7c7b\u3002\u4e00\u822c\u6211\u4eec\u8bf4\u65e0\u76d1\u7763\u5b66\u4e60\u6307\u7684\u57fa\u672c\u4e0a\u5c31\u662f\u805a\u7c7b\u3002</li> <li>\u6216\u8005\u786e\u5b9a\u8f93\u5165\u7a7a\u95f4\u4e2d\u6570\u636e\u7684\u5206\u5e03\uff0c\u79f0\u4e3a\u5bc6\u5ea6\u4f30\u8ba1\uff0c\u6216\u8005\u5c06\u6570\u636e\u4ece\u9ad8\u7ef4\u7a7a\u95f4\u6295\u5f71\u5230\u4e8c\u7ef4\u6216\u4e09\u7ef4\u4ee5\u5b9e\u73b0\u53ef\u89c6\u5316\u3002</li> </ul> </li> </ul> <p>\u673a\u5668\u5b66\u4e60\u5728\u5b9e\u9645\u64cd\u4f5c\u5c42\u9762\u4e00\u5171\u5206\u4e3a7\u6b65\uff1a</p> <ol> <li>\u6536\u96c6\u6570\u636e</li> <li>\u6570\u636e\u51c6\u5907</li> <li>\u9009\u62e9\u4e00\u4e2a\u6a21\u578b</li> <li>\u8bad\u7ec3</li> <li>\u8bc4\u4f30</li> <li>\u53c2\u6570\u8c03\u6574</li> <li>\u9884\u6d4b\uff08\u5f00\u59cb\u4f7f\u7528\uff09</li> </ol> <p>\u5728\u7406\u8bba\u5c42\u9762\u5206\u4e3a3\u6b65\uff1a</p> <ul> <li>\u8bbe\u8ba1\u4e00\u4e2a\u5e26\u672a\u77e5\u53c2\u6570\u7684\u51fd\u6570 \uff08\u5373\u6a21\u578b\uff09</li> <li>\u5b9a\u4e49\u635f\u5931\u51fd\u6570 L</li> <li>\u6c42\u89e3\u4e00\u4e2a\u4f18\u5316\u95ee\u9898 \uff08\u8ba9\u635f\u5931\u51fd\u6570\u5728\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u7684\u6700\u597d\uff09</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#_2","title":"\u4e00\u4e9b\u7b97\u6cd5","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#_3","title":"\u5206\u7c7b\u7b97\u6cd5","text":"<p>Decision Tree: \u8fd9\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7ecf\u5178\u7684Classification\u7b97\u6cd5\u3002</p> <p>Nearest Neighbor (KNN): \u8fd9\u662f\u975e\u5e38\u7b80\u5355\u7ecf\u5178\u7684Classification\u7b97\u6cd5\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u201c\u8ddd\u79bb\u201d\uff0c\u5e38\u7528\u7684\u6709\u6b27\u6c0f\u8ddd\u79bb\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u6c49\u660e\u8ddd\u79bb\u7b49\u3002\u6ce8\u610f\u5728\u5b9e\u9645\u8bad\u7ec3\u4e2d\uff0c\u5c06\u4e0d\u540c\u7279\u5f81\u5f52\u4e00\u5316\u518d\u7b97\u8ddd\u79bb\u3002 KNN\u7b97\u6cd5\uff0c\u5373\u662f\u7ed9\u5b9a\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5bf9\u65b0\u7684\u8f93\u5165\u5b9e\u4f8b\uff0c\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u627e\u5230\u4e0e\u8be5\u5b9e\u4f8b\u6700\u90bb\u8fd1\u7684K\u4e2a\u5b9e\u4f8b\uff0c\u8fd9K\u4e2a\u5b9e\u4f8b\u7684\u591a\u6570\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff0c\u5c31\u628a\u8be5\u8f93\u5165\u5b9e\u4f8b\u5206\u7c7b\u5230\u8fd9\u4e2a\u7c7b\u4e2d\u3002\uff08\u8fd9\u5c31\u7c7b\u4f3c\u4e8e\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5c11\u6570\u670d\u4ece\u591a\u6570\u7684\u601d\u60f3\uff09\u3002 \u90a3\u4e48KNN\u7684\u53c2\u6570\u5c31\u53ea\u662f\u7b80\u5355\u7684K\u4e86\u3002K\u592a\u5c0f\u6216\u8005\u592a\u5927\u90fd\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u6548\u679c\u3002</p> <p>Bayes Classification Methods</p> <p>Support Vector Machine: \u5bf9\u4e8eSVM\u6765\u8bf4\uff0c\u6570\u636e\u70b9\u88ab\u89c6\u4e3a\u00a0p\u00a0\u7ef4\u5411\u91cf\uff0c\u800c\u6211\u4eec\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u7528\u00a0p-1 \u7ef4\u8d85\u5e73\u9762\u6765\u5206\u5f00\u8fd9\u4e9b\u70b9\uff0c\u8ba9\u8d85\u5e73\u9762\u548c\u6700\u8fd1\u7684\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u5316\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u3002  \u8bbe\u6837\u672c\u5c5e\u4e8e\u4e24\u4e2a\u7c7b\uff0c\u7528\u8be5\u6837\u672c\u8bad\u7ec3SVM\u5f97\u5230\u7684\u6700\u5927\u95f4\u9694\u8d85\u5e73\u9762\u3002\u5728\u8fb9\u7f18\u4e0a\u7684\u6837\u672c\u70b9\u79f0\u4e3a\u652f\u6301\u5411\u91cf\u3002\u6211\u4eec\u8981\u6c42\u7684\u53c2\u6570\u5c31\u662f\\(w\\)\u548c\\(b\\)\uff08\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u662f\u6570\u5b57\uff0cp\u7ef4\u5c31\u662fp-1\u4f4d\u5411\u91cf\u4e86\uff09\u3002 \u901a\u8fc7\u4e00\u4e9b\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528\u975e\u7ebf\u5f62\u7684\u65b9\u6cd5\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4f7f\u7528\u5e73\u9762\u5206\u5f00\u8fd9\u4e9b\u70b9\uff09\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff1b \u901a\u8fc7\u4e00\u4e9b\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u5206\u6210\u5927\u4e8e2\u7c7b\uff0c\u6700\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\\(C^2_n\\) \u6b21SVM\uff0c\u7136\u540e\u5c06\\(C^2_n\\)\u4e2a\u6a21\u578b\u5168\u90e8\u5e94\u7528\u5230\u6570\u636e\u4e2d\uff0c\u6700\u540e\u770b\u5206\u5230\u54ea\u4e00\u7c7b\u7684\u7ed3\u679c\u6700\u591a\u3002</p> <p>Perceptron</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#_4","title":"\u56de\u5f52\u7b97\u6cd5","text":"<p>\u5728\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5982\u4f55\u7528\u6a21\u578b\u62df\u5408\uff08fit\uff09\u6570\u636e\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u4e00\u4e2a\u62df\u5408\u7a0b\u5ea6\u7684\u5ea6\u91cf\u3002\u00a0\u635f\u5931\u51fd\u6570\uff08loss function\uff09 \u80fd\u591f\u91cf\u5316\u76ee\u6807\u7684 \u5b9e\u9645\u503c \u4e0e \u9884\u6d4b\u503c \u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u975e\u8d1f\u6570\u4f5c\u4e3a\u635f\u5931\uff0c\u4e14\u6570\u503c\u8d8a\u5c0f\u8868\u793a\u635f\u5931\u8d8a\u5c0f\uff0c\u5b8c\u7f8e\u9884\u6d4b\u65f6\u7684\u635f\u5931\u4e3a0\u3002 \u56de\u5f52\u95ee\u9898\u4e2d\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\u3002 \u5f53\u6837\u672c\\(i\\)\u7684\u9884\u6d4b\u503c\u4e3a\\(\\hat{y}_i\\)\uff0c\u5176\u76f8\u5e94\u7684\u771f\u5b9e\u6807\u7b7e\u4e3a\\(y_i\\)\u65f6\uff0c \u5e73\u65b9\u8bef\u5dee\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4ee5\u4e0b\u516c\u5f0f\uff1a</p> <p>$$L(args) = \\frac{1}{n}\\sum_{i=1}^n \\frac{1}{2}(\\hat{y}_i-y_i)^2 $$ \u6a21\u578b\u8bad\u7ec3\u7684\u76ee\u6807\u5c31\u662f\u627e\u5230\u53c2\u6570\\(args\\)\u4f7f\u5f97 Loss \u6700\u5c0f\u3002\u5bf9\u4e8e\u7ebf\u6027\u56de\u5f52\u6765\u8bf4\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u51fa\u53c2\u6570\u7684\u89e3\u6790\u89e3\u7684\u3002\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u6c42\u51fa\u89e3\u6790\u89e3\uff0c\u8fd9\u624d\u662f\u673a\u5668\u5b66\u4e60\u89e3\u51b3\u56de\u5f52\u95ee\u9898\u7684\u7528\u6b66\u4e4b\u5730\u3002</p> <ul> <li>Linear model<ul> <li>Linear regression, orthogonal regression</li> <li>Lasso, elastic regression, ridge regression, </li> <li>Logistic Regression (general linear)</li> </ul> </li> <li>Non-Linear model<ul> <li>MLP, DNN, CNN, RNN, LSTM (Deep learning)</li> <li>Decision Tree, random forest(ML, 2001)</li> <li>Adaboost(JCSS, 1997), Xgboost(KDD, 2016)</li> </ul> </li> </ul> <p>CNN(Convolutional Neural Networks, \u5377\u79ef\u795e\u7ecf\u7f51\u7edc)</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#_5","title":"\u805a\u7c7b\u7b97\u6cd5","text":"<p>k-min</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/ML/#_6","title":"\u4e00\u4e9b\u5e93","text":"<p>https://scikit-learn.org/stable/</p> <p></p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BB%9F%E8%AE%A1/","title":"\u7edf\u8ba1\u6982\u5ff5","text":"<p>\u4e00\u4e9b\u7edf\u8ba1\u7684\u6982\u5ff5\u5e38\u5e38\u88ab\u7528\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BB%9F%E8%AE%A1/#_2","title":"\u5e73\u65b9\u8bef\u5dee","text":"<p>\u5e73\u65b9\u8bef\u5dee (Squared Error)\u662f\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u89c2\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u7684\u5e73\u65b9\u3002\u516c\u5f0f\u4e3a\uff1a</p> \\[SE_i=(y_i\u2212\\hat y_i)^2\\] <p>\u5176\u4e2d\uff0c\\(y_i\\)\u662f\u7b2c\\(i\\)\u4e2a\u6837\u672c\u7684\u5b9e\u9645\u89c2\u6d4b\u503c\uff0c\\(\\hat{y}_i\\)\u662f\u6a21\u578b\u5bf9\u8be5\u6837\u672c\u7684\u9884\u6d4b\u503c\u3002</p> <p>\u5747\u65b9\u8bef\u5dee\uff08Mean Square Error\uff0cMSE\uff09\u53c8\u79f0\u4e3a\u4e8c\u6b21\u635f\u5931\u3001L2\u635f\u5931\uff0c\u5c31\u662f\u6240\u6709\u6837\u672c\u5e73\u65b9\u8bef\u5dee\u7684\u5e73\u5747\u503c\uff0c\u5e38\u7528\u4e8e\u56de\u5f52\u95ee\u9898\u4e2d\u3002</p> <p>\u5047\u8bbe\u6709 \\(n\\) \u4e2a\u8bad\u7ec3\u6570\u636e\uff0c\u5219\u5747\u65b9\u8bef\u5dee\u4e3a\uff1a</p> \\[MSE=\\frac{1}{n}\\sum_{i=1}^n(y_i\u2212\\hat y_i)^2\\]"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BB%9F%E8%AE%A1/#_3","title":"\u57fa\u5c3c\u6307\u6570","text":"<p>\u57fa\u5c3c\u6307\u6570\uff08Gini Index\uff09\uff1a\u5047\u8bbe\u6570\u636e\u96c6\\(D\\)\u4e2d\u6709\\(K\\)\u4e2a\u7c7b\uff0c\u6837\u672c\u5c5e\u4e8e\u7b2c\\(k\\)\u7c7b\u7684\u6bd4\u4f8b\u4e3a\\(p_k\\)\uff0c\u57fa\u5c3c\u6307\u6570\\(Gini(D)\\) \u8868\u793a\u96c6\u5408D\u7684\u4e0d\u786e\u5b9a\u6027\uff08\u7eaf\u5ea6\uff09\uff0c\u516c\u5f0f\u4e3a\uff1a</p> \\[Gini(D) = \\sum^K_{k=1}p_k(1-p_k)=1-\\sum^K_{k=1}p_k^2\\] <p>\u5982\u4f55\u7406\u89e3\u8fd9\u4e2a\u516c\u5f0f\uff1f\u5982\u679c\u6240\u6709\u6837\u54c1\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\uff0c\u5219\u57fa\u5c3c\u6307\u6570\u4e3a0\uff0c\u8868\u793a\u5b8c\u5168\u7eaf\u51c0\u3002\u5982\u679c\u7c7b\u522b\u5206\u5e03\u5747\u5300\uff08\u6bcf\u4e2a\u7c7b\u522b\u7684\u6837\u672c\u6bd4\u4f8b\u76f8\u540c\uff09\uff0c\u5219\u57fa\u5c3c\u4e0d\u7eaf\u5ea6\u8fbe\u5230\u6700\u5927\u503c\u3002</p> <p>\u5bf9\u4e8e\u7279\u5f81\\(A\\)\uff0c\u5c06\u96c6\u5408\\(D\\)\u5212\u5206\u6210\\(D_1\\)\u548c\\(D_2\\)\uff0c\u57fa\u5c3c\u6307\u6570\\(Gini(D,A)\\)\u8868\u793a\u7ecf\u8fc7\\(A=a\\)\u5212\u5206\u540e\u96c6\u5408\\(D\\)\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u516c\u5f0f\u4e3a\uff1a</p> \\[Gini(D,A=a)=\\frac{|D_1|}{|D|}Gini(D_1)+\\frac{|D_2|}{|D|}Gini(D_2)\\] <p>\u66f4\u4e00\u822c\u7684\uff0c\u5982\u679c\u7279\u5f81\\(T\\)\u5c06\u96c6\u5408\\(D\\)\u5212\u5206\u6210\\(K\\)\u4e2a\u7c7b\uff1a</p> \\[Gini(D,T)=\\sum_{k=1}^K \\frac{|D_k|}{|D|}Gini(D_k)\\] <p>\u5728\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u627e\u7684\u5c31\u662f\u4e00\u4e2a\u7279\u5f81\\(A=a\\)\uff0c\u8ba9\u4e0a\u9762\u7684\u516c\u5f0f\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7279\u5f81\u975e\u5e38\u7684\u6709\u6548\uff0c\u5206\u7684\u6cfe\u6e2d\u5206\u660e\u3002</p> <p>\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u7528\u6765\u63cf\u8ff0\u8d2b\u5bcc\u5dee\u8ddd\u7684\u57fa\u5c3c\u7cfb\u6570\uff08Gini Coefficient\uff09\uff0c\u4ed6\u4eec\u7684\u5173\u7cfb\u4e0d\u5927\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BB%9F%E8%AE%A1/#_4","title":"\u71b5","text":"<p>\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u201c\u71b5\u201d\u88ab\u7528\u6765\u8868\u793a\u70ed\u529b\u5b66\u7cfb\u7edf\u6240\u5448\u73b0\u7684\u65e0\u5e8f\u7a0b\u5ea6\u3002\u9999\u519c\u5c06\u8fd9\u4e00\u6982\u5ff5\u5f15\u5165\u4fe1\u606f\u8bba\u9886\u57df\uff0c\u63d0\u51fa\u4e86\u201c\u4fe1\u606f\u71b5\u201d\u6982\u5ff5\uff0c\u901a\u8fc7\u5bf9\u6570\u51fd\u6570\u6765\u6d4b\u91cf\u4fe1\u606f\u7684\u4e0d\u786e\u5b9a\u6027\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BB%9F%E8%AE%A1/#_5","title":"\u6b8b\u5dee","text":"<p>\u5728\u56de\u5f52\u5206\u6790\u4e2d\uff0c\u6b8b\u5dee\u662f\u89c2\u6d4b\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\uff0c\u6b8b\u5dee\u5c31\u662f\u5b9e\u9645\u6570\u636e\u70b9\u4e0e\u6a21\u578b\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8C%BA%E5%9D%97%E9%93%BE/","title":"\u533a\u5757\u94fe","text":"<p>\u533a\u5757\u94fe\u53ef\u4ee5\u5f53\u4f5c\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u3002</p> <ul> <li>\u4e0d\u540c\u8282\u70b9\u4e4b\u95f4\u7684\u72b6\u6001\u540c\u6b65\u901a\u8fc7\u7f51\u7edc\u4ea4\u4e92\u548c\u5171\u8bc6\u534f\u8bae\u5b8c\u6210\u3002</li> <li>\u5bf9\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5\u7684\u64cd\u4f5c\u5c31\u662f\u53d1\u9001\u4ea4\u6613\u3002<ul> <li>\u5982\u679c\u662f\u5bf9\u667a\u80fd\u5408\u7ea6\u53d1\u9001\u7684\u4ea4\u6613\uff0c\u90a3\u4e48\u4ea4\u6613\u8fd8\u8981\u5728\u533a\u5757\u94fe\u865a\u62df\u673a\u4e2d\u6267\u884c\u3002</li> </ul> </li> <li>\u5bc6\u7801\u5b66 \u5bf9\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\uff0c\u8eab\u4efd\u9a8c\u8bc1\uff08\u4ea4\u6613\u7b7e\u540d\uff09\u7b49\u8d77\u4f5c\u7528\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8C%BA%E5%9D%97%E9%93%BE/#_2","title":"\u7f51\u7edc\u5c42","text":"<ul> <li>Ethereum P2P\u7f51\u7edc https://ethereum.org/zh/developers/docs/networking-layer/</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8C%BA%E5%9D%97%E9%93%BE/#_3","title":"\u5171\u8bc6\u5c42","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8C%BA%E5%9D%97%E9%93%BE/#_4","title":"\u865a\u62df\u673a","text":"<ul> <li>EVM\u865a\u62df\u673a https://ethereum.org/zh/developers/docs/evm/</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8C%BA%E5%9D%97%E9%93%BE/#_5","title":"\u5bc6\u7801\u5b66","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AF%86%E7%A0%81%E5%AD%A6/MPC/","title":"MPC","text":"<p>https://www.zellic.io/blog/mpc-from-scratch/</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","title":"\u64cd\u4f5c\u7cfb\u7edf","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5173\u4e8e VFS\uff0c\u6709\u4e00\u7bc7 \u4e0d\u9519\u7684\u4ecb\u7ecd\u3002\u8fd9\u662f 2.6.39 \u7684\u4ee3\u7801\uff0c\u5f88\u7b80\u6d01</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#virtual-file-system-data-structure","title":"Virtual File System Data Structure","text":"<p>\u8d85\u7ea7\u5757\u3001Inode\u3001\u76ee\u5f55\u9879\u3001\u6587\u4ef6\u5bf9\u8c61 \u88ab\u79f0\u4e3a\u6587\u4ef6\u7cfb\u7edf\u7684\u56db\u5927\u6570\u636e\u7ed3\u6784\u3002\u65e0\u8bba\u5e95\u5c42\u7684\u771f\u5b9e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u662f\u5426\u6709\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u5728 VFS \u4e2d\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u8d85\u7ea7\u5757 (struct super_block) \u4ee3\u8868\u4e86\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u8d85\u7ea7\u5757\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u63a7\u5236\u5757\uff0c\u6709\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\uff0c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u6240\u6709\u7684 inode \u90fd\u8981\u8fde\u63a5\u5230\u8d85\u7ea7\u5757\u4e0a\uff0c\u53ef\u4ee5\u8bf4\uff0c\u4e00\u4e2a\u8d85\u7ea7\u5757\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u3002</p> <pre><code>// \u8fd9\u4e2alist\u4e0a\u8fb9\u7684\u5c31\u662f\u6240\u6709\u7684\u5728linux\u4e0a\u8bb0\u5f55\u7684\u6587\u4ef6\u7cfb\u7edf\nstruct list_head    s_list;  \n// \u6302\u8f7d\u70b9\nstruct dentry  *s_root;\n// \u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b \u4e5f\u5c31\u662f\u5f53\u524d\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b ext4/fat32\n// \u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u4e0b\u53ef\u4ee5\u5305\u62ec\u5f88\u591a\u6587\u4ef6\u7cfb\u7edf\u5373\u5f88\u591a\u7684super_block\nstruct file_system_type *s_type;\n// Filesystem private info \u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b58\u4e00\u4e9b\u4f60\u60f3\u8981\u7684\u81ea\u5b9a\u4e49\u7684\u4e1c\u897f\nvoid   *s_fs_info; \n</code></pre> <p>Inode(struct inode) \u4fdd\u5b58\u7684\u5176\u5b9e\u662f\u5b9e\u9645\u7684\u6570\u636e\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u79f0\u4e3a\u201c\u5143\u6570\u636e\u201d(\u4e5f\u5c31\u662f\u5bf9\u6587\u4ef6\u5c5e\u6027\u7684\u63cf\u8ff0)\u3002\u4f8b\u5982\uff1a\u6587\u4ef6\u5927\u5c0f\uff0c\u8bbe\u5907\u6807\u8bc6\u7b26\uff0c\u7528\u6237\u6807\u8bc6\u7b26\uff0c\u7528\u6237\u7ec4\u6807\u8bc6\u7b26\uff0c\u6587\u4ef6\u6a21\u5f0f\uff0c\u6269\u5c55\u5c5e\u6027\uff0c\u6587\u4ef6\u8bfb\u53d6\u6216\u4fee\u6539\u7684\u65f6\u95f4\u6233\uff0c\u94fe\u63a5\u6570\u91cf\uff0c\u6307\u5411\u5b58\u50a8\u8be5\u5185\u5bb9\u7684\u78c1\u76d8\u533a\u5757\u7684\u6307\u9488\uff0c\u6587\u4ef6\u5206\u7c7b\u7b49\u7b49\u3002</p> <pre><code>// \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u5e73\u65f6\u770b\u5230\u7684drwxrwxr-x\u7684\u6570\u636e\numode_t            i_mode;\n// \nunion {\n    struct hlist_head i_dentry;\n    struct rcu_head  i_rcu;\n};\nstruct super_block *i_sb;\n// \u8fd9\u5c31\u662f inode numebr\nunsigned long  i_ino;\n// fs or device private pointer \u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b58\u4e00\u4e9b\u4f60\u60f3\u8981\u7684\u81ea\u5b9a\u4e49\u7684\u4e1c\u897f\nvoid   *i_private; \nstruct address_space *i_mapping;\nstruct address_space i_data;\n</code></pre> <p>\u76ee\u5f55\u9879 (struct dentry)\uff1a\u76ee\u5f55\u9879\u662f \u63cf\u8ff0\u6587\u4ef6 \u7684\u903b\u8f91\u5c5e\u6027\uff0c\u53ea\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u5e76\u6ca1\u6709\u5b9e\u9645\u5bf9\u5e94\u7684\u78c1\u76d8\u4e0a\u7684\u63cf\u8ff0\uff0c\u66f4\u786e\u5207\u7684\u8bf4\u662f\u5b58\u5728\u4e8e\u5185\u5b58\u7684\u76ee\u5f55\u9879\u7f13\u5b58\uff0c\u4e3a\u4e86\u63d0\u9ad8\u67e5\u627e\u6027\u80fd\u800c\u8bbe\u8ba1\u3002\u6ce8\u610f \u4e0d\u7ba1\u662f\u6587\u4ef6\u5939\u8fd8\u662f\u6700\u7ec8\u7684\u6587\u4ef6\uff0c\u90fd\u662f\u5c5e\u4e8e\u76ee\u5f55\u9879\uff0c\u6240\u6709\u7684\u76ee\u5f55\u9879\u5728\u4e00\u8d77\u6784\u6210\u4e00\u9897\u5e9e\u5927\u7684\u76ee\u5f55\u6811\u3002\u4f8b\u5982\uff1aopen \u4e00\u4e2a\u6587\u4ef6/home/xxx/yyy.txt\uff0c\u90a3\u4e48/\u3001home\u3001xxx\u3001yyy.txt \u90fd\u662f\u4e00\u4e2a\u76ee\u5f55\u9879\uff0cVFS \u5728\u67e5\u627e\u7684\u65f6\u5019\uff0c\u6839\u636e\u4e00\u5c42\u4e00\u5c42\u7684\u76ee\u5f55\u9879\u627e\u5230\u5bf9\u5e94\u7684\u6bcf\u4e2a\u76ee\u5f55\u9879\u7684 inode\uff0c\u90a3\u4e48\u6cbf\u7740\u76ee\u5f55\u9879\u8fdb\u884c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u7ec8\u7684\u6587\u4ef6\u3002</p> <pre><code>// small names \u6587\u4ef6\u7684\u540d\u5b57\uff0c\u8fd8\u6709\u4e00\u4e2a\u7ed3\u6784\u662fd_name\u91cc\u9762\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u4e86d_iname\nunsigned char d_iname[DNAME_INLINE_LEN]; \n// Where the name belongs to\nstruct inode *d_inode; \n// \u5bf9\u5e94\u7684super_block\nstruct super_block *d_sb; \n// fs-specific data \u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b58\u4e00\u4e9b\u4f60\u60f3\u8981\u7684\u81ea\u5b9a\u4e49\u7684\u4e1c\u897f\nvoid *d_fsdata;   \n// \u4e0b\u9762\u4e09\u4e2aentry\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784 \n// list_head\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868,\u6307\u5411\u7684\u662f\u5176\u4ed6d_entry\u5bf9\u5e94\u7684list_head entry\uff0c\u7136\u540e\u518d\u7528hack\u7684\u5b8f\u5b8c\u6210\u6307\u5411\u771f\u6b63\u7684d_entry\n// (struct dentry*)((char *)me-&gt;d_child.head -(char *)&amp;((struct dentry *)0)-&gt;d_child))\n// \u5bf9\u4e8e\u975e\u76ee\u5f55\u6587\u4ef6\uff0cd_subdirs \u5c31\u6307\u5411\u4ed6\u81ea\u5df1\uff08\u8fd9\u4e2aentry\uff09\nstruct dentry *d_parent; /* parent directory \u7236 */\nstruct list_head d_child; /* child of parent list \u5144 */ \nstruct list_head d_subdirs; /* our children \u5b50 */\n</code></pre> <p>\u6587\u4ef6\u5bf9\u8c61 (struct file)\uff1a\u6ce8\u610f\u6587\u4ef6\u5bf9\u8c61\u63cf\u8ff0\u7684\u662f\u8fdb\u7a0b\u5df2\u7ecf\u6253\u5f00\u7684\u6587\u4ef6\u3002\u56e0\u4e3a\u4e00\u4e2a\u6587\u4ef6\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u6253\u5f00\uff0c\u6240\u4ee5\u4e00\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002\u4f46\u662f\u7531\u4e8e\u6587\u4ef6\u662f\u552f\u4e00\u7684\uff0c\u90a3\u4e48 inode \u5c31\u662f\u552f\u4e00\u7684\uff0c\u76ee\u5f55\u9879\u4e5f\u662f\u5b9a\u7684\u3002struct path</p> <pre><code>// path\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ed3\u6784\u4f53\uff0c\u91cc\u9762\u6709\u4e24\u9879\uff0c\u5176\u4e2d\u4e00\u9879\u5c31\u662fdentry\nstruct path  f_path;\nstruct inode *f_inode; /* cached value */\n// \u4e00\u4e9bflag\u89c4\u5b9a\u6587\u4ef6\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u6743\u9650\nfmode_t   f_mode;\nconst struct file_operations *f_op;\nstruct address_space *f_mapping;\n// \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b58\u4e00\u4e9b\u4f60\u60f3\u8981\u7684\u81ea\u5b9a\u4e49\u7684\u4e1c\u897f\nvoid   *private_data;\n</code></pre> <p>\u5173\u4e8e\u4ed6\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a</p> <ul> <li>inode -&gt; dentry: \u5229\u7528 <code>hlist_for_each_entry</code> \u5b8f\u904d\u5386 <code>i_dentry</code> \u5b57\u6bb5\uff0c\u53ef\u4ee5\u53c2\u8003 Linux \u4e2d\u7684 \u4e00\u4e2a\u4f8b\u5b50\u3002</li> <li>dentry -&gt; inode: \u5229\u7528 <code>d_inode</code> \u51fd\u6570\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528 <code>d_inode</code> \u5b57\u6bb5\u3002</li> <li>path -&gt; dentry: \u5229\u7528 <code>dentry</code> \u5b57\u6bb5\u3002</li> <li>dentry -&gt; char * \u8def\u5f84: \u5229\u7528 <code>dentry_path</code> \u51fd\u6570\u3002</li> <li>path -&gt; char * \u8def\u5f84: \u5229\u7528 <code>d_path</code> \u51fd\u6570\u3002</li> <li>char * \u8def\u5f84 -&gt; path: \u5229\u7528 kern_path \u51fd\u6570\u3002</li> <li>superblock -&gt; inode: <code>iget_locked</code> \u6216\u8005 <code>iget5_locked</code>\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#virtual-file-system-operation","title":"Virtual File System Operation","text":"<p>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u662f\u7c7b\u4f3c\u4e8e Trait \u4e00\u6837\u7684\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u8981\u66b4\u9732\u4e00\u4e9b\u63a5\u53e3\u4f9b\u771f\u6b63\u7684\u5b9e\u73b0\u3002\u5728 C \u8bed\u8a00\u4e2d\u5c31\u662f\u4e00\u5806\u51fd\u6570\u6307\u9488\uff0c\u6709\u4e0b\u9762\u8fd9\u4e9b\u65b9\u6cd5 (\u8fd9\u4e9b struct \u662f\u4e00\u5927\u5806\u65b9\u6cd5\u7684\u96c6\u5408)</p> <ul> <li>file_system_type -&gt; <code>mount</code>: the method to call when a new instance of this filesystem should be mounted</li> <li>file_system_type -&gt; <code>kill_sb</code>: the method to call when an instance of this filesystem should be shut down</li> <li>super_block -&gt; <code>struct super_operations</code>: This describes how the VFS can manipulate the superblock of your filesystem</li> <li>statfs:</li> <li>inode -&gt; <code>struct inode_operations</code>: This describes how the VFS can manipulate an inode in your filesystem.</li> <li>dentry -&gt; <code>struct dentry_operations</code>: This describes how a filesystem can overload the standard dentry operations.</li> <li>file -&gt; <code>struct file_operations</code>: This describes how the VFS can manipulate an open file.</li> <li>address_space -&gt;<code>struct address_space_operations</code>: This describes how the VFS can manipulate mapping of a file to page cache in your filesystem.</li> </ul> <p>\u6240\u4ee5\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u8981\u91cd\u5199\u5417\uff1f\u6ca1\u6709\u9ed8\u8ba4\u5b9e\u73b0\u5417\uff1f\u5e76\u4e0d\u662f\u7684\uff0c\u6709\u4e9b\u53ef\u4ee5\u662f NULL\uff0c\u8868\u793a\u4e0d\u9700\u8981\u6216\u8005\u91c7\u7528\u9ed8\u8ba4\u5b9e\u73b0\u3002\u8fd9\u7bc7\u6587\u7ae0 \u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u53c2\u8003\uff0c\u4e0d\u8fc7\u5982\u679c\u81ea\u5df1\u60f3\u8981\u5b9e\u73b0\uff0c\u9700\u8981\u6ce8\u610f\u5185\u6838\u7248\u672c\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#_2","title":"\u4e0b\u9762\u7684\u5185\u5bb9\u662f\u4e00\u4e9b\u96f6\u788e\u7684\u7b14\u8bb0","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#mount","title":"mount","text":"<p>mount [-t vfstype] [-o options] [\u8bbe\u5907\u540d\u79f0] [\u6302\u8f7d\u70b9]</p> <ul> <li><code>\u6302\u8f7d\u70b9</code>: \u5fc5\u987b\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u6302\u8f7d\u540e\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u4ee5\u524d\u7684\u5185\u5bb9\u5c06\u4e0d\u53ef\u7528\uff0cumount \u4ee5\u540e\u4f1a\u6062\u590d\u6b63\u5e38</li> <li><code>\u8bbe\u5907\u540d\u79f0</code>: \u53ef\u4ee5\u662f\u4e00\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a usb \u8bbe\u5907\uff0c\u5149\u9a71\uff0c\u8f6f\u76d8\uff0c\u7f51\u7edc\u5171\u4eab\u7b49</li> <li><code>-t</code> \u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u7684\u7c7b\u578b\uff0c\u901a\u5e38\u4e0d\u5fc5\u6307\u5b9a\u3002mount \u4f1a\u81ea\u52a8\u9009\u62e9\u6b63\u786e\u7684\u7c7b\u578b\u3002\u5e38\u7528\u7c7b\u578b\u6709\uff1a</li> </ul> <p>\u4ece\u4ee3\u7801\u5b9e\u73b0\u7684\u89d2\u5ea6\uff0c\u6302\u8f7d\u7684\u8fc7\u7a0b\u5c31\u662f\u5c06\u4ee3\u8868\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684 \"super_block\" \u7ed3\u6784\u4f53\uff0c\u52a0\u5165\u7531\u4e4b\u524d\u5df2\u7ecf\u6302\u8f7d\u7684\u6240\u6709 filesystems \u7ec4\u6210\u7684\u53cc\u5411\u94fe\u8868\u4e2d\uff08\u5373 <code>s_list</code>\uff09\u3002</p> <p>\u540c\u4e00\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u88ab\u6302\u8f7d\u5230\u591a\u4e2a mount point\uff0c\u8fd9\u88ab\u79f0\u4e3a \"bind mount\"\uff08\u591a\u4e2a\u8def\u5f84\u662f bind \u5728\u4e00\u8d77\u7684\uff09\uff1a</p> <p>mount --bind  <p>\u5176\u5b9e\u8fd9\u5e76\u4e0d\u96be\u7406\u89e3\uff0c\u5b83\u5c31\u50cf\u662f\u6587\u4ef6\u7cfb\u7edf\u5c42\u9762\u7684\u4e00\u4e2a symbol link\u3002</p> <p>\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u5171\u7528\u540c\u4e00\u4e2a mount point\uff0c\u65b0\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u4f1a \u8986\u76d6 \u6389\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u8986\u76d6\uff0c\u6307\u6682\u65f6\u4e0d\u53ef\u89c1\uff0c\u5e76\u4e0d\u662f\u628a\u5185\u5bb9\u8986\u76d6\u4e86\uff09\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#rootfs","title":"rootfs","text":"<p>\u4e4b\u524d\u8bf4\u6302\u8f7d\u70b9\u5fc5\u987b\u662f\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u6240\u4ee5 <code>/</code> \u662f\u600e\u4e48\u6302\u8f7d\u4e0a\u53bb\u7684\uff1f\u86cb\u751f\u9e21\u9e21\u751f\u86cb\uff1f</p> <p>rootfs \u5c31\u662f\u6240\u8c13\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u3002Linux \u542f\u52a8\u65f6\uff0c\u7b2c\u4e00\u4e2a\u5fc5\u987b\u6302\u8f7d\u7684\u662f\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u82e5\u7cfb\u7edf\u4e0d\u80fd\u4ece\u6307\u5b9a\u8bbe\u5907\u4e0a\u6302\u8f7d\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5219\u7cfb\u7edf\u4f1a\u51fa\u9519\u800c\u9000\u51fa\u542f\u52a8\u3002\u6839\u6587\u4ef6\u7cfb\u7edf\u5305\u542b\u7cfb\u7edf\u542f\u52a8\u65f6\u6240\u5fc5\u987b\u7684\u76ee\u5f55\u548c\u5173\u952e\u6027\u7684\u6587\u4ef6</p> <ol> <li>init \u8fdb\u7a0b\u7684\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u8fd0\u884c\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0a</li> <li>\u6839\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86\u6839\u76ee\u5f55 <code>/</code></li> <li>linux \u6302\u8f7d\u5206\u533a\u65f6\u6240\u4f9d\u8d56\u7684\u4fe1\u606f\u5b58\u653e\u4e8e\u6839\u6587\u4ef6\u7cfb\u7edf <code>/etc/fstab</code> \u8fd9\u4e2a\u6587\u4ef6\u4e2d</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#inode","title":"\u5206\u6790 inode \u7684\u751f\u547d\u5468\u671f","text":"<ul> <li><code>super_operations-&gt;alloc_inode</code>\uff1athis method is called by <code>alloc_inode()</code> to allocate memory for struct inode and initialize it. If this function is not defined, a simple \u2018struct inode\u2019 is allocated. Normally alloc_inode will be used to allocate a larger structure which contains a \u2018struct inode\u2019 embedded within it.</li> <li>\u90a3\u4e48\uff0c\u4ec0\u4e48\u5730\u65b9\u8c03\u7528\u4e86 <code>alloc_inode</code> \u5462\uff1f\u6709\u4e09\u4e2a\u51fd\u6570 <code>new_inode_pseudo</code>,<code>iget5_locked</code>,<code>iget_locked</code></li> <li><code>new_inode_pseudo</code> \u662f\u4e00\u4e2a\u6b8b\u5e9f\u7684\u51fd\u6570\uff0c\u5728 <code>proc</code> \u8fd9\u4e2a\u4ec5\u5b58\u5728\u4e8e\u5185\u5b58\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6709\u4f7f\u7528\u3002</li> <li><code>iget5_locked</code> \u548c <code>iget_locked</code> \u4e3b\u8981\u529f\u80fd\u90fd\u662f\u6839\u636e ino \u5728 super_block \u4e2d\u627e inode\uff0c\u4e0d\u8fc7 <code>iget5_locked</code> \u53ef\u4ee5\u5e26\u4e0a\u56de\u8c03\u51fd\u6570\u3002</li> <li>\u7814\u7a76 ext2 \u6587\u4ef6\u7cfb\u7edf\u3002<code>iget_locked</code> \u88ab <code>ext2_iget</code> \u8c03\u7528\u3002\u867d\u7136\u6709\u82e5\u5e72\u4e2a\u573a\u666f\u4f7f\u7528\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u7684\u662f <code>ext2_lookup</code>\uff0c\u4ed6\u8bd5\u56fe\u901a\u8fc7 <code>ext2_inode_by_name</code>\uff0c\u901a\u8fc7 dentry \u7684\u8def\u5f84\u4fe1\u606f\uff0c\u53bb\u5bfb\u627e ino\uff0c\u7136\u540e\u518d\u53bb\u5bfb\u627e inode\u3002</li> <li>\u6240\u4ee5\uff0c\u5173\u952e\u662f <code>inode_operations-&gt;lookup</code> \u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e86 dentry \u5230 inode \u7684\u8f6c\u53d8\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u5b57\u7b26\u4e32\u8def\u5f84\uff0c\u7136\u540e\u89e3\u6790\u6210 dentry\uff0c\u518d\u53bb lookup</li> <li>lookup \u53ef\u80fd\u4f1a\u627e\u5230\u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u7684 inode\uff0c\u8fd8\u4e0d\u5728\u5185\u5b58\u4e2d\u7684 inode\uff0c\u6216\u8005\u786c\u76d8\u4e0a\u4e5f\u6ca1\u6709\u7684 inode\uff1f</li> <li>alloc_inode \u4e2d\u4f1a\u8c03\u7528 <code>inode_init_always</code> \u4e2d\u4f1a\u521d\u59cb\u5316 inode \u7684\u4e00\u4e9b entry\uff0c\u5728 ext2_iget \u4e2d\u4f1a\u6839\u636e\u786c\u76d8\u4e0a\u7684 inode \u53bb\u521d\u59cb\u5316 inode \u7684\u4e00\u4e9b entry\u3002</li> <li><code>super_operations-&gt;destroy_inode</code>\uff1athis method is called by <code>destroy_inode()</code> to release resources allocated for struct inode. It is only required if <code>-&gt;alloc_inode</code> was defined and simply undoes anything done by <code>-&gt;alloc_inode</code>.</li> </ul> <p>\u5f52\u7eb3\u4e00\u4e0b\uff0c\u8def\u5f84 -&gt; filename_lookup -&gt; ext4_lookup(\u5728\u8fd9\u91cc\u4f1a\u6839\u636e\u6587\u4ef6\u540d\u67e5 ino) -&gt; ext4_iget -&gt; iget_locked(ino -&gt; inode) -&gt; alloc_inode(\u5206\u914d\u5185\u5b58\uff0c\u521d\u59cb\u5316)</p> <pre><code>#0  alloc_inode (sb=0xffff888006106800) at fs/inode.c:226\n#1  0xffffffff812ebe9e in iget_locked (sb=0xffff888006106800, ino=0x134) at fs/inode.c:1192\n#2  0xffffffff81399ee0 in __ext4_iget (sb=0xffff888006106800, ino=0x134, flags=&lt;optimized out&gt;, function=0xffffffff82081c00 &lt;__func__.72414&gt; \"ext4_lookup\", line=&lt;optimized out&gt;) at fs/ext4/inode.c:4878\n#3  0xffffffff813b2bf7 in ext4_lookup (flags=&lt;optimized out&gt;, dentry=&lt;optimized out&gt;, dir=&lt;optimized out&gt;) at fs/ext4/namei.c:1701\n#4  ext4_lookup (dir=0xffff8880066e1a98, dentry=0xffff88800673dd80, flags=&lt;optimized out&gt;) at fs/ext4/namei.c:1676\n#5  0xffffffff812d7ee2 in __lookup_slow (name=0xffffc90000393cf0, dir=0xffff8880066d5000, flags=0x1) at fs/namei.c:1664\n#6  0xffffffff812d7feb in lookup_slow (name=0xffffc90000393cf0, dir=0xffff8880066d5000, flags=0x1) at fs/namei.c:1681\n#7  0xffffffff812d81ea in walk_component (nd=0xffffc90000393ce0, flags=0x0) at fs/namei.c:1801\n#8  0xffffffff812d90d0 in lookup_last (nd=&lt;optimized out&gt;) at fs/namei.c:2264\n#9  path_lookupat (nd=0xffffc90000393ce0, flags=0x0, path=&lt;optimized out&gt;) at fs/namei.c:2309\n#10 0xffffffff812ddb3e in filename_lookup (dfd=&lt;optimized out&gt;, name=0xffff8880075f1000, flags=0x1, path=0xffffc90000393e30, root=&lt;optimized out&gt;) at fs/namei.c:2339\n#11 0xffffffff812ddcea in user_path_at_empty (dfd=0xffffff9c, name=&lt;optimized out&gt;, flags=0x1, path=0xffffc90000393e30, empty=&lt;optimized out&gt;) at fs/namei.c:2599\n#12 0xffffffff812d033d in user_path_at (path=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, name=&lt;optimized out&gt;, dfd=&lt;optimized out&gt;) at ./include/linux/namei.h:49\n#13 vfs_statx (dfd=0xffffff9c, filename=0x555f6ae2e8e0 \"local\", flags=0x800, stat=&lt;optimized out&gt;, request_mask=0x7ff) at fs/stat.c:187\n#14 0xffffffff812d093e in vfs_stat (stat=&lt;optimized out&gt;, filename=&lt;optimized out&gt;) at ./include/linux/fs.h:3253\n#15 __do_sys_newstat (filename=&lt;optimized out&gt;, statbuf=0x7ffd5ddbc3c0) at fs/stat.c:341\n#16 0xffffffff812d0996 in __se_sys_newstat (statbuf=&lt;optimized out&gt;, filename=&lt;optimized out&gt;) at fs/stat.c:337\n#17 __x64_sys_newstat (regs=&lt;optimized out&gt;) at fs/stat.c:337\n#18 0xffffffff81004017 in do_syscall_64 (nr=&lt;optimized out&gt;, regs=0xffffc90000393f58) at arch/x86/entry/common.c:290\n#19 0xffffffff81c0008c in entry_SYSCALL_64 () at arch/x86/entry/entry_64.S:175\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#_3","title":"\u5185\u6838\u8bfb\u5199\u6587\u4ef6","text":"<p>Since version 4.14 of Linux kernel, <code>vfs_read</code> and <code>vfs_write</code> functions are no longer exported for use in modules. Instead, functions exclusively for kernel's file access are provided:</p> <pre><code># Read the file from the kernel space.\nssize_t kernel_read(struct file *file, void *buf, size_t count, loff_t *pos);\n\n# Write the file from the kernel space.\nssize_t kernel_write(struct file *file, const void *buf, size_t count,\n            loff_t *pos);\n</code></pre> <p>Also, <code>filp_open</code> no longer accepts user-space string, so it can be used for kernel access directly (without dance with <code>set_fs</code>).</p> <p>\u6253\u5f00\u6587\u4ef6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e2a \u9a71\u52a8\u7684\u4f8b\u5b50\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#registering-and-mounting-a-filesystem","title":"Registering and Mounting a Filesystem","text":"<p>\u8fd9\u662f\u7528\u4e8e\u6ce8\u518c file system type \u7684\u63a5\u53e3\u3002</p> <pre><code>extern int register_filesystem(struct file_system_type *);\nextern int unregister_filesystem(struct file_system_type *);\n</code></pre> <p>\u4e00\u822c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6211\u4eec <code>file_system_type</code> \u7136\u540e\u6ce8\u518c\u4ed6\u3002\u867d\u7136\u5b83\u6709\u5f88\u591a\u5b57\u6bb5\uff0c\u4f46\u662f\u770b\u8d77\u6765\u4e0b\u9762\u7684\u5b57\u6bb5\u662f\u5fc5\u987b\u7684\uff0c\u4ee3\u7801\u6765\u81ea 5.17</p> <pre><code>static struct file_system_type ext2_fs_type = {\n .owner  = THIS_MODULE,\n .name  = \"ext2\",\n .mount  = ext4_mount,\n .kill_sb = kill_block_super,\n .fs_flags = FS_REQUIRES_DEV,\n};\n</code></pre> <p>\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u4e86\uff0c<code>mount</code> \u548c <code>kill_sb</code> \u662f\u201c\u63a5\u53e3\u201d\uff0c\u4e5f\u5c31\u662f\u51fd\u6570\u6307\u9488\u3002\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u53bb\u5b9e\u73b0\u4ed6\u4eec\u5462\uff1f\u53c2\u8003\u4e00\u4e9b\u4ee3\u7801\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4f1a\u662f\u7b80\u5355\u5c01\u88c5\u4e0b\u9762\u51e0\u4e2a\u51fd\u6570\u4e4b\u4e00\uff0c<code>ext4_mount</code> \u5c31\u662f\u5bf9 <code>mount_bdev</code> \u7684\u7b80\u5355\u5c01\u88c5\u3002</p> <pre><code>extern struct dentry *mount_bdev(struct file_system_type *fs_type,\n int flags, const char *dev_name, void *data,\n int (*fill_super)(struct super_block *, void *, int));\nextern struct dentry *mount_single(struct file_system_type *fs_type,\n int flags, void *data,\n int (*fill_super)(struct super_block *, void *, int));\nextern struct dentry *mount_nodev(struct file_system_type *fs_type,\n int flags, void *data,\n int (*fill_super)(struct super_block *, void *, int));\n</code></pre> <p>\u53c2\u7167 <code>ext4_mount</code> \u7684\u4ee3\u7801\u3002\u6240\u4ee5\uff0c\u770b\u8d77\u6765 <code>fill_super</code> \u51fd\u6570\u7684\u5b9e\u73b0\u624d\u662f\u91cd\u70b9\u6240\u5728\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u6bcf\u4e2a\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u548c <code>super_block</code> \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u987e\u540d\u601d\u4e49 <code>fill_super</code> \u5c31\u662f\u88c5\u586b <code>super_block</code>\u3002\u4ed6\u7684\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u662f</p> <ul> <li><code>struct super_block *sb</code> the superblock structure. The callback must initialize this properly.</li> <li><code>void *data</code> arbitrary mount options, usually comes as an ASCII string (see \u201cMount Options\u201d section)</li> <li><code>int silent</code> whether or not to be silent on error</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#fs_struct-files_struct","title":"fs_struct \u548c files_struct","text":"<p>\u987a\u5e26\u4e00\u63d0\uff0c<code>task_struct</code> \u4e2d\u6709\u4e24\u4e2a\u7ed3\u6784</p> <pre><code>/* Filesystem information: */\nstruct fs_struct  *fs;\n/* Open file information: */\nstruct files_struct  *files;\n</code></pre> <p>\u6211\u4eec\u5e38\u8bf4\u7684 \u6253\u5f00\u6587\u4ef6\u8868 \u6307\u7684\u662f\u540e\u8005\uff0c<code>files_struct -&gt; fdt</code> \u6307\u5411\u4e86\u6253\u5f00\u6587\u4ef6\u8868\uff0c<code>fdtable -&gt; fd</code> \u662f\u4e00\u4e2a <code>file</code> \u6570\u7ec4\u3002\u6211\u4eec\u83b7\u5f97\u7684 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u5176\u5b9e\u5c31\u662f\u8fd9\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\uff0c<code>fd[fd]</code> \u5c31\u662f\u4e00\u4e2a <code>file *</code> \u7c7b\u578b\u3002</p> <pre><code>// include/linux/fdtable.h of linux-2.6.37\nstruct files_struct {\n  /*\n   * read mostly part\n   */\n        atomic_t count;\n        struct fdtable __rcu *fdt;\n        struct fdtable fdtab;\n  /*\n   * written part on a separate cache line in SMP\n   */\n        spinlock_t file_lock ____cacheline_aligned_in_smp;\n        int next_fd;\n        struct embedded_fd_set close_on_exec_init;\n        struct embedded_fd_set open_fds_init;\n        struct file __rcu * fd_array[NR_OPEN_DEFAULT];\n};\n\nstruct fdtable {\n        unsigned int max_fds;\n        struct file __rcu **fd;      /* current fd array */\n        fd_set *close_on_exec;\n        fd_set *open_fds;\n        struct rcu_head rcu;\n        struct fdtable *next;\n};\n</code></pre> <p>\u6570\u636e\u7ed3\u6784\u793a\u610f\u56fe\u5982\u4e0b\uff0c\u8f6c\u8f7d\u81ea\u77e5\u4e4e\u7684\u9648\u7855\u5927\u4f6c\u3002</p> <p>\u4e00\u4e2a\u8ff7\u60d1\u7684\u70b9\u662f <code>fdtab</code> \u548c <code>fdt</code> \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u7ed3\u6784\u91cc\u6709\u4e24\u4e2a\u8868\uff1f\u6211\u770b\u5230\u4e00\u4e2a\u89e3\u91ca\u662f\u4e0b\u9762\u8fd9\u6837\u7684\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u6709\u65f6 <code>fdt</code> \u5e76\u4e0d\u6307\u5411 <code>fdtab</code>\uff0c\u6709\u65f6\u786e\u5b9e\u662f\u4e00\u4e2a\u4e1c\u897f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6709\u4e24\u4e2a fdtable \u5462\uff1f\u8fd9\u662f\u5185\u6838\u7684\u4e00\u79cd\u4f18\u5316\u7b56\u7565\u3002fdt \u4e3a\u6307\u9488\uff0c\u800c fdtab \u4e3a\u666e\u901a\u53d8\u91cf\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cfdt \u662f\u6307\u5411 fdtab \u7684\uff0c\u5f53\u9700\u8981\u5b83\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u771f\u6b63\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u3002\u56e0\u4e3a\u9ed8\u8ba4\u5927\u5c0f\u7684\u6587\u4ef6\u8868\u8db3\u4ee5\u5e94\u4ed8\u5927\u591a\u6570\u60c5\u51b5\uff0c\u5927\u591a\u6570\u8fdb\u7a0b\u4e0d\u4f1a\u6253\u5f00\u5f88\u591a\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u9891\u7e41\u7684\u5185\u5b58\u7533\u8bf7\u3002\u8fd9\u4e5f\u662f\u5185\u6838\u7684\u5e38\u7528\u6280\u5de7\u4e4b\u4e00\u3002\u5728\u521b\u5efa\u65f6, \u4f7f\u7528\u666e\u901a\u7684\u53d8\u91cf\u6216\u8005\u6570\u7ec4\uff0c\u7136\u540e\u8ba9\u6307\u9488\u6307\u5411\u5b83\uff0c\u4f5c\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4f7f\u7528\u3002\u53ea\u6709\u5f53\u8fdb\u7a0b\u4f7f\u7528\u91cf\u8d85\u8fc7\u9ed8\u8ba4\u503c\u65f6\uff0c\u624d\u4f1a\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#open","title":"\u5206\u6790 open \u7cfb\u7edf\u8c03\u7528","text":"<p><code>open</code>, <code>openat</code>, <code>creat</code> \u90fd\u53ef\u4ee5\u8d77\u5230\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u3002\u4ed6\u4eec\u662f\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u4e0d\u8fc7\u771f\u6b63\u7684\u6267\u884c\u7684\u4ee3\u7801\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u8fdb\u8fc7\u4e00\u4e9b\u68c0\u67e5\uff0c\u6700\u540e\u8c03\u7528 <code>do_sys_open()</code>\u3002</p> <pre><code>long do_sys_open(int dfd, const char __user *filename, int flags,\n                 umode_t mode);\n// dfd: dirfd\n// filename\n// flags\n// mode\n</code></pre> <p>\u9605\u8bfb <code>do_sys_open()</code> \u6e90\u4ee3\u7801\uff0c\u6267\u884c\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff08\u5148\u5ffd\u7565 flags\uff09\uff1a</p> <ul> <li>\u5148\u8c03\u7528 <code>getname</code>\uff0c \u4e3b\u8981\u529f\u80fd\u662f\u5728\u4f7f\u7528\u6587\u4ef6\u540d\u4e4b\u524d\u5c06\u5176\u62f7\u8d1d\u5230\u5185\u6838\u6570\u636e\u533a\uff0c\u6b63\u5e38\u7ed3\u675f\u65f6\u8fd4\u56de\u5185\u6838\u5206\u914d\u7684\u7a7a\u95f4\u9996\u5730\u5740\u3002</li> <li>\u5728\u8c03\u7528 <code>get_unused_fd_flags</code>\uff0c\u987e\u540d\u601d\u4e49\u662f\u53d6\u5f97\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 fd\u3002</li> <li>\u7136\u540e\u662f\u91cd\u5934\u620f\uff0c<code>struct file *f = do_filp_open(dfd, tmp, &amp;op);</code></li> <li><code>fd_install</code>\uff0c\u611f\u89c9\u662f\u628a <code>f</code> \u5b58\u4e0b\u6765\uff0c\u518d\u628a <code>fd</code> \u548c <code>f</code> \u5173\u8054\u8d77\u6765\u3002</li> </ul> <p>\u9605\u8bfb <code>do_filp_open()</code> \u6e90\u4ee3\u7801\u3002</p> <ul> <li><code>set_nameidata</code>: \u8c03\u7528 <code>set_nameidata()</code> \u4fdd\u62a4\u5f53\u524d\u8fdb\u7a0b\u73b0\u573a\u4fe1\u606f\uff0c<code>nameidata</code> \u8fd9\u4e2a\u7ed3\u6784\u7528\u6765\u8f85\u52a9\u8def\u5f84\u67e5\u627e\u3002</li> <li>\u7136\u540e\u662f\u91cd\u5934\u620f\uff0c<code>filp = path_openat(&amp;nd, op, flags | LOOKUP_RCU);</code></li> <li><code>restore_nameidata</code></li> </ul> <p>\u9605\u8bfb <code>path_openat()</code> \u6e90\u4ee3\u7801\u3002\u91cd\u70b9\u5173\u6ce8\u5ffd\u7565\u4e86\u6240\u6709\u5931\u8d25\u60c5\u51b5\u7684\u4e0b\u9762\u7684\u4ee3\u7801</p> <pre><code>file = alloc_empty_file(op-&gt;open_flag, current_cred());\n\nconst char *s = path_init(nd, flags);\nwhile (!(error = link_path_walk(s, nd)) &amp;&amp;\n       (error = do_last(nd, file, op)) &gt; 0) {\n    nd-&gt;flags &amp;= ~(LOOKUP_OPEN|LOOKUP_CREATE|LOOKUP_EXCL);\n    s = trailing_symlink(nd);\n}\nterminate_walk(nd);\n\nreturn file;\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#wrapfs","title":"\u5229\u7528 Wrapfs \u7ba1\u7406\u6743\u9650","text":"<p>\u9650\u5236\u6587\u4ef6\u8bfb\u5199\uff1a</p> <ul> <li>\u4ece <code>file_operations.read</code> \u548c <code>file_operations.write</code> \u5165\u624b\uff0c\u5e76\u4e0d\u597d\u4f7f\uff0c\u5177\u4f53\u539f\u56e0\u6709\u5f85\u8fdb\u4e00\u6b65\u53d1\u73b0\u3002\uff08\u53ef\u80fd\u662f <code>file_operations.read_iter</code> \u548c <code>file_operations.write_iter</code> \u7684\u5173\u7cfb\u3002\u56e0\u4e3a\u5c31\u73b0\u5728\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5927\u90e8\u5206\u90fd\u5b9e\u73b0\u4e86\u540e\u4e24\u8005\u800c\u4e0d\u662f\u524d\u4e24\u8005\u3002\uff09</li> <li>\u4ece <code>inode_operations.permission</code> \u5165\u624b\uff0c\u76f8\u5f53\u4e8e\u662f\u53ef\u4ee5\u52a8\u6001\u7684\u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u7684 <code>rwx</code> \u6743\u9650\u4e86\uff0c\u8fd9\u6837\u786e\u5b9e\u53ef\u4ee5\u5bf9\u8bfb\u5199\u8fdb\u884c\u6709\u6548\u63a7\u5236\uff0c\u4f46\u662f\u963b\u6b62\u4e0d\u4e86\u79fb\u52a8\u3001\u5220\u9664\uff0c\u56e0\u4e3a\u79fb\u52a8\u548c\u5220\u9664\u76f8\u5f53\u4e8e\u662f\u76ee\u5f55\u7684\u6743\u9650\u7ba1\u7406\u4e86\u3002</li> <li>\u4ece <code>inode_operations.fileattr_get</code> \u5165\u624b\uff08\u8fd8\u6709\u4e00\u4e2a\u5f88\u5177\u6709\u8ff7\u60d1\u6027\u7684\u65b9\u6cd5 <code>getattr</code>\uff09(4.4 \u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff01)</li> <li>\u4ece <code>file_operations.unlocked_ioctl</code> \u548c <code>file_operations.compat_ioctl</code> \u5165\u624b\uff0c\u7ed3\u679c\u53d1\u73b0\u5728\u4fee\u6539\u4e00\u4e2a\u88ab\u6211\u52a0\u4e86 <code>i</code> \u5c5e\u6027\u7684\u6587\u4ef6\u65f6\u6839\u672c\u6ca1\u6709\u8c03\u7528\u8fc7\uff0c\u53ea\u5728 <code>lsattr</code> \u7684\u65f6\u5019\u4f1a\u8c03\u7528\uff0c\u5947\u602a\u3002</li> <li> <p>\u8ddf\u8e2a\u53d1\u73b0\u662f <code>faccessat</code> \u8fd9\u4e2a\u8c03\u7528\u65cf\u505a\u7684\u68c0\u67e5</p> <pre><code>faccessat(AT_FDCWD, \"aaa\", W_OK)  = -1 EPERM (Operation not permitted)\nfaccessat(AT_FDCWD, \"aaa\", W_OK)  = 0\n</code></pre> <p>\u6e90\u4ee3\u7801https://elixir.bootlin.com/linux/v4.4.295/source/fs/open.c#L337</p> </li> <li> <p>\u8003\u8651 <code>inode_operations.rename</code> \u548c <code>inode_operations.unlink</code>. \u56e0\u4e3a\u8ddf\u8e2a\u53d1\u73b0\u4ed6\u4eec\u548c\u6587\u4ef6\u7684\u79fb\u52a8\u548c\u5220\u9664\u5bc6\u5207\u76f8\u5173\uff0c\u7528 <code>strace</code> \u8ddf\u8e2a mv \u548c rm \u7684\u6267\u884c\u3002</p> </li> </ul> <pre><code>mv =&gt; renameat2(AT_FDCWD, \"../i.md\", AT_FDCWD, \"../i1.md\", RENAME_NOREPLACE) = 0\nrm =&gt; unlinkat(AT_FDCWD, \"aaa\", 0)      = 0\n</code></pre> <p>\u603b\u7ed3\uff1a\u4ece <code>permission</code>,<code>rename</code>,<code>unlink</code> \u5165\u624b\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#_4","title":"\u6267\u884c\u6743\u9650","text":"<p>\u4ee5 Linux5.4 \u4e3a\u4f8b\uff0c\u8ddf\u8e2a <code>inode_permission</code> \u51fd\u6570\u5728 <code>execve</code> \u7684\u4f55\u65f6\u88ab\u8c03\u7528\u8fdb\u884c\u6743\u9650\u68c0\u67e5\u3002</p> <pre><code>[#0] 0xffffffff812d8690 \u2192 inode_permission(inode=0xffff8880064f1650, mask=0x81)\n[#1] 0xffffffff812d8aed \u2192 may_lookup(nd=&lt;optimized out&gt;)\n[#2] 0xffffffff812d8aed \u2192 link_path_walk(name=0xffff888004ce2021 \"bin/ls\", nd=0xffffc9000020fd10)\n[#3] 0xffffffff812db4c6 \u2192 link_path_walk(nd=&lt;optimized out&gt;, name=&lt;optimized out&gt;)\n[#4] 0xffffffff812db4c6 \u2192 path_openat(nd=0xffffc9000020fd10, op=0xffffc9000020fe24, flags=&lt;optimized out&gt;)\n[#5] 0xffffffff812ddfa1 \u2192 do_filp_open(dfd=&lt;optimized out&gt;, pathname=&lt;optimized out&gt;, op=0xffffc9000020fe24)\n[#6] 0xffffffff812d16a7 \u2192 do_open_execat(fd=&lt;optimized out&gt;, name=0xffff888004ce2000, flags=&lt;optimized out&gt;)\n[#7] 0xffffffff812d35c8 \u2192 __do_execve_file(fd=&lt;optimized out&gt;, filename=0xffff888004ce2000, flags=0x0, file=0x0 &lt;fixed_percpu_data&gt;, argv=&lt;optimized out&gt;, envp=&lt;optimized out&gt;)\n[#8] 0xffffffff812d39a9 \u2192 do_execveat_common(flags=&lt;optimized out&gt;, filename=&lt;optimized out&gt;, fd=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, envp=&lt;optimized out&gt;)\n[#9] 0xffffffff812d39a9 \u2192 do_execve(__envp=&lt;optimized out&gt;, __argv=&lt;optimized out&gt;, filename=&lt;optimized out&gt;)\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#_5","title":"\u6dfb\u52a0\u6743\u9650\u5b57\u6bb5","text":"<p>\u600e\u4e48\u5411 <code>inode</code> \u7ed3\u6784\u6dfb\u52a0\u4e1c\u897f\u5462\uff1f</p> <ul> <li>inode \u7684\u8bde\u751f\uff1a<code>super_operations-&gt;alloc_inode</code>: this method is called by <code>alloc_inode()</code> to allocate memory for struct inode and initialize it. If this function is not defined, a simple \u2018struct inode\u2019 is allocated. Normally <code>alloc_inode</code> will be used to allocate a larger structure which contains a \u2018struct inode\u2019 embedded within it.</li> </ul> <p>\u6211\u4eec\u5b9a\u5236\u4ed6\u6765\u4ea7\u751f <code>wrapfs_inode</code></p> <p><code>&lt;fsname_iget&gt;</code>: \u4ece\u8bbe\u5907\u4e2d\u8bfb\u53d6 inode</p> <ul> <li>inode \u7684\u4f7f\u7528\uff0c\u4ece\u573a\u666f\u51fa\u53d1</li> <li>\u7528\u6237\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\uff0c\u4ed6\u4f1a\u4f7f\u7528 <code>open</code> \u7cfb\u5217\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5bf9\u4e8e kernel \u6765\u8bf4\uff0c\u6211\u4eec\u4ea7\u751f\u4e86\u4e00\u4e2a <code>file</code> \u4ee3\u8868\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5728\u4e0a\u9762\u4ecb\u7ecd\u7684\u8fdb\u7a0b\u7684 <code>files</code> \u5b57\u6bb5\u4e2d\u4f1a\u5b58\u50a8\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u3002\u4e4b\u540e\u7684\u8bfb\u5199\u5c31\u9488\u5bf9 <code>file</code> \u8fdb\u884c\u3002</li> <li>\u6240\u4ee5 <code>open</code> \u662f\u600e\u4e48\u627e\u5230 <code>inode</code> \u7684\u5462\uff1f\u7b80\u5355\u7684\u8bf4\uff0c\u6839\u636e\u8def\u5f84\u8fdb\u884c\u904d\u5386\u3002</li> <li>inode \u7684\u56de\u6536\uff1a<code>super_operations-&gt;destroy_inode</code>: this method is called by <code>destroy_inode()</code> to release resources allocated for struct inode. It is only required if <code>super_operations-&gt;alloc_inode</code> was defined and simply undoes anything done by <code>super_operations-&gt;alloc_inode</code>.</li> <li>\u7531\u4e8e\u6211\u4eec\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u5b8c\u5168\u5b58\u5728\u4e8e\u5185\u5b58\u7684\uff0c\u53ef\u4ee5\u5ffd\u7565 inode \u7684 dirty\uff0cwrite \u7b49\u548c\u8bbe\u5907\u540c\u6b65\u7684\u64cd\u4f5c\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#_6","title":"\u548c\u7528\u6237\u4ea4\u6362\u4fe1\u606f","text":"<p>\u4ece\u7528\u6237\u83b7\u5f97\u7684\u4fe1\u606f\u6700\u597d\u662f <code>filename</code> + <code>permission</code>\u3002\u5229\u7528 <code>kern_path()</code> \u51fd\u6570\u53ef\u4ee5\u6839\u636e\u6587\u4ef6\u540d\u83b7\u5f97 <code>struct path</code>\uff0c\u91cc\u9762\u6709 <code>mnt</code> \u8fd8\u6709 <code>dentry</code>\uff0c\u8fd9\u6837\u62ff\u5230\u5bf9\u5e94\u7684 inode \u5c31\u4e0d\u662f\u95ee\u9898\u3002</p> <p>\u53d1\u9001\u7ed9\u7528\u6237\u7684\u4fe1\u606f\u53ef\u4ee5\u662f <code>uuid+inode</code>\uff0c\u6216\u8005\u53ef\u4ee5\u5229\u7528 <code>inode</code> \u4e2d\u7684 <code>i_dentry</code> \u94fe\u8868\u9009\u62e9\u4e00\u4e2a\u6587\u4ef6\u540d\u6765\u4fdd\u62a4\uff0c\u53cd\u6b63\u6700\u540e\u7684\u6743\u9650\u4f1a\u843d\u5230 inode\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/VFS/#fuse","title":"FUSE","text":"<p>fuse - Filesystem in Userspace (FUSE) device.</p> <p>\u8fd9\u4e2a\u6a21\u578b\u53ef\u4ee5\u8ba9\u4f60 \u5728 User Level \u5b9e\u73b0\u6587\u4ef6\u7cfb\u7edf\uff0c\u539f\u7406\u5927\u81f4\u662f Kernel \u4f5c\u4e3a Client\uff0c\u800c\u4f60\u7684\u8fdb\u7a0b\uff08\u5f80\u5f80\u662f Daemon\uff09\u4f5c\u4e3a Server\uff0c\u53cc\u65b9\u8fdb\u884c\u901a\u4fe1\uff0c\u4f60\u53ef\u4ee5 Hook \u4e00\u4e9b\u64cd\u4f5c\u3002\u6709\u4e00\u4e2a Python \u7684 API \u7ed1\u5b9a\u3002</p> <pre><code>sudo apt install libfuse3-dev fuse3\npip3 install pyfuse3\n</code></pre> <p>https://www.kernel.org/doc/html/latest/filesystems/vfs.html#struct-file-system-type</p> <p>https://zhuanlan.zhihu.com/p/34280875</p> <p>https://bean-li.github.io/vfs-inode-dentry/</p> <p>\u89e3\u6790open\u8c03\u7528\u7684\u7cfb\u5217\u6587\u7ae0\uff0c\u633a\u597d\u7684</p> <p>\u5185\u6838\u5982\u4f55\u8bfb\u5199\u6587\u4ef6</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE/PostgreSQL/","title":"CRUD","text":"<p>\u4f7f\u7528docker\u8fd0\u884cpostgresql\uff0c\u5c06\u6570\u636emount\u5230\u672c\u5730\uff1a</p> <pre><code>docker run -d \\\n    --name some-postgres \\\n    -e POSTGRES_PASSWORD=mysecretpassword \\\n    -e PGDATA=/var/lib/postgresql/data/pgdata \\\n    -v /custom/mount:/var/lib/postgresql/data \\\n    postgres\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE/PostgreSQL/#internal","title":"Internal","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE/PostgreSQL/#externtion","title":"Externtion","text":"<p>pgrx\u662f\u7528\u6765\u7f16\u5199PostgreSQL extensions \u7684Rust Framework\u3002</p> <p>https://zhuanlan.zhihu.com/p/623058163 https://pg-internal.vonng.com/#/</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE/_Index/","title":"_Index","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93/_Index/","title":"_Index","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/","title":"index","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Leetcode/","title":"Leetcode","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Sort/","title":"\u6392\u5e8f\u7b97\u6cd5","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(nlog n)\\)\u7684\u6392\u5e8f\u7b97\u6cd5\uff1a\u5806\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\uff0c\u5e0c\u5c14\u6392\u5e8f\uff0c\u5f52\u5e76\u6392\u5e8f\u3002\\(n\\)\u6307\u7684\u662f\u6570\u7ec4\u957f\u5ea6\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Sort/#_2","title":"\u5806\u6392\u5e8f","text":"<p>\u67e5\u627e\u6570\u7ec4\u4e2d\u6700\u5c0f/\u5927\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(log n)\\)\u3002\u4e5f\u5c31\u662f\u5efa\u7acb\u5806\u7684\u8fc7\u7a0b\u3002\u5806\u6392\u5e8f\u5c31\u662f\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u8fdb\u884c\\(n\\)\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(log n)\\)\u3002\u6211\u975e\u5e38\u559c\u6b22\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u662f\u6700\u7b80\u5355\u7684\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Sort/#_3","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)\u3002\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u5c31\u662f\u5c06\u6392\u5e8f\u4e00\u4e2a\u6570\u7ec4\uff0c\u53d8\u6210\u6392\u5e8f2\u4e2a\u6709\u5e8f\u7684\u5b50\u6570\u7ec4\u7684\u95ee\u9898\uff0c\u5206\u89e3\u5230\u957f\u5ea6\u4e3a1\u7684\u6570\u7ec4\u7684\u65f6\u5019\u81ea\u7136\u5c31\u662f\u6709\u5e8f\u4e86\u3002\u6211\u4eec\u8981\u8fdb\u884c\\(O(log n)\\)\u6b21\u7684\u5206\u89e3\u5c06\u6570\u7ec4\u5927\u5c0f\u53d8\u62101\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(nlog n)\\)\u3002</p> <p>\u4ed6\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u624b\u5199\u65b9\u4fbf\u3002\u4ee5C++\u4e3a\u4f8b\uff1a</p> <pre><code>template &lt;typename RandomIt, typename Compare = std::less&lt;&gt;&gt;\nvoid merge_sort(RandomIt first, RandomIt last, Compare cmp = Compare()) {\n  auto len = std::distance(first, last);\n  if (len &lt;= 1) return;\n  auto mid = first + len / 2;\n  merge_sort(first, mid, cmp);\n  merge_sort(mid, last, cmp);\n  std::inplace_merge(first, mid, last, cmp);\n}\n</code></pre> <p>[!NOTE] <code>std::inplace_merge</code>\u7684\u6587\u6863\u8bf4\uff0c\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u989d\u5916\u7684\\(O(n)\\)\u7a7a\u95f4\u4ee5\u8fbe\u5230\\(O(n)\\)\u7684\u5408\u5e76\u6548\u7387\uff0c\u4f46\u662f\u5982\u679c\u7a7a\u95f4\u4e0d\u591f\u4e5f\u4f1a\u4f7f\u7528\\(O(1)\\)\u7684\u7a7a\u95f4\uff0c\u4f46\u662f\u4f1a\u6709\\(O(n^2)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u8fd9\u4e2a\u51fd\u6570\u81ea\u5df1\u5b9e\u73b0\u4e5f\u5e76\u4e0d\u56f0\u96be\u3002</p> <p>\u5982\u679c\u5bf9\u6a21\u677f\u4e0d\u592a\u719f\u6089\uff0c\u53ef\u4ee5\u770b\u4e00\u4e2a\u7279\u5316\u7248\u672c\u7684\uff1a</p> <pre><code>void merge(int *first, int *mid, int *last) {\n  std::vector&lt;int&gt; tmp;\n  tmp.reserve(last - first);\n  int *a = first, *b = mid;\n  while (a != mid &amp;&amp; b != last) {\n    if (*a &lt; *b) {\n      tmp.push_back(*a);\n      a++;\n    } else {\n      tmp.push_back(*b);\n      b++;\n    }\n  }\n  for (; a != mid; a++) {\n    tmp.push_back(*a);\n  }\n  for (; b != last; b++) {\n    tmp.push_back(*b);\n  }\n  for (int i = 0; i &lt; tmp.size(); i++) {\n    first[i] = tmp[i];\n  }\n}\n\nvoid merge_sort(int *first, int *last) {\n  int len = last - first;\n  if (len &lt;= 1) return;\n  int *mid = first + len / 2;\n  merge_sort(first, mid);\n  merge_sort(mid, last);\n  merge(first, mid, last);\n}\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Sort/#_4","title":"\u5e0c\u5c14\u6392\u5e8f\u548c\u5feb\u901f\u6392\u5e8f","text":"<p>\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u5b9e\u73b0\u8d77\u6765\u590d\u6742\u4e00\u70b9\u3002\u6316\u4e2a\u5751\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Sort/#_5","title":"\u6876\u6392\u5e8f","text":"<p>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(O(nlog n)\\)\u5c31\u5230\u9876\u4e86\u3002\u4f46\u662f\u5982\u679c\u6570\u636e\u7684\u8303\u56f4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u8fdb\u884c\u6392\u5e8f\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/backtrack/","title":"\u56de\u6eaf\u7b97\u6cd5","text":"<p>\u56de\u6eaf\u6cd5\uff08Backtracking\uff09\u662f\u4e00\u79cd\u901a\u8fc7\u201c\u8bd5\u9519\u201d\u6765\u5bfb\u627e\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u7684\u7b97\u6cd5\u3002\u5b83\u5e38\u7528\u4e8e\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff08\u5982\u6392\u5217\u3001\u5b50\u96c6\u3001\u7ec4\u5408\u3001\u68cb\u76d8\u7c7b\u95ee\u9898\uff09\uff0c\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u9012\u5f52\u5730\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u9009\u62e9\u8def\u5f84\uff0c\u5f53\u53d1\u73b0\u5f53\u524d\u8def\u5f84\u65e0\u6cd5\u5f97\u5230\u89e3\u65f6\uff0c\u64a4\u9500\u6700\u540e\u4e00\u6b65\u9009\u62e9\uff08\u56de\u6eaf\uff09\uff0c\u5c1d\u8bd5\u5176\u4ed6\u5206\u652f\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/backtrack/#_2","title":"\u6838\u5fc3\u7279\u70b9","text":"<ol> <li>\u7cfb\u7edf\u6027\uff1a\u7a77\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u5206\u652f\u3002</li> <li>\u526a\u679d\u4f18\u5316\uff1a\u63d0\u524d\u7ec8\u6b62\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5206\u652f\uff08\u5982\u91cd\u590d\u503c\u3001\u8d8a\u754c\uff09\u3002</li> <li>\u72b6\u6001\u91cd\u7f6e\uff1a\u64a4\u9500\u6700\u540e\u4e00\u6b65\u9009\u62e9\uff0c\u6062\u590d\u5230\u4e4b\u524d\u7684\u72b6\u6001\u3002</li> </ol> <pre><code>def backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868):\n    if \u6ee1\u8db3\u7ec8\u6b62\u6761\u4ef6:\n        \u4fdd\u5b58\u7ed3\u679c\uff08\u5982\u5c06\u8def\u5f84\u6dfb\u52a0\u5230\u5168\u5c40\u5217\u8868\uff09\n        return\n\n    for \u9009\u62e9 in \u9009\u62e9\u5217\u8868:\n        if \u4e0d\u6ee1\u8db3\u526a\u679d\u6761\u4ef6:\n            \u505a\u9009\u62e9\uff08\u5c06\u9009\u62e9\u52a0\u5165\u8def\u5f84\uff09\n            backtrack(\u66f4\u65b0\u540e\u7684\u8def\u5f84, \u65b0\u7684\u9009\u62e9\u5217\u8868)  # \u9012\u5f52\u8fdb\u5165\u4e0b\u4e00\u5c42\n            \u64a4\u9500\u9009\u62e9\uff08\u5c06\u9009\u62e9\u4ece\u8def\u5f84\u79fb\u9664\uff09\n</code></pre> <p>\u4ee546. \u5168\u6392\u5217 - \u529b\u6263\uff08LeetCode\uff09\u95ee\u9898\u4e3a\u4f8b\u3002\u8fd9\u91cc\u7684res\u5c31\u662f\u5168\u5c40\u7ed3\u679c\u5217\u8868\uff0cpath\u5bf9\u5e94\u8def\u5f84\uff0c\u9009\u62e9\u5217\u8868\u5c31\u662fnums - used\u3002</p> <pre><code>class Solution:\n    def permute(self, nums: List[int]) -&gt; List[List[int]]:\n        res = []\n        used = [False] * len(nums)  # \u8bb0\u5f55\u5143\u7d20\u662f\u5426\u88ab\u4f7f\u7528\u8fc7\n\n        def backtrack(path):\n            if len(path) == len(nums):  # \u7ec8\u6b62\u6761\u4ef6\uff1a\u8def\u5f84\u957f\u5ea6\u7b49\u4e8e\u6570\u7ec4\u957f\u5ea6\n                res.append(path.copy())\n                return\n\n            for i in range(len(nums)):\n                if not used[i]:  # \u526a\u679d\uff1a\u8df3\u8fc7\u5df2\u4f7f\u7528\u7684\u5143\u7d20\n                    used[i] = True      # \u505a\u9009\u62e9\n                    path.append(nums[i])\n                    backtrack(path)     # \u9012\u5f52\u8fdb\u5165\u4e0b\u4e00\u5c42\n                    path.pop()          # \u64a4\u9500\u9009\u62e9\n                    used[i] = False\n\n        backtrack([])\n        return res\n</code></pre> <p>\u4ee539. \u7ec4\u5408\u603b\u548c - \u529b\u6263\uff08LeetCode\uff09\u4e3a\u4f8b\u3002\u8fd9\u9053\u9898\u770b\u8d77\u6765\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u9898\u76ee\u6c42\u7684\u4e0d\u662f\u65b9\u6848\u6570\u91cf\u800c\u662f\u6240\u6709\u7ec4\u5408\uff0c\u52a8\u6001\u89c4\u5212\u53ef\u80fd\u5bfc\u81f4\u592a\u9ad8\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u4e0b\u9762\u662f\u56de\u6eaf\u7684\u7a0b\u5e8f\uff0csum\u7528\u6765\u7b80\u5316\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e2a\u53c2\u6570\uff1a</p> <pre><code>class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -&gt; List[List[int]]:\n        result = []\n\n        def backtrack(path: List[int], sum: int):\n            if sum == target:\n                result.append(path.copy())\n                return\n            for num in candidates:\n                if num + sum &lt;= target and (len(path) == 0 or num &gt;= path[-1]):\n                    path.append(num)\n                    backtrack(path, sum+num)\n                    path.pop()\n\n        backtrack([], 0)\n        return result\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/backtrack/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>13.1 \u00a0 \u56de\u6eaf\u7b97\u6cd5 - Hello \u7b97\u6cd5</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/binary/","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>\u4e8c\u5206\u67e5\u627e\uff08Binary Search\uff09\u662f\u4e00\u79cd\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u5feb\u901f\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u7684\u9ad8\u6548\u7b97\u6cd5\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u4e0d\u65ad\u7f29\u5c0f\u641c\u7d22\u8303\u56f4\uff0c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 O(log n)\u3002</p> <ul> <li>\u521d\u59cb\u5316\uff1a\u5b9a\u4e49\u5de6\u53f3\u6307\u9488 <code>left</code> \u548c <code>right</code>\uff0c\u5206\u522b\u6307\u5411\u6570\u7ec4\u7684\u9996\u5c3e\u5143\u7d20\u3002</li> <li>\u5faa\u73af\u7f29\u5c0f\u8303\u56f4\uff1a<ul> <li>\u8ba1\u7b97\u4e2d\u95f4\u4f4d\u7f6e <code>mid</code>\u3002</li> <li>\u82e5\u4e2d\u95f4\u5143\u7d20\u7b49\u4e8e\u76ee\u6807\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\u7d22\u5f15\u3002</li> <li>\u82e5\u4e2d\u95f4\u5143\u7d20\u5c0f\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u76ee\u6807\u5728\u53f3\u534a\u90e8\u5206\uff0c\u8c03\u6574 <code>left</code>\u3002</li> <li>\u82e5\u4e2d\u95f4\u5143\u7d20\u5927\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u76ee\u6807\u5728\u5de6\u534a\u90e8\u5206\uff0c\u8c03\u6574 <code>right</code>\u3002</li> </ul> </li> <li>\u7ec8\u6b62\u6761\u4ef6\uff1a\u5f53 <code>left &gt; right</code> \u65f6\uff0c\u8868\u793a\u672a\u627e\u5230\u76ee\u6807\uff0c\u8fd4\u56de <code>-1</code>\u3002</li> </ul> <p>\u5c3d\u7ba1\u4e8c\u5206\u67e5\u627e\u601d\u8def\u7b80\u5355\u6e05\u6670\uff0c\u4f46\u662f\u4e5f\u662f\u633a\u5bb9\u6613\u51fa\u9519\u7684\u3002\u4e0b\u9762\u662f\u793a\u4f8b\u4ee3\u7801\uff0c\u8fd4\u56de\u4e00\u4e2a<code>int</code>\u6570\u7ec4<code>nums</code>\u4e2d\uff0c\u7b49\u4e8e<code>target</code>\u7684\u67d0\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u3002</p> <pre><code>int binarySearch(int* nums, int size, int target) {\n    int left = 0;\n    // right=size-1, \u8bf4\u660e\u67e5\u627e\u7684\u8303\u56f4\u662f[left, right]\u7684\u5de6\u95ed\u53f3\u95ed\u533a\u95f4\u3002\n    int right = size - 1;\n    while (left &lt;= right) {\n        // NOTICE: \u53ef\u4ee5\u9632\u6b62\u6ea2\u51fa\n        int mid = left + (right - left) / 2; \n        if (nums[mid] == target) {\n            return mid;\n        } else if (nums[mid] &lt; target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u7b49\u4e8e<code>target</code>\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20/\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u600e\u4e48\u529e\uff1f\u8fd9\u5c31\u662f34. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e - \u529b\u6263\uff08LeetCode\uff09\u3002\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff1a</p> <ol> <li>\uff08\u627e\u7b2c\u4e00\u4e2a\uff09\u5982\u679c\u627e\u5230\u76f8\u7b49\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u7ee7\u7eed\u641c\u7d22\u7684\u8303\u56f4\u662f<code>[left, mid]</code>\u3002\uff08\u627e\u6700\u540e\u4e00\u4e2a\uff09\u641c\u7d22\u8303\u56f4\u5219\u662f<code>[mid, right]</code>\u3002\u4e0d\u65ad\u7684\u7f29\u5c0f\u641c\u7d22\u8303\u56f4\u76f4\u5230<code>left == right == mid</code>\u3002\u4e3a\u4e86\u4fdd\u8bc1\u8303\u56f4\u53ef\u4ee5\u5f97\u5230\u7f29\u5c0f\uff0c\u6ce8\u610fmid\u7684\u53d6\u6574\u65b9\u5411\u3002</li> </ol> <pre><code>class Solution {\npublic:\n  int bs(int *nums, int target, int left, int right, bool start) {\n    while (left &lt;= right) {\n        int mid;\n        if (start) \n            mid = left + (right - left) / 2;\n        else \n            mid = left + (right - left + 1) / 2;\n      if (target == nums[mid]) {\n        if (start)\n          right = mid;\n        else\n          left = mid;\n\n        if (left == right) {\n          return right;\n        }\n      } else if (target &gt; nums[mid]) {\n        left = mid + 1;\n      } else {\n        right = mid - 1;\n      }\n    }\n    return -1;\n  }\n  vector&lt;int&gt; searchRange(vector&lt;int&gt; &amp;nums, int target) {\n    return {bs(nums.data(), target, 0, nums.size() - 1, true),\n            bs(nums.data(), target, 0, nums.size() - 1, false)};\n  }\n};\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/dp/","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\uff08\u82f1\u8bed\uff1aDynamic programming\uff0c\u7b80\u79f0 DP\uff09\uff0c\u662f\u4e00\u79cd\u901a\u8fc7\u628a\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u76f8\u5bf9\u7b80\u5355\u7684\u5b50\u95ee\u9898\u7684\u65b9\u5f0f\u6c42\u89e3\u590d\u6742\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u52a8\u6001\u89c4\u5212\u5e38\u5e38\u9002\u7528\u4e8e\u6709\u91cd\u53e0\u5b50\u95ee\u9898\u548c\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u7684\u95ee\u9898\u3002\u52a8\u6001\u89c4\u5212\u6700\u6838\u5fc3\u7684\u601d\u60f3\uff0c\u5c31\u5728\u4e8e\u62c6\u5206\u5b50\u95ee\u9898\uff0c\u8bb0\u4f4f\u8fc7\u5f80\uff0c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u3002</p> <p>\u7528\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u662f\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4e5f\u5c31\u662f\u5982\u4f55\u4f7f\u7528\u5b50\u95ee\u9898\u7684\u7ed3\u679c\u63a8\u5bfc\u51fa\u5927\u95ee\u9898\u7684\u7ed3\u679c\u7684\u65b9\u7a0b\u3002\u4e3e\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u6c42\u4e00\u4e2a\u6570\u7ec4\\(a_i\\)\u4e2d\u6700\u5927\u7684\u6570\u3002\u5982\u679c\u77e5\u9053\u524d\\(n\\)\u9879\u7684\u6700\u5927\u6570\u662f\\(max_n\\)\uff0c\u90a3\u4e48\u524d\\(n+1\\)\u9879\u7684\u6700\u5927\u6570\u5c31\u662f\uff1a</p> \\[max_{n+1} = max(max_n, a_{n+1})\\] <p>\uff08\u5f53\u7136\u4e8c\u5206\u6cd5\u4f1a\u66f4\u5feb\uff0c\u8fd9\u91cc\u53ea\u662f\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff09\u3002\u4ee5\u9ad8\u4e2d\u7684\u77e5\u8bc6\u8303\u7574\uff0c\u6709\u4e00\u70b9\u6570\u5217\u9012\u63a8\u516c\u5f0f\u7684\u611f\u89c9\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/dp/#_2","title":"\u4f8b\u5b50","text":"<p>LeetCode 53\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>nums</code>\u00a0\uff0c\u8bf7\u4f60\u627e\u51fa\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002\u5b50\u6570\u7ec4\u00a0\u662f\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u8fde\u7eed\u90e8\u5206\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5305\u542b\u7b2cn\u9879\u7684\u524dn\u9879\u7684\u5177\u6709\u6700\u5927\u548c\u4e3a\\(sum_n\\)\uff0c\u90a3\u4e48\\(\\(sum_{n+1} = max(a_{n+1}, sum_n+a_{n+1})\\)\\)\uff0c\u9898\u76ee\u7684\u89e3\u5c31\u662f\\(MAX_n^N(sum_n)\\)\u3002</p> <p>LeetCode 152\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>\u00a0\uff0c\u8bf7\u4f60\u627e\u51fa\u4e00\u4e2a\u5177\u6709\u6700\u5927\u4e58\u79ef\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u4e58\u79ef\u3002</p> <p>\u4e4d\u4e00\u770b\u548c\u4e0a\u9762\u4e00\u6a21\u4e00\u6837\u3002\u4e0d\u8fc7\u4e58\u6cd5\u8981\u8003\u8651\u8d1f\u6570\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5305\u542b\u7b2cn\u9879\u7684\u524dn\u9879\u7684\u5177\u6709\u6700\u5927\u4e58\u79ef\u4e3a\\(maxp_n\\)\uff0c\u6700\u5c0f\u4e58\u79ef\u4e3a\\(minp_n\\)\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\\(\\(maxp_{n+1} = max(a_{n+1}, maxp_n\\times a_{n+1}, minp_n\\times a_{n+1})\\)\\)\uff0c\\(\\(minp_{n+1} = min(a_{n+1}, maxp_n\\times a_{n+1}, minp_n\\times a_{n+1})\\)\\)\uff0c\u9898\u76ee\u7684\u89e3\u5c31\u662f\\(MAX_n^N(maxp_n)\\)\u3002</p> <p>LeetCode 279\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8fd4\u56de \u548c\u4e3a n \u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6700\u5c11\u6570\u91cf \u3002\u4f8b\u5982\uff0cn=13\uff0c\u6700\u5c11\u662f2\u4e2a\u5b8c\u5168\u5e73\u65b9\u65709+4\u7684\u548c\u3002</p> <p>\u8bbe\u548c\u4e3a \\(x\\) \u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6700\u5c11\u6570\u91cf\u4e3a\\(f(x)\\)\uff0c\u6211\u4eec\u6709\\(f(x) = MIN_{a=1}^x{ f(n-a)+f(a)}\\)\u3002\u5e76\u4e14\u5982\u679c\\(x\\)\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u6709\\(f(x) = 1\\)\u3002</p> <p>\u8fd8\u6709\u66f4\u597d\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u8003\u8651\u5230\u6211\u4eec\u5fc5\u987b\u8981\u9009\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\\(\\(f(x) = MIN_{a=1}^{\\lfloor \\sqrt n \\rfloor} f(a^2)+f(n-a^2)\\)\\)</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/slidewindow/","title":"\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5","text":"<p>\u6bcf\u6b21\u9047\u5230\u6ed1\u52a8\u7a97\u53e3\u7684\u7b97\u6cd5\u9898\u90fd\u5199\u4e0d\u51fa\u6765\u6216\u8005\u4e0d\u80fd\u7528\u6700\u597d\u7684\u65b9\u5f0f\u5199\u51fa\u6765\u3002\u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u3002</p> <p>\u4ece\u505a\u9898\u7684\u6280\u5de7\u6765\u8bf4\uff0c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u6280\u5de7\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898\uff0c\u6bd4\u5982\u8ba9\u4f60\u5bfb\u627e\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u7684\u6700\u957f/\u6700\u77ed\u5b50\u6570\u7ec4\u3002\u5982\u679c\u8981\u679a\u4e3e\u6240\u6709\u7684\u5b50\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^2)\\)\uff0c\u65e0\u8bba\u662f\u679a\u4e3e\u8d77\u59cb\u70b9+\u7ec8\u6b62\u70b9\uff0c\u8fd8\u662f\u679a\u4e3e\u957f\u5ea6+\u8d77\u59cb\u70b9\u3002</p> <pre><code>// \u679a\u4e3e\u8d77\u59cb\u70b9+\u7ec8\u6b62\u70b9\nfor (int i=0; i&lt;n; i++) {\n    for (int j=i+1; j&lt;n; j++) {\n        // v[i,j)\n    }\n}\n// \u679a\u4e3e\u957f\u5ea6+\u8d77\u59cb\u70b9\nfor (int l=1; l&lt;n; l++) {\n    for (int i=0; i&lt;n-l; i++) {\n        // v[i, i+l)\n    }\n}\n</code></pre> <p>\u5982\u679c\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u903b\u8f91\uff0c\u6765\u5bfb\u627e\u6700\u77ed\u5b50\u4e32\u5219\u662f\uff1a</p> <pre><code>// \u6700\u957f\uff0c\u5b50\u4e32\u4e3a[l,r)\nint l=0; r=0;\nwhile (r&lt;n) {\n    while (!ok(window)) {\n        window.pop(v[l]);\n        l++;\n    }\n    window.push(v[r]);\n    r++;\n    if (ok(window)) {\n        update_best(l,r);\n    }\n}\n// \u6700\u77ed\uff0c\u5b50\u4e32\u4e3a[l,r)\nint l=0, r=0;\nwhile (r&lt;n) {\n    window.push(v[r]);\n    r++;\n    while (ok(window)) {\n        update_best(l,r);\n        window.pop(v[l]);\n        l++;\n    }\n}\n</code></pre> <p>\u6ed1\u52a8\u7a97\u53e3\u5e76\u4e0d\u80fd\u679a\u4e3e\u51fa\u6240\u6709\u7684\u5b50\u4e32\uff0c\u4f46\u662f\u4e00\u4e9b\u9898\u76ee\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u7a77\u4e3e\u6240\u6709\u5b50\u4e32\uff0c\u5c31\u80fd\u627e\u5230\u9898\u76ee\u60f3\u8981\u7684\u7b54\u6848\u3002\u6ed1\u52a8\u7a97\u53e3\u7684\u672c\u8d28\u5176\u5b9e\u662f\u8d2a\u5fc3\u3002\u4f8b\u5982\u9898\u76ee\u8981\u6c42\u5bfb\u627e\u6700\u77ed\u5b50\u4e32\uff1a</p> <ol> <li>\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684<code>l</code>\uff0c\u5982\u679c<code>[l,r)</code>\u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u518d\u679a\u4e3e<code>[l,r+x)</code>\u4e86\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684<code>r</code>\uff0c\u5982\u679c<code>[l,r)</code>\u6ee1\u8db3\u6761\u4ef6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bd5\u4e00\u8bd5<code>[l+x,r)</code>\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/slidewindow/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u53cc\u6307\u9488\u6280\u5de7\u79d2\u6740\u4e03\u9053\u6570\u7ec4\u9898\u76ee | labuladong \u7684\u7b97\u6cd5\u7b14\u8bb0</li> <li>\u6ed1\u52a8\u7a97\u53e3\uff1f\u5957\u8def\u800c\u5df2 | \u6781\u7b80\u6559\u5b66</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Graph/Betweenness%20Centrality/","title":"Betweenness Centrality","text":"<p>betweenness centrality(\u4ecb\u6570\u4e2d\u5fc3\u6027)\u662f\u4e00\u79cd\u7528\u4e8e\u6d4b\u91cf\u56fe(graph)\u6216\u7f51\u7edc\u4e2d\u8282\u70b9\u91cd\u8981\u6027\u7684\u6307\u6807\u3002\u5b83\u7684\u542b\u4e49\u662f:\u4e00\u4e2a\u8282\u70b9\u4f4d\u4e8e\u5176\u4ed6\u8282\u70b9\u5bf9\u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u6b21\u6570\u3002</p> <p>\u66f4\u5177\u4f53\u5730\u8bf4,betweenness centrality\u8861\u91cf\u7684\u662f\u67d0\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4e2d\u4ecb\u8005\u6216\u8005\u6865\u6881\u5728\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\u5bf9\u4e4b\u95f4\u6240\u626e\u6f14\u7684\u91cd\u8981\u7a0b\u5ea6\u3002\u5177\u6709\u9ad8betweenness centrality\u7684\u8282\u70b9,\u610f\u5473\u7740\u5b83\u5728\u7f51\u7edc\u4e2d\u5904\u4e8e\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\u7684\u5173\u952e\u5730\u4f4d\u3002</p> <p>\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9v\u7684betweenness centrality\u7684\u516c\u5f0f\u4e3a:</p> \\[C_B(v) = \\sum_{s \\neq v \\neq t \\in V} \\frac{\\sigma_{st}(v)}{\\sigma_{st}}\\] <p>\u5176\u4e2d:</p> <ul> <li>V\u662f\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u96c6\u5408</li> <li>\\(\\sigma_{st}\\)\u662f\u4ece\u8282\u70b9s\u5230\u8282\u70b9t\u7684\u6700\u77ed\u8def\u5f84\u7684\u6570\u91cf</li> <li>\\(\\sigma_{st}(v)\\)\u662f\u4eces\u5230t\u7684\u6700\u77ed\u8def\u5f84\u4e2d\u7ecf\u8fc7\u8282\u70b9v\u7684\u8def\u5f84\u6570\u91cf \uff08\\(d_G\u200b(s,t)\\)\u00a0\u8868\u793a\u4ece\u8282\u70b9\\(s\\) \u5230\\(t\\) \u7684\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\u3002\u6709\u4e14\u53ea\u6709\\(d_G(s,t)=d_G(s,v)+d_G(v,t)\\)\u6210\u7acb\u65f6\uff0c\u6211\u4eec\u624d\u8ba4\u4e3a\u6709\u4e00\u4e2a\u8282\u70b9\\(v\\)\u5728\u8282\u70b9\\(s\\)\u548c\\(t\\)\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u3002</li> </ul> <p>\u8ba1\u7b97\u56fe\u7684betweenness centrality\u901a\u5e38\u4f7f\u7528Brandes\u7b97\u6cd5\u3002\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f\\(O(|V||E|)\\)\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Graph/search/","title":"DFS/BFS","text":"<p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08Deep First Search, DFS\uff09 \u7b97\u6cd5\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08Breadth First Search, BFS\uff09 \u7b97\u6cd5\u90fd\u662f\u57fa\u4e8e \u56fe \u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002\u9664\u4e86DFS\u548cBFS\uff0c\u8fd8\u6709A*\u3001IDA*\u00a0\u7b49\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u3002\u6240\u4ee5\u6211\u4eec\u53c8\u5c06DFS\u548cBFS\u79f0\u4e3a\u66b4\u529b\u641c\u7d20\u7b97\u6cd5\u3002</p> <p>DFS\u4e00\u822c\u501f\u52a9\u6808\u6765\u5b9e\u73b0\uff0c\u901a\u5e38\u4f7f\u7528\u9012\u5f52\u3002\u4ed6\u6cbf\u7740\u4e00\u6761\u8def\u5f84\u641c\u7d22\uff0c\u76f4\u5230\u5931\u8d25\u540e\u501f\u52a9\u6808\u56de\u9000\u3002BFS\u4e00\u822c\u501f\u52a9\u961f\u5217\u5b9e\u73b0\uff0c\u901a\u5e38\u4f7f\u7528\u5faa\u73af\uff0c\u6309\u7167\u5c42\u7ea7\u904d\u5386\uff0c\u5728\u89e3\u51b3\u6700\u77ed\u8def\u5f84\u95ee\u9898\u4e0a\u901a\u5e38\u5f88\u597d\u7528\u3002</p> <p>\u4ee5994. \u8150\u70c2\u7684\u6a58\u5b50 - \u529b\u6263\uff08LeetCode\uff09\u4e3a\u4f8b\uff1a\u6211\u8981\u627e\u7684\u5176\u5b9e\u5c31\u662f\u6bcf\u4e2a\u65b0\u9c9c\u6a58\u5b50\u79bb\u8150\u70c2\u6a58\u5b50\u7684\u6700\u77ed\u8def\u3002\u6700\u540e\u518d\u53d6\u6240\u6709\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u3002</p> <p>\u7531\u4e8e\u8981\u6c42\u6700\u77ed\u8def\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528BFS\uff0c\u8fd9\u91cc\u8d34\u4e00\u4e0b\u5b98\u65b9\u9898\u89e3\u3002</p> <pre><code>use std::collections::{VecDeque, HashMap};\n\nimpl Solution {\n    pub fn oranges_rotting(grid: Vec&lt;Vec&lt;i32&gt;&gt;) -&gt; i32 {\n        let mut grid = grid.clone();\n        let (R, C) = (grid.len(), grid[0].len());\n        const dr: [i32; 4] = [-1, 0, 1, 0];\n        const dc: [i32; 4] = [0, -1, 0, 1];\n        let mut queue = VecDeque::new();\n        let mut depth = HashMap::new();\n\n        for r in 0..R {\n            for c in 0..C {\n                if grid[r][c] == 2 {\n                    let code = r * C + c;\n                    queue.push_back(code);\n                    depth.insert(code, 0);\n                }\n            }\n        }\n\n        let mut ans = 0;\n        while let Some(code) = queue.pop_front() {\n            let r = code / C;\n            let c = code % C;\n            for k in 0..4 {\n                let nr = r + dr[k] as usize;\n                let nc = c + dc[k] as usize;\n                if 0 &lt;= nr &amp;&amp; nr &lt; R &amp;&amp; 0 &lt;= nc &amp;&amp; nc &lt; C &amp;&amp; grid[nr][nc] == 1 {\n                    grid[nr][nc] = 2;\n                    let ncode = nr * C + nc;\n                    queue.push_back(ncode);\n                    depth.insert(ncode, *depth.get(&amp;code).unwrap() + 1);\n                    ans = *depth.get(&amp;ncode).unwrap();\n                }\n            }\n        }\n\n        for row in grid {\n            for v in row {\n                if v == 1 {\n                    return -1;\n                }\n            }\n        }\n        ans\n    }\n}\n/*\n\u4f5c\u8005\uff1a\u529b\u6263\u5b98\u65b9\u9898\u89e3\n\u94fe\u63a5\uff1ahttps://leetcode.cn/problems/rotting-oranges/solutions/124765/fu-lan-de-ju-zi-by-leetcode-solution/\n\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n*/\n</code></pre> <p>\u6df1\u5ea6\u4f18\u5148\u7684\u7248\u672c\uff0c\u8d34\u4e00\u4e0b\u81ea\u5df1\u7684\u9898\u89e3\uff1aDFS+\u526a\u679d\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Graph/sort/","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u62d3\u6251\u6392\u5e8f\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u6709\u5411\u56fe\u3002\u5b83\u7684\u76ee\u7684\u662f\u5bf9\u56fe\u4e2d\u7684\u9876\u70b9\u8fdb\u884c\u7ebf\u6027\u6392\u5e8f\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u4f55\u4ece\u9876\u70b9 \\(u\\) \u5230\u9876\u70b9 \\(v\\) \u7684\u6709\u5411\u8fb9\uff0c\\(u\\) \u5728\u6392\u5e8f\u4e2d\u90fd\u51fa\u73b0\u5728 \\(v\\) \u4e4b\u524d\u3002\u8fd9\u79cd\u6392\u5e8f\u7279\u522b\u9002\u7528\u4e8e\u89e3\u51b3\u8868\u793a\u201c\u5148\u51b3\u6761\u4ef6\u201d\u5173\u7cfb\u7684\u95ee\u9898\uff0c\u5982\u4efb\u52a1\u8c03\u5ea6\u3001\u8bfe\u7a0b\u89c4\u5212\u7b49\u573a\u666f\u3002</p> <p>\u4e00\u4e2a\u5e38\u7528\u7684\u7b97\u6cd5\u662f Kahn \u7b97\u6cd5\uff0c\u5176\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u8ba1\u7b97\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u3002</li> <li>\u5c06\u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u9876\u70b9\u653e\u5165\u4e00\u4e2a\u961f\u5217\u4e2d\u3002</li> <li>\u5f53\u961f\u5217\u975e\u7a7a\u65f6\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u4e00\u4e2a\u9876\u70b9 \\(u\\)\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u6392\u5e8f\u7ed3\u679c\u4e2d\u3002</li> <li>\u904d\u5386\u4ece \\(u\\) \u51fa\u53d1\u7684\u6240\u6709\u8fb9 \\(u \\rightarrow v\\)\uff0c\u5c06\u6bcf\u4e2a\u76f8\u90bb\u9876\u70b9 \\(v\\) \u7684\u5165\u5ea6\u51cf 1\u3002</li> <li>\u5982\u679c\u67d0\u4e2a\u76f8\u90bb\u9876\u70b9 \\(v\\) \u7684\u5165\u5ea6\u53d8\u4e3a 0\uff0c\u5219\u5c06 \\(v\\) \u52a0\u5165\u961f\u5217\u3002</li> </ul> </li> <li>\u91cd\u590d\u6b65\u9aa4 3\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u3002</li> <li>\u5982\u679c\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u9876\u70b9\u6570\u91cf\u4e0e\u56fe\u4e2d\u7684\u9876\u70b9\u603b\u6570\u76f8\u540c\uff0c\u5219\u56fe\u4e0d\u5b58\u5728\u73af\uff0c\u5426\u5219\u56fe\u4e2d\u5b58\u5728\u73af\uff0c\u65e0\u6cd5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u56fe\u662f\u5426\u6709\u73af\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/","title":"\u54c8\u5e0c\u7b97\u6cd5","text":"<p>\u54c8\u5e0c\u7b97\u6cd5\u4e3b\u8981\u53ef\u4ee5\u5206\u6210\u4e09\u79cd\uff1a</p> <ol> <li>\u5bc6\u7801\u5b66\u54c8\u5e0c\u7b97\u6cd5\uff1a\u5982 MD5\uff08\u4e0d\u63a8\u8350\uff09\uff0cSHA1</li> <li>\u6821\u9a8c\u548c\u54c8\u5e0c\u7b97\u6cd5\uff1a\u5982 CRC32\uff0cAdler32</li> <li>\u54c8\u5e0c\u8868\u54c8\u5e0c\u7b97\u6cd5\uff1a\u5982 FNV\uff0c Murmer</li> </ol> <p>\u4ed6\u4eec\u7684\u76ee\u7684\u4e0d\u540c\uff0c\u7b97\u6cd5\u7684\u7279\u6027\u4e5f\u4e0d\u540c\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Bloom%20Filter/","title":"Bloom Filter","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Bloom%20Filter/#introduction","title":"Introduction","text":"<p>\u5e03\u9686\u8fc7\u6ee4\u5668\u662f\u4e00\u79cd\u7a7a\u95f4\u6548\u7387\u975e\u5e38\u9ad8\u7684\u6982\u7387\u578b\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\u5b83\u5141\u8bb8\u5b58\u5728\u8bef\u5224\uff08false positives\uff0c\u5373\u5b83\u8bf4\u5728\u53ef\u80fd\u4e0d\u5728\uff09\uff0c\u4f46\u4e0d\u4f1a\u4ea7\u751f\u8bef\u62a5\uff08false negatives\uff0c\u5373\u5b83\u8bf4\u4e0d\u5728\u80af\u5b9a\u4e0d\u5728\uff09\u3002</p> <p>\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u5de5\u4f5c\u539f\u7406\u6982\u8ff0\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u5316\uff1a\u5728\u5f00\u59cb\u65f6\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u51680\u7684\u4f4d\u6570\u7ec4\uff08bit array\uff09\u548c\u51e0\u4e2a\u54c8\u5e0c\u51fd\u6570\uff08\u8fd9\u91cc\u6d89\u53ca2\u4e2a\u53c2\u6570\uff0c\u6570\u7ec4\u957f\u5ea6m\u548c\u54c8\u5e0c\u51fd\u6570\u4e2a\u6570k\uff0c\u540e\u6587\u4ecb\u7ecd\u5982\u4f55\u9009\u62e9\u5408\u9002\u53c2\u6570\uff09</li> <li>\u6dfb\u52a0\u5143\u7d20\uff1a\u6bcf\u5f53\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u5230\u8fc7\u6ee4\u5668\u4e2d\u65f6\uff0c\u4f7f\u7528\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u5bf9\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\uff0c\u5f97\u5230\u6570\u7ec4\u4e2d\u7684\u591a\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u4f4d\u90fd\u8bbe\u7f6e\u4e3a1\u3002</li> <li>\u5143\u7d20\u67e5\u627e\uff1a\u8981\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u96c6\u5408\u4e2d\uff0c\u540c\u6837\u4f7f\u7528\u90a3\u4e9b\u54c8\u5e0c\u51fd\u6570\u5bf9\u8be5\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\uff0c\u5f97\u5230\u4f4d\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6240\u6709\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u4f4d\u90fd\u662f1\uff0c\u90a3\u4e48\u8ba4\u4e3a\u5143\u7d20\u53ef\u80fd\u5b58\u5728\u4e8e\u96c6\u5408\u4e2d\uff08\u5b58\u5728\u5047\u9633\u6027\u7684\u98ce\u9669\uff09\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u4f4d\u662f0\uff0c\u5219\u5143\u7d20\u80af\u5b9a\u4e0d\u5728\u96c6\u5408\u4e2d\u3002</li> </ol> <p>\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u4f18\u70b9\u662f\u7a7a\u95f4\u6548\u7387\u548c\u67e5\u8be2\u65f6\u95f4\u90fd\u975e\u5e38\u9ad8\u6548\uff0c\u5c24\u5176\u9002\u5408\u4e8e\u5904\u7406\u5927\u6570\u636e\u96c6\u5408\u3002\u7f3a\u70b9\u5219\u662f\u5b83\u4e0d\u80fd\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u5143\u7d20\uff08\u867d\u7136\u6709\u53d8\u4f53\u5982\u8ba1\u6570\u5e03\u9686\u8fc7\u6ee4\u5668\u5141\u8bb8\u8fd9\u6837\u505a\uff0c\u6216\u8005Cuckoo filter\uff09\uff0c\u5e76\u4e14\u968f\u7740\u5143\u7d20\u7684\u589e\u52a0\uff0c\u5047\u9633\u6027\u7684\u6982\u7387\u4f1a\u4e0a\u5347\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Bloom%20Filter/#_1","title":"\u53c2\u6570\u9009\u62e9","text":"<p>\u9009\u62e9\u5408\u9002\u7684 \u4f4d\u6570\u7ec4\u5927\u5c0fm \u548c \u54c8\u5e0c\u51fd\u6570\u6570\u91cfk \u662f\u5b9e\u73b0\u9ad8\u6548Bloom Filter\u7684\u5173\u952e\u3002\u8fd9\u4e9b\u53c2\u6570\u76f4\u63a5\u5f71\u54cd\u5230\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u8bef\u5224\u7387\uff08false positive rate, FPR\uff09\u3002</p> \\[m=-\\frac{n\\ln p}{(\\ln 2)^2}, k = \\frac{m \\ln 2}{n}\\] <p>\u5176\u4e2d\\(n\\)\u662f\u8981\u6dfb\u52a0\u5230\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u7684\u5143\u7d20\u6570\u91cf\uff0c\\(p\\) \u662f\u671f\u671b\u7684\u8bef\u5224\u7387\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u8981\u6dfb\u52a0\u5230\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u4f7f\u7528\u53ef\u6269\u5c55\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\uff08Scalable Bloom Filter\uff09[^sbf]\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\u5141\u8bb8\u52a8\u6001\u8c03\u6574\u5bb9\u91cf\uff0c\u4ee5\u4fdd\u6301\u8bef\u5224\u7387\u5728\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u9608\u503c\u4e4b\u5185\u3002</p> <p>[^sbf]: Scalable Bloom Filters https://gsd.di.uminho.pt/members/cbm/ps/dbloom.pdf</p> <p>\u5468\u4e9a\u91d1\u8bfe\u9898\u7ec4\uff1a\u6d59\u6c5f\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u672c\u79d1\u6559\u80b2\uff0c\u5728\u8bfe\u7a0b\u4e0a\u5b58\u5728\u7740\u4e24\u6781\u5206\u5316\u8f83\u4e3a\u4e25\u91cd\u7684\u60c5\u51b5\u3002\u4e00\u65b9\u9762\uff0c\u4e00\u4e9b\u4e13\u4e1a\u8bfe\u7a0b\u901a\u8fc7\u8bfe\u7a0b\u6539\u9769\uff0c\u7d27\u8ddf\u6280\u672f\u53d1\u5c55\uff0c\u7ed9\u540c\u5b66\u4eec\u63d0\u4f9b\u4e86\u66f4\u5148\u8fdb\u7684\u77e5\u8bc6\uff1b\u4e00\u65b9\u9762\uff0c\u4e00\u4e9b\u8bfe\u7a0b\u7684\u8001\u5e08\u7167\u672c\u5ba3\u79d1\uff0c\u5b9e\u9a8c\u9648\u65e7\uff0c\u8ddf\u4e0d\u4e0a\u65f6\u4ee3\u3002\u540c\u65f6\uff0c\u4e00\u4e9b\u4e13\u4e1a\u8bfe\u7a0b\u7684\u6539\u9769\u4e0d\u5728\u8bfe\u7a0b\u5185\u5bb9\u4e0a\u4e0b\u529f\u592b\uff0c\u800c\u662f\u5728\u8bfe\u7a0b\u5f62\u5f0f\u4e0a\u505a\u8868\u9762\u6587\u7ae0\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Hash%20Table/","title":"Hash Table","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Hash%20Table/#introduction","title":"Introduction","text":"<p>\u54c8\u5e0c\u8868\uff08hash table\uff09\uff0c\u53c8\u79f0\u6563\u5217\u8868\uff0c\u5b83\u901a\u8fc7\u54c8\u5e0c\u7b97\u6cd5\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002</p> <p>\u7b80\u5355\u7684\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06value\u5b58\u50a8\u5728hash(key)\u7684\u5730\u65b9\uff0c\u4e4b\u540e\u67e5\u8be2\u76f4\u63a5\u5230hash(key)\u7684\u5730\u65b9\u67e5\u8be2\u3002\u6b64\u65f6\uff0c\u54c8\u5e0c\u8868 \u6dfb\u52a0/\u5220\u9664/\u67e5\u8be2 \u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(1)\u3002\u7136\u800c\uff0c\u4e0d\u540c\u7684key\u4e4b\u95f4\uff0chash(key)\u662f\u4f1a\u53d1\u751f\u51b2\u7a81\u7684\u3002\u89e3\u51b3\u51b2\u7a81\u5c31\u662f\u54c8\u5e0c\u8868\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u5982\u679c\u51b2\u7a81\u89e3\u51b3\u7684\u4e0d\u597d\uff0c\u5b9e\u9645\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u5230O(n)\u3002</p> <p>\u51b2\u7a81\u89e3\u51b3\u7b97\u6cd5\u6709\uff1a</p> <ul> <li>\u94fe\u5f0f\u5730\u5740\u7b97\u6cd5\uff1a\u5bf9\u4e8e\u76f8\u540c\u7684hash(key)\uff0c\u4ed6\u4eec\u4f1a\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\u4e2d\u3002\u589e\u5220\u6539\u67e5\u5c31\u9700\u8981\u904d\u5386\u8fd9\u4e2a\u94fe\u8868\u3002</li> <li>\u5f00\u653e\u5bfb\u5740\uff08open addressing\uff09\u4e0d\u5f15\u5165\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\uff0c\u800c\u662f\u901a\u8fc7\u201c\u591a\u6b21\u63a2\u6d4b\u201d\u6765\u5904\u7406\u54c8\u5e0c\u51b2\u7a81\uff0c\u63a2\u6d4b\u65b9\u5f0f\u4e3b\u8981\u5305\u62ec\u7ebf\u6027\u63a2\u6d4b\u3001\u5e73\u65b9\u63a2\u6d4b\u548c\u591a\u6b21\u54c8\u5e0c\u7b49\u3002</li> </ul> <p>\u6b64\u5916\uff0c\u5bf9\u4e8e\u54c8\u5e0c\u8868\u6765\u8bf4\uff0c\u4ed6\u5e0c\u671b\u54c8\u5e0c\u7b97\u6cd5\u62e5\u6709\u4e0b\u9762\u7684\u7279\u6027\uff1a</p> <ul> <li>\u6548\u7387\u9ad8\uff1a\u8ba1\u7b97\u54c8\u5e0c\u503c\u7684\u8fc7\u7a0b\u5e94\u8be5\u8db3\u591f\u5feb\u3002\u8ba1\u7b97\u5f00\u9500\u8d8a\u5c0f\uff0c\u54c8\u5e0c\u8868\u7684\u5b9e\u7528\u6027\u8d8a\u9ad8\u3002</li> <li>\u5747\u5300\u5206\u5e03\uff1a\u54c8\u5e0c\u7b97\u6cd5\u5e94\u4f7f\u5f97\u952e\u503c\u5bf9\u5747\u5300\u5206\u5e03\u5728\u54c8\u5e0c\u8868\u4e2d\u3002\u5206\u5e03\u8d8a\u5747\u5300\uff0c\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\u3002</li> </ul> <p>![Note] \u54c8\u5e0c\u78b0\u649e\u653b\u51fb\uff1a\u9488\u5bf9\u54c8\u5e0c\u51fd\u6570\u7684\u7279\u6027\uff0c\u7cbe\u5fc3\u6784\u9020\u6570\u636e\uff0c\u4f7f\u6240\u6709\u6570\u636e\u7684\u54c8\u5e0c\u503c\u76f8\u540c\uff0c\u5f53\u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u54c8\u5e0c\u8868\u5c31\u4f1a\u9000\u5316\u4e3a\u5355\u94fe\u8868\uff08\u94fe\u5f0f\u5730\u5740\u7b97\u6cd5\uff09\u3002\u6240\u4ee5\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u7684\u573a\u666f\uff0c\u8fd8\u8981\u8ba9\u54c8\u5e0c\u51fd\u6570\u5177\u5907\u4e00\u4e9b\u6297\u78b0\u649e\u6027\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/Hash%20Table/#usage","title":"Usage","text":"<p>\u51e0\u4e4e\u6240\u6709\u7684\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u90fd\u5185\u7f6e\u4e86 \u54c8\u5e0c\u8868\u3002</p> <p>\u53e6\u5916\uff0c\u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u53ea\u6709\u4e0d\u53ef\u53d8\u5bf9\u8c61\u624d\u53ef\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684 <code>key</code> \u3002\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679chash(key) \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u600e\u4e48\u627e\u5230 value \uff1f</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Hash/LRU/","title":"LRU","text":"<p>Least Recently Used (LRU) cache \u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u57fa\u4e8e\u65f6\u95f4\u5c40\u90e8\u6027\uff08\u6700\u8fd1\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u5728\u4e4b\u540e\u5e94\u8be5\u8fd8\u4f1a\u8bbf\u95ee\uff09\u7684\u60f3\u6cd5\uff0c\u5728Cache\u6ee1\u7684\u65f6\u5019\u603b\u662f\u6dd8\u6c70\u6700\u4e45\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u6570\u636e\u3002</p> <p>\u4ed6\u7684\u7f16\u7a0b\u5b9e\u8df5\u4e5f\u662f\u7b80\u5355\u7684\u3002\u901a\u5e38\u53ea\u9700\u8981\u4e00\u4e2a \u54c8\u5e0c\u8868 + \u94fe\u8868\u3002\u54c8\u5e0c\u8868\u4fdd\u5b58 \u6570\u636e\u548c\u6570\u636e\u5bf9\u5e94\u7684\u94fe\u8868\u4f4d\u7f6e\uff0c\u94fe\u8868\u5219 \u6697\u793a\u4e86\u6570\u636e\u7684\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u2014\u2014\u6bcf\u6b21\u8bfb\u5199\u6570\u636e\u90fd\u628a\u6570\u636e\u79fb\u52a8\u5230\u94fe\u8868\u5934\uff0c\u6ee1\u4e86\u5219\u5220\u9664\u94fe\u8868\u5c3e\u5bf9\u5e94\u7684\u6570\u636e\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\n// \u5b9a\u4e49\u6a21\u677f\u7684\u53cc\u5411\u94fe\u8868\u8282\u70b9\ntemplate&lt;typename K, typename V&gt;\nstruct Node {\n    K key;\n    V value;\n    Node* prev;\n    Node* next;\n    Node(K k, V v) : key(k), value(v), prev(nullptr), next(nullptr) {}\n};\n\ntemplate&lt;typename K, typename V&gt;\nclass LRUCache {\n    int capacity;\n    Node&lt;K, V&gt;* head, *tail;\n    unordered_map&lt;K, Node&lt;K, V&gt;*&gt; cache;\n\n    void addNode(Node&lt;K, V&gt;* node) {\n        node-&gt;next = head-&gt;next;\n        node-&gt;prev = head;\n        head-&gt;next-&gt;prev = node;\n        head-&gt;next = node;\n    }\n\n    void removeNode(Node&lt;K, V&gt;* node) {\n        Node&lt;K, V&gt;* prev = node-&gt;prev;\n        Node&lt;K, V&gt;* next = node-&gt;next;\n        prev-&gt;next = next;\n        next-&gt;prev = prev;\n    }\n\n    void moveToHead(Node&lt;K, V&gt;* node) {\n        removeNode(node);\n        addNode(node);\n    }\n\n    Node&lt;K, V&gt;* popTail() {\n        Node&lt;K, V&gt;* res = tail-&gt;prev;\n        removeNode(res);\n        return res;\n    }\n\npublic:\n    LRUCache(int capacity) : capacity(capacity) {\n        head = new Node&lt;K, V&gt;(K(), V());\n        tail = new Node&lt;K, V&gt;(K(), V());\n        head-&gt;next = tail;\n        tail-&gt;prev = head;\n    }\n\n    ~LRUCache() {\n        Node&lt;K, V&gt;* current = head;\n        while (current != nullptr) {\n            Node&lt;K, V&gt;* next = current-&gt;next;\n            delete current;\n            current = next;\n        }\n    }\n\n    V get(K key) {\n        if (cache.find(key) == cache.end()) return V(); // \u8fd4\u56de\u9ed8\u8ba4\u6784\u9020\u7684\u503c\n        Node&lt;K, V&gt;* node = cache[key];\n        moveToHead(node);\n        return node-&gt;value;\n    }\n\n    void put(K key, V value) {\n        if (cache.find(key) != cache.end()) {\n            Node&lt;K, V&gt;* node = cache[key];\n            node-&gt;value = value;\n            moveToHead(node);\n        } else {\n            Node&lt;K, V&gt;* newNode = new Node&lt;K, V&gt;(key, value);\n            if (cache.size() == capacity) {\n                Node&lt;K, V&gt;* tail = popTail();\n                cache.erase(tail-&gt;key);\n                delete tail;\n            }\n            addNode(newNode);\n            cache[key] = newNode;\n        }\n    }\n};\n\nint main() {\n    LRUCache&lt;int, string&gt; cache(2);\n    cache.put(1, \"one\");\n    cache.put(2, \"two\");\n    cout &lt;&lt; cache.get(1) &lt;&lt; endl; // \u8f93\u51fa \"one\"\n    cache.put(3, \"three\"); // \u79fb\u9664\u952e2\n    cout &lt;&lt; cache.get(2) &lt;&lt; endl; // \u8f93\u51fa\u7a7a\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u952e2\u5df2\u88ab\u79fb\u9664\n    cache.put(4, \"four\"); // \u79fb\u9664\u952e1\n    cout &lt;&lt; cache.get(1) &lt;&lt; endl; // \u8f93\u51fa\u7a7a\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u952e1\u5df2\u88ab\u79fb\u9664\n    cout &lt;&lt; cache.get(3) &lt;&lt; endl; // \u8f93\u51fa \"three\"\n    cout &lt;&lt; cache.get(4) &lt;&lt; endl; // \u8f93\u51fa \"four\"\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/bst/","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u5728\u4e8c\u53c9\u6811\u7684\u57fa\u7840\u4e0a\u53c8\u6ee1\u8db3\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\uff1a</p> <ul> <li>\u82e5\u5b83\u7684\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\uff0c\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u5c0f\u4e8e\u5b83\u7684\u503c\u3002</li> <li>\u82e5\u5b83\u7684\u53f3\u5b50\u6811\u4e0d\u4e3a\u7a7a\uff0c\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7684\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u5b83\u7684\u503c\u3002</li> </ul> <p>\u5b83\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u90fd\u662f\u4e8c\u5206\u641c\u7d22\u6811\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/bst/#_2","title":"\u589e\u5220\u67e5\u6539","text":"<p>\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u589e\u5220\u6539\u67e5\u90fd\u975e\u5e38\u7b80\u5355\u3002\u53ea\u8981\u77e5\u9053\u67e5\u5c31\u884c\uff0c\u67e5\u7684\u8fc7\u7a0b\u5c31\u662f\u4e0d\u65ad\u7684\u548c\u8282\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u67e5\u7684\u503c&lt;\u8282\u70b9\u7684\u503c\u5c31\u5f80\u8282\u70b9\u7684\u5de6\u5b50\u6811\u67e5\uff08\u6ca1\u6709\u5de6\u5b50\u6811\u5c31\u67e5\u4e0d\u5230\uff09\uff0c\u67e5\u7684\u503c&gt;\u8282\u70b9\u7684\u503c\u5c31\u5f80\u8282\u70b9\u7684\u53f3\u5b50\u6811\u67e5\uff08\u6ca1\u6709\u53f3\u5b50\u6811\u5c31\u67e5\u4e0d\u5230\uff09\uff0c\u67e5\u7684\u503c=\u8282\u70b9\u7684\u503c\u5c31\u627e\u5230\u4e86\u3002\u589e\u5c31\u662f\u67e5 + \u589e\u52a0\u4e00\u4e2a\u8282\u70b9\uff0c\u5220\u5c31\u662f\u67e5 + \u5220\u9664\u8fd9\u4e2a\u8282\u70b9\u3002\u4e0d\u8fc7\u589e\u5220\u9700\u8981\u4fee\u6539\u7236\u8282\u70b9\u5305\u542b\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b\u5c31\u884c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5e73\u5747 O(logN)O(logN)\uff0c\u6700\u5dee O(N)O(N)\u3002\u6700\u5dee\u60c5\u51b5\u8fd9\u4e2a\u6811\u88ab\u4f60\u5efa\u6210\u4e86\u4e00\u4e2a\u94fe\u8868\u3002</p> <p>ADT\uff1a\u67e5\u627e\u548c\u63d2\u5165\u90fd\u4e0d\u96be\uff0c\u4f46\u662f\u5220\u9664\u8981\u8003\u8651\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>0 \u5ea6\u8282\u70b9\uff1aReset its parent link to NULL.\u5f88\u7b80\u5355\uff0c\u5220\u4e86\u5c31\u597d\u3002</li> <li>1 \u5ea6\u8282\u70b9\uff1aReplace the node by its single child.\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u628a\u5b83\u7684\u5b69\u5b50\u5f53\u4f5c\u5b83\u3002</li> <li>2 \u5ea6\u8282\u70b9\uff1aReplace the node by the largest one in its left subtree or the smallest one in its right subtree. Then Delete the replacing node from the subtree.</li> <li>\u53e6\u4e00\u4e2a\u529e\u6cd5\u662f Lazy deletion\uff0c\u6807\u8bb0\u4e3a\u5220\u9664\u4f46\u4e0d\u4ece\u6811\u4e2d\u79fb\u9664\u3002</li> </ul> <pre><code>//==================\u67e5\u627e=====================================\nTree find(Elementtype x,Tree t)\n{\n    if (t==NULL) return NULL;   //\u627e\u4e0d\u5230\n    if (x&lt;t-&gt;Value)\n        return find(t-&gt;left);   //\u6240\u6709\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\u7684\u8282\u70b9\u90fd\u5728\u5de6\u5b50\u6811\n    else if (x&gt; t-&gt;Value)\n        return find(t-&gt;right);  //\u6240\u6709\u6bd4\u5f53\u524d\u8282\u70b9\u5927\u7684\u8282\u70b9\u90fd\u5728\u53f3\u5b50\u6811\n    else\n        return t;   //\u627e\u5230\u4e86\n}//\u65f6\u95f4\u590d\u6742\u5ea6O(depth)\uff0c\u548c\u6df1\u5ea6\u5bc6\u5207\u76f8\u5173\uff0c\u5c3e\u9012\u5f52tail recursion\nTree find(Elementtype x,Tree T)\n{\n    while (T)\n    {\n        if (x==T-&gt;Value) return T;\n        if (x &lt; T-&gt;Value) T=T-&gt;left;\n        else T=T-&gt;right;\n    }\n    return NULL;\ns}//\u65f6\u95f4\u590d\u6742\u5ea6O(depth),\u548c\u6df1\u5ea6\u5bc6\u5207\u76f8\u5173\nTree findMin(Tree T)\n{\n    if (T==NULL) return NULL;\n    while (T-&gt;left) T=T-&gt;left;\n    return T;\n}//findMax\u540c\u7406\n//==================\u63d2\u5165=====================================\nTree insert(Elementtype v,Tree t)\n{\n    if (t==NULL){\n        t = malloc(sizeof(struct treenode));\n        if (t==NULL)\n            ERROR();\n        else{\n            t-&gt;element = v;\n            t-&gt;left = t-&gt;right = NULL;\n        }\n    }//\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\n    else if (v &lt; t-&gt;value)\n        t-&gt;left = insert(v,t-&gt;left);\n    else if (v &gt; t-&gt;value)\n        t-&gt;right = insert(x,t-&gt;right);\n    //else\uff0c\u8bf4\u660e\u548c\u73b0\u5728\u7684\u8282\u70b9\u76f8\u540c\u4e86\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4ec0\u4e48\u90fd\u6ca1\u6709\u505a\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bb0\u4e2a\u6570\u3002\n    return t;//\u4e0d\u8981\u5fd8\u4e86\u8fd9\u4e2a\n}\n//==================\u5220\u9664=====================================\nTree delete(Elementtype x,Tree t)\n{\n\n}//\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ed9\u8ba1\u6570\u5668-1\u6765\u8868\u793a\u5220\u9664\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/bst/#_3","title":"\u7ea2\u9ed1\u6811","text":"<p>\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u4e00\u9897\u4e8c\u53c9\u6811\u662f\u4f1a\u9000\u5316\u6210\u94fe\u8868\u7684\u3002\u4e3a\u4e86\u4fdd\u6301\u9ad8\u6548\u7684\u641c\u7d22\u6548\u7387\uff0c\u8ba9\u4e00\u4e2a\u6811\u5c3d\u53ef\u80fd\u7684\u5e73\u8861\u662f\u6700\u597d\u7684\u3002\u6240\u6709\u6709\u4e86AVL\u6811\u3001\u7ea2\u9ed1\u6811\u7b49\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u7ea2\u9ed1\u6811\u5e38\u88ab\u7528\u4e8e\u521b\u5efaOrdered Map\u5bb9\u5668\u3002\u76f8\u6bd4\u4e8e\u54c8\u5e0c\u8868\uff0c\u7ea2\u9ed1\u6811\u7684\u589e\u5220\u67e5\u6539\u65f6\u95f4\u6548\u7387\u8f83\u4f4e\uff08\\(O(log n)\\) vs \\(O(1)\\)\uff09\u4f46\u662f\u4ecd\u7136\u9ad8\u6548\uff0c\u8282\u7ea6\u7a7a\u95f4\u5e76\u4e14\u652f\u6301\u987a\u5e8f\u904d\u5386\u3002C++\u6807\u51c6\u5e93\u7684<code>std::map</code>\u5c31\u662f\u4f7f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/heap/","title":"\u5806","text":"<p>\u5806\u662f\u4e00\u68f5\u6811\uff1a\u5176\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u952e\u503c\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u952e\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e/\u5c0f\u4e8e\u7b49\u4e8e\u5176\u7236\u4eb2\u7684\u952e\u503c\uff0c\u5206\u522b\u53eb\u505a\u6700\u5c0f\u5806/\u6700\u5927\u5806\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u8bf4\u5230\u5806\u7684\u65f6\u5019\u5f80\u5f80\u6307\u7684\u662f\u4e8c\u53c9\u5806\uff1a\u5b83\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\u5f62\u6210\u7684\u5806\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u6613\u7684\u5b9e\u73b0\uff1a</p> <pre><code>// \u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53eb heapify\nvoid sink(vector&lt;int&gt; &amp;nums, int i) {\n  int size = nums.size();\n  int largest = i;\n  int left = 2 * i + 1;\n  int right = 2 * i + 2;\n  if (left &lt; size &amp;&amp; nums[left] &gt; nums[largest]) {\n    largest = left;\n  }\n\n  if (right &lt; size &amp;&amp; nums[right] &gt; nums[largest]) {\n    largest = right;\n  }\n\n  if (largest != i) {\n    std::swap(nums[i], nums[largest]);\n    sink(nums, largest);\n  }\n}\n\nvoid make_heap(vector&lt;int&gt; &amp;nums) {\n  for (int i = nums.size() / 2 - 1; i &gt;= 0; i--)\n    sink(nums, i);\n}\n\nint pop_heap(vector&lt;int&gt; &amp;nums) {\n  int result = nums[0];\n  nums[0] = nums.back();\n  nums.pop_back();\n  sink(nums, 0);\n  return result;\n}\n\nvoid push_heap(vector&lt;int&gt; &amp;nums, int num) {\n  nums.push_back(num);\n  int index = nums.size() - 1;\n  while (index &gt; 0) {\n    int parent = (index - 1) / 2;\n    if (nums[index] &gt; nums[parent]) {\n      std::swap(nums[index], nums[parent]);\n      index = parent;\n    } else {\n      break;\n    }\n  }\n}\n</code></pre> <ul> <li>\u7531\u4e8e\u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u4ed6\u662f\u5f88\u5408\u9002\u7684\uff0c\u4e0d\u4f1a\u6d6a\u8d39\u7a7a\u95f4\u3002</li> <li>\u4e0b\u6c89\u64cd\u4f5c\uff08<code>sink</code>\uff09\uff1a\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\uff0c\u5219\u5c06\u5176\u4e0e\u6700\u5927\u7684\u5b50\u8282\u70b9\u4ea4\u6362\uff0c\u5e76\u9012\u5f52\u5730\u7ee7\u7eed\u4e0b\u6c89\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(log (n))\\)\u3002</li> <li>\u5c06\u4e00\u4e2a\u65e0\u5e8f\u6570\u7ec4\u521b\u5efa\u6210\u5806\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5e94\u7528\u4e0b\u6c89\u64cd\u4f5c\uff08Sink\uff09\uff0c\u4ee5\u786e\u4fdd\u5b50\u6811\u6ee1\u8db3\u6700\u5927\u5806\u7684\u5c5e\u6027\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)\uff0c\u540e\u9762\u89e3\u91ca\u3002</li> <li>\u5411\u5806\u4e2d\u63d2\u5165\u5143\u7d20\uff1a\u5c06\u5143\u7d20\u653e\u5728\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u8fdb\u884c\u201c\u63d0\u5347\u64cd\u4f5c\u201d\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u503c\u5927\u4e8e\u5176\u7236\u8282\u70b9\u7684\u503c\uff0c\u5219\u5c06\u5176\u4e0e\u7236\u8282\u70b9\u8fdb\u884c\u4ea4\u6362\uff0c\u5e76\u9012\u5f52\u7684\u7ee7\u7eed\u63d0\u5347\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u4e0b\u6c89\u64cd\u4f5c\uff0c\\(O(log (n))\\)\u3002</li> <li>\u5f39\u51fa\u5806\u7684\u6700\u5927\u503c\uff1a\u6700\u5927\u503c\u5c31\u662f\u5806\u9876/\u6811\u6839\u3002\u5c06\u5b83\u4e0e\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4ea4\u6362\uff0c\u7136\u540e\u5bf9\u6811\u6839\u8fdb\u884c\u4e0b\u6c89\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(log (n))\\)\u3002</li> </ul> <p>\u5c3d\u7ba1<code>sink</code>\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(log(n))\\)\uff0c\u800c\u5efa\u5806\u8981\u8fdb\u884c\\(n/2\\)\u6b21\u64cd\u4f5c\uff0c\u4f46\u662f\u5c06\u6240\u6709\u64cd\u4f5c\u653e\u5728\u4e00\u8d77\u7efc\u5408\u8003\u8651\uff0c\u6309\u7167\u5c42\u8fdb\u884c\u8003\u8651\u3002\u7b2ck\u5c42\u6709\\(2^k\\)\u4e2a\u5143\u7d20\uff0csink\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(k)\\)</p> <p>\\(\\(T = \\sum_{k=1}^{log (n)} 2^kk\\)\\) \u53ef\u4ee5\u4f7f\u7528\u9519\u4f4d\u76f8\u51cf\u6cd5\uff08\u7b49\u5dee\u4e58\u7b49\u6bd4\uff0c\u6b7b\u53bb\u7684\u9ad8\u4e2d\u8bb0\u5fc6\u5f00\u59cb\u653b\u51fb\u6211\uff09\u6c42\u5f97\\(O(T) = O(n)\\)\u3002</p> <p>\u8fd8\u770b\u5230\u4e86\u53e6\u4e00\u4e2a\u5de7\u5999\u7684\u8bc1\u660e\u5806\u6392\u5e8f\u4e2d\u5efa\u5806\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u600e\u4e48\u6765\u7684\uff1f - \u5de5\u5382\u65b9\u6cd5\u7684\u56de\u7b54 - \u77e5\u4e4e\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/heap/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u4e8c\u53c9\u5806 - OI Wiki</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/tree/","title":"\u6811","text":"<p>\u6811 Tree \u662f\u5f88\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\u3002\u5728\u56fe\u8bba\u4e2d\u6211\u4eec\u5b9a\u4e49\u6811\u662f \u65e0\u5411\u65e0\u73af\u8fde\u901a\u56fe\uff0c\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u6811\u6709\u5f88\u591a\u7b49\u4ef7\u7684\u5b9a\u4e49\u65b9\u5f0f\u3002</p> <p>\u6811\u7684\u6982\u5ff5\u4e2d\u6709\u5f88\u591a\u672f\u8bed\uff1a</p> <ul> <li>\u8282\u70b9\u7684\u5ea6\uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5ea6\uff1b</li> <li>\u6811\u7684\u5ea6\uff1a\u4e00\u68f5\u6811\u4e2d\uff0c\u6700\u5927\u7684\u8282\u70b9\u7684\u5ea6\u79f0\u4e3a\u6811\u7684\u5ea6\uff1b</li> <li>\u53f6\u8282\u70b9 \u6216 \u7ec8\u7aef\u8282\u70b9\uff1a\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\uff1b</li> <li>\u7236\u4eb2\u8282\u70b9 \u6216 \u7236\u8282\u70b9\uff1a\u82e5\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u5b50\u8282\u70b9\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u79f0\u4e3a\u5176\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\uff1b</li> <li>\u5b69\u5b50\u8282\u70b9\u6216\u5b50\u8282\u70b9\uff1a\u4e00\u4e2a\u8282\u70b9\u542b\u6709\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff1b</li> <li>\u5144\u5f1f\u8282\u70b9\uff1a\u5177\u6709\u76f8\u540c\u7236\u8282\u70b9\u7684\u8282\u70b9\u4e92\u79f0\u4e3a\u5144\u5f1f\u8282\u70b9\uff1b</li> <li>\u8282\u70b9\u7684 \u5c42\u6b21\uff1a\u4ece\u6839\u5f00\u59cb\u5b9a\u4e49\u8d77\uff0c\u6839\u4e3a\u7b2c 1 \u5c42\uff0c\u6839\u7684\u5b50\u8282\u70b9\u4e3a\u7b2c 2 \u5c42\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1b</li> <li>\u6811\u7684 \u9ad8\u5ea6 \u6216 \u6df1\u5ea6\uff1a\u6811\u4e2d\u8282\u70b9\u7684\u6700\u5927\u5c42\u6b21\uff1b</li> <li>\u8282\u70b9\u7684\u7956\u5148\uff1a\u4ece\u6839\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u5206\u652f\u4e0a\u7684\u6240\u6709\u8282\u70b9\uff1b</li> <li>\u5b50\u5b59\uff1a\u4ee5\u67d0\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4efb\u4e00\u8282\u70b9\u90fd\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u3002</li> <li>\u68ee\u6797\uff1a\u7531 m\uff08m&gt;=0\uff09\u68f5\u4e92\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408\u79f0\u4e3a\u68ee\u6797\uff1b</li> </ul> <p>\u6811\u7684\u4e00\u79cd\u7279\u4f8b \u4e8c\u53c9\u641c\u7d22\u6811 Binary Search Tree \u975e\u5e38\u5e38\u89c1\u4e14\u91cd\u8981\u3002\u4e8c\u53c9\u641c\u7d22\u6811\u662f\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u6811</p> <ol> <li>\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u542b\u6709\u4e24\u4e2a\u5b50\u6811</li> <li>\u6811\u7684\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u987a\u5e8f\u5173\u7cfb\uff1a\u82e5\u5b83\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5c0f\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b \u82e5\u5b83\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5927\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b \u5b83\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li> </ol> <p>\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u8fd8\u6709\u4e00\u4e9b\u7279\u6b8a\u7c7b\u578b</p> <ul> <li>\u5b8c\u5168\u4e8c\u53c9\u6811 Complete Binary Tree\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u7684\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3a i\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u6ee1\u4e8c\u53c9\u6811 Full Binary Tree\uff1a\u6df1\u5ea6\u4e3a K \u5e76\u4e14\u6709 2K\u221212K\u22121 \u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u3002\u8fd9\u4e2a\u6709\u53e6\u4e00\u79cd\u89e3\u91ca\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811 Balance Tree\uff1a\u5b83\u6216\u8005\u662f\u4e00\u9897\u7a7a\u6811\uff0c\u6216\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u4e4b\u5dee (\u5e73\u8861\u56e0\u5b50) \u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\uff0c\u4e14\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u662f\u4e00\u9897\u5e73\u8861\u4e8c\u53c9\u6811\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Tree/tree/#_2","title":"\u904d\u5386","text":"<p>\u4e00\u822c\u7684\u6811\u6709\u4e24\u79cd\u904d\u5386\u65b9\u5f0f\uff0c\u6df1\u5ea6\u4f18\u5148\u548c\u5e7f\u5ea6\u4f18\u5148\uff0c\u6df1\u5ea6\u4f18\u5148\u53c8\u53ef\u4ee5\u5206\u4e3a\u5148\u6839\u548c\u540e\u8ddf\u3002\u5bf9\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u53c8\u53ef\u4ee5\u5206\u4e3a \u524d\u5e8f Pre-order\uff08\u4e2d\u5de6\u53f3\uff09\uff0c\u4e2d\u5e8f In-order\uff08\u5de6\u4e2d\u53f3\uff09\u548c \u540e\u5e8f Post-order\uff08\u5de6\u53f3\u4e2d\uff09\u3002</p> <p>\u7531\u4e8e\u4e00\u4e2a\u6811\u7684\u5b50\u6811\u540c\u6837\u662f\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u7528\u9012\u5f52\u6765\u5b8c\u6210\u6811\u7684\u904d\u5386\u662f\u975e\u5e38\u81ea\u7136\u7684\u60f3\u6cd5\uff0c\u5b9e\u73b0\u4e5f\u975e\u5e38\u7b80\u5355\u3002\u4ee5leetcode-94 \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a\u4f8b\uff1a</p> <pre><code>class Solution {\n public:\n  void t(TreeNode* root, std::vector&lt;int&gt;&amp; v) {\n    if (root != nullptr) {\n      t(root-&gt;left, v);\n      v.push_back(root-&gt;val);\n      t(root-&gt;right, v);\n    }\n  }\n  std::vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n    std::vector&lt;int&gt; result;\n    t(root, result);\n    return result;\n  }\n};\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Linked%20List/","title":"\u94fe\u8868","text":"<p>\u94fe\u8868\u7684\u7279\u70b9\u662f\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u5176\u5143\u7d20\uff0c\u4e0d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\u3002\u5b83\u53ef\u4ee5\u5206\u6210\uff1a</p> <ul> <li>\u5355\u5411\u94fe\u8868\uff1a\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u6570\u636e\u5b57\u6bb5\u548c\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u4e2d\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002</li> <li>\u53cc\u5411\u94fe\u8868\uff1a\u6bcf\u4e2a\u8282\u70b9\u4e0d\u4ec5\u5305\u542b\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\uff0c\u8fd8\u5305\u542b\u4e00\u4e2a\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002</li> <li>\u5faa\u73af\u94fe\u8868\uff1a\u5355\u5411\u6216\u53cc\u5411\u94fe\u8868\u7684\u53d8\u4f53\uff0c\u5176\u4e2d\u5c3e\u90e8\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5934\u90e8\u8282\u70b9\uff0c\u5f62\u6210\u4e00\u4e2a\u73af\u3002</li> </ul> <p>\u4ed6\u7684\u7279\u70b9\u662f\u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u9ad8\uff0c\u4e3aO(1)\u3002\u4f46\u662f\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u5fc5\u987b\u4ee5O(n)\u7684\u4ee3\u4ef7\u904d\u5386\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6570\u7ec4\u5f80\u5f80\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Linked%20List/#_2","title":"\u4fb5\u5165\u5f0f\u94fe\u8868","text":"<p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\u94fe\u8868\u7684\u4fb5\u5165\u5f0f\u5b9e\u73b0\u65b9\u5f0f\u3002\u94fe\u8868\u7684\u94fe\u63a5\u6307\u9488\uff08\u4f8b\u5982<code>next</code>\u548c<code>prev</code>\u6307\u9488\uff09\u88ab\u76f4\u63a5\u5d4c\u5165\u5230\u6570\u636e\u5143\u7d20\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u6570\u636e\u5143\u7d20\u81ea\u8eab\u5305\u542b\u4e86\u94fe\u63a5\u5230\u5176\u4ed6\u5143\u7d20\u7684\u4fe1\u606f\u3002\u5149\u770b\u6587\u5b57\u63cf\u8ff0\u53ef\u80fd\u6709\u70b9\u8ff7\u60d1\uff0c\u770b\u4e00\u4e0b\u4ee3\u7801\uff0c\u8fd9\u662f\u6211\u4eec\u719f\u6089\u7684\u975e\u4fb5\u5165\u5f0f\u7684\u94fe\u8868\uff1a</p> <pre><code>struct ListNode {\n    void * data;\n    struct ListNode *next;\n    struct ListNode *prev;\n}\n</code></pre> <p>\u4fb5\u5165\u5f0f\u94fe\u8868\u5728Linux\u5185\u6838\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5927\u6982\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff08\u5b9a\u4e49\u5728types.h\uff09\uff1a</p> <pre><code>struct list_head {\n    struct list_head *next, *prev;\n};\nstruct Data {\n    data;\n    struct list_head list;\n};\n</code></pre> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4fb5\u5165\u5f0f\u94fe\u8868\u7531\u6570\u636e\u7ba1\u7406\u6307\u9488\uff0c\u975e\u4fb5\u5165\u5f0f\u94fe\u8868\u7531\u94fe\u8868\u7ba1\u7406\u6307\u9488\u3002\u4fb5\u5165\u5f0f\u94fe\u8868\u7684\u8bbe\u8ba1\u80fd\u591f\u51cf\u5c11\u5185\u5b58\u788e\u7247\uff0c\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Linked%20List/#_3","title":"\u7b97\u6cd5\u9898","text":"<p>\u5728\u505aLeetcode\u7684\u65f6\u5019\uff0c\u6211\u53d1\u73b0\u53cc\u6307\u9488\u548c\u5feb\u6162\u6307\u9488\u5728\u5904\u7406\u94fe\u8868\u9898\u7684\u65f6\u5019\u8c8c\u4f3c\u5f88\u6709\u7528\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Linked%20List/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>list.h - include/linux/list.h - Linux source code v6.4.10 - Bootlin Elixir Cross Referencer</li> <li>types.h - include/linux/types.h - Linux source code v6.4.10 - Bootlin Elixir Cross Referencer</li> <li>08. Hashtables | Build Your Own Redis with C/C++</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Stack/","title":"\u6808","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Vector/Stack/#_2","title":"\u5355\u8c03\u6808","text":"<p>\u5355\u8c03\u6808\uff08Monotone Stack\uff09\uff1a\u4e00\u79cd\u7279\u6b8a\u7684\u6808\u3002\u5728\u6808\u7684\u300c\u5148\u8fdb\u540e\u51fa\u300d\u89c4\u5219\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u300c\u4ece \u6808\u9876 \u5230 \u6808\u5e95 \u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u589e\uff08\u6216\u8005\u5355\u8c03\u9012\u51cf\uff09\u300d\u3002\u5176\u4e2d\u6ee1\u8db3\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u589e\u7684\u6808\uff0c\u53eb\u505a\u300c\u5355\u8c03\u9012\u589e\u6808\u300d\u3002\u6ee1\u8db3\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u51cf\u7684\u6808\uff0c\u53eb\u505a\u300c\u5355\u8c03\u9012\u51cf\u6808\u300d\u3002\u5355\u8c03\u6808\u53ef\u4ee5\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u89e3\u51fa\u67d0\u4e2a\u5143\u7d20\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u6216\u8005\u5c0f\u7684\u5143\u7d20\u3002</p> <pre><code>def monotoneIncreasingStack(nums):\n    stack = []\n    for num in nums:\n        while stack and num &gt;= stack[-1]:\n            # num \u5c31\u662f\u7b2c\u4e00\u4e2a\u6bd4 stack[-1] \u5927\u7684\u5143\u7d20\n            stack.pop()\n        stack.append(num)\n    # \u6267\u884c\u5b8c\u6210\u540e\uff0cstack\u53ef\u80fd\u4f1a\u5269\u4e0b\u4e00\u4e9b\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u540e\u9762\u6ca1\u6709\u66f4\u5927\u7684\u4e86\uff0c\u6839\u636e\u9700\u6c42\u8fdb\u4e00\u6b65\u5904\u7406\n</code></pre> <p>739. \u6bcf\u65e5\u6e29\u5ea6 - \u529b\u6263\uff08LeetCode\uff09 \u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u4f7f\u7528\u5355\u8c03\u6808\u6c42\u89e3\u7684\u4f8b\u5b50\u3002</p> <pre><code>using namespace std;\nclass Solution {\npublic:\n  vector&lt;int&gt; dailyTemperatures(vector&lt;int&gt; &amp;temperatures) {\n    std::vector&lt;pair&lt;int, int&gt;&gt; stack; // temp, index\n    std::vector&lt;int&gt; result(temperatures.size(), 0);\n    for (int i = 0; i &lt; temperatures.size(); i++) {\n      while (!stack.empty() &amp;&amp; stack.back().first &lt; temperatures[i]) {\n        int index = stack.back().second;\n        result[index] = i - index;\n        stack.pop_back();  // \u6838\u5fc3\u4ee3\u7801\n      }\n      stack.push_back(std::make_pair(temperatures[i], i));\n    }\n    return result;\n  }\n};\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/","title":"Dynamic Analysis","text":"<p>\u52a8\u6001\u5206\u6790\u662f\u5728\u4e00\u4e2a\u771f\u5b9e\u6216\u8005\u6a21\u62df\u7684\u8fd0\u884c\u73af\u5883\u4e2d\u6267\u884c\u7ed9\u5b9a\u7684\u7a0b\u5e8f\uff0c\u786e\u8ba4\u6216\u53d1\u73b0\u7a0b\u5e8f\u7684\u6027\u8d28\u3002</p> <p>\u52a8\u6001\u65b9\u6cd5\u6548\u7387\u9ad8\uff0c\u9519\u8bef\u5b9a\u4f4d\u51c6\u786e\uff0c\u4f46\u5e94\u7528\u573a\u5408\u53d7\u9650\uff0c\u5b83\u5fc5\u987b\u8981\u6c42\u5177\u6709\u7a0b\u5e8f\u80fd\u8fd0\u884c\u8d77\u6765\u7684\u73af\u5883\u3002 \u800c\u4e14\uff0c\u5176\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u52a8\u6001\u65b9\u6cd5\u4e0d\u80fd\u8986\u76d6\u7a0b\u5e8f\u7684\u6240\u6709\u8f93\u5165\u548c\u5168\u90e8\u7684\u6267\u884c\u8def\u5f84\uff0c\u6545\u53ea\u80fd\u8bc1\u660e\u5728\u5df2\u6709\u7684\u8f93\u5165\u4e0b\uff0c\u88ab\u6d4b\u8bd5\u6240\u8986\u76d6\u7684\u90e8\u5206\u7a0b\u5e8f\u6ca1\u6709\u95ee\u9898\uff0c\u800c\u4e0d\u80fd\u8bc1\u660e\u6574\u4e2a\u7a0b\u5e8f\u4e0d\u5b58\u5728\u9519\u8bef\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/#mannual-test","title":"Mannual Test","text":"<p>\u663e\u7136\uff0c\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002\u7ed9\u5b9a\u8f93\u5165\uff0c\u770b\u8f93\u51fa\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u5e38\u7528\u7684\u6709\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/#fuzz-testing","title":"Fuzz Testing","text":"<p>\u6a21\u7cca\u6d4b\u8bd5\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u81ea\u52a8\u6216\u534a\u81ea\u52a8\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u8f93\u5165\u5230\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u76d1\u89c6\u7a0b\u5e8f\u5f02\u5e38\uff0c\u5982\u5d29\u6e83\uff0c\u65ad\u8a00\uff08assertion\uff09\u5931\u8d25\uff0c\u4ee5\u53d1\u73b0\u53ef\u80fd\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u6bd4\u5982\u5185\u5b58\u6cc4\u6f0f\u3002\u6a21\u7cca\u6d4b\u8bd5\u5e38\u5e38\u7528\u4e8e\u68c0\u6d4b\u8f6f\u4ef6\u6216\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5b89\u5168\u6f0f\u6d1e\u3002</p> <p>\u5173\u952e\u7684\u70b9</p> <ul> <li>\u5982\u4f55\u786e\u5b9a\u7a0b\u5e8f\u53d1\u751f\u4e86\u5f02\u5e38\uff1f e.g. Address Sanitizer</li> <li>\u5982\u4f55\u5bf9\u8f93\u5165\u8fdb\u884c\u6709\u6548\u53d8\u5f02\uff1f</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/#afl","title":"AFL","text":"<p>AFL \u662f\u8c37\u6b4c\u5f00\u53d1\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\u3002</p> <ul> <li>\u81ea\u52a8\u5316\u7684\u5728\u65e0\u7a77\u8f93\u5165\u7a7a\u95f4\u5bfb\u627e\u6709\u9650\u7684\u8f93\u5165\uff0c\u89e6\u53d1\u6f0f\u6d1e\u3002</li> <li>\u4f7f\u7528\u9057\u4f20\u7b97\u6cd5\u6765\u6709\u6548\u63d0\u9ad8\u6d4b\u8bd5\u7528\u4f8b\u7684\u4ee3\u7801\u8986\u76d6\u7387\u3002\u4ee5\u6b64\u4e3a\u6307\u5bfc\u8fdb\u884c\u8f93\u5165\u7684\u53d8\u5f02\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/#diff-testing","title":"Diff Testing","text":"<p>\u611f\u89c9\u5bf9\u5b9e\u73b0\u540c\u4e00\u6807\u51c6\u7684\u4e0d\u540c\u8f6f\u4ef6\u7279\u522b\u597d\u4f7f\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Dynamic%20Analysis/#runtime-monitoring","title":"Runtime Monitoring","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM/","title":"LLVM","text":"","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM/#llvm-ir","title":"LLVM-IR","text":"<p>LLVM-IR\uff0c\u5373 LLVM \u4e2d\u95f4\u4ee3\u7801\uff0c\u6709\u4e09\u79cd\u8868\u793a\u65b9\u5f0f\uff0c\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u662f\u7b49\u4ef7\u7684\u3002</p> <ol> <li>\u5185\u5b58\u4e2d\u7684 LLVM IR \uff08\u4e3a\u4e86\u7f16\u8bd1\u5668\u5feb\u901f\u5904\u7406\uff09</li> <li>\u2f50\u7279\u7801\u5f62\u5f0f\u7684 LLVM IR \uff08\u4e3a\u4e86\u7ed9\u65b9\u4fbf\u7ed9 JIT complier \u4f7f\u7528\uff09</li> <li>\u53ef\u8bfb\u5f62\u5f0f\u7684 LLVM IR \uff08\u4e3a\u4e86\u7ed9\u4eba\u770b\uff09</li> </ol> <p>\u56de\u5fc6\u7f16\u8bd1\u539f\u7406\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5b8c\u6210\u8bed\u6cd5\u5206\u6790\u548c\u8bed\u4e49\u5206\u6790\uff0c\u751f\u6210\u4e86\u62bd\u8c61\u8bed\u6cd5\u6811 AST \u65f6\uff0c\u4e0b\u9762\u6211\u4eec\u60f3\u8981\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002LLVM-IR \u5c31\u662f\u4e00\u79cd\u4e2d\u95f4\u4ee3\u7801\u3002\u6839\u636e AST\u2f63\u6210\u5bf9\u5e94\u7684 LLVM IR\uff0c\u8fd9\u4e5f\u5c31\u662f\u7f16\u8bd1\u5668\u524d\u7aef\u6240\u505a\u7684\u4e8b\uff0c\u7f16\u8bd1\u5668\u540e\u7aef\u5219\u662f\u5c06 LLVM IR \u8f6c\u6362\u6210\u5177\u4f53\u7684\u673a\u5668\u8bed\u8a00\u3002\u6240\u4ee5 LLVM-IR \u662f\u6c9f\u901a\u524d\u540e\u7aef\u7684\u6865\u6881\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5199\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u6210\u524d\u7aef\u90e8\u5206\u751f\u6210 LLVM-IR\uff0c\u540e\u7aef\u90e8\u5206\u5c31\u4e0d\u7528\u6211\u4eec\u81ea\u5df1\u52a8\u624b\u4e86\u3002\u8fd9\u4e5f\u662f\u5f53\u4ee3\u4e00\u4e9b\u65b0\u8bed\u8a00\u7684\u505a\u6cd5\uff0c\u4f8b\u5982Rust\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u56fe\u5f88\u597d\u7684\u5c55\u73b0\u4e86 LLVM-IR \u7684\u6784\u9020\u3002</p> <p></p> <ul> <li>Module\uff1a\u53ef\u4ee5\u8ba4\u4e3a Module \u662f LLVM \u7684\u7f16\u8bd1\u5355\u5143\u3002</li> <li>Global Variable\uff1a\u5168\u5c40\u53d8\u91cf\u3002</li> <li>Function declaration\uff1a\u51fd\u6570\u58f0\u660e\u3002</li> <li>Function definition\uff1a\u51fd\u6570\u5b9a\u4e49\u3002<ul> <li>Argument\uff1a\u51fd\u6570\u7684\u53c2\u6570</li> <li>Entry Basic Block\uff1a\u51fd\u6570\u5165\u53e3</li> <li>Basic Blocks\uff1aBasic block \u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8ba4\u4e3a BasicBlock \u662f\u76f8\u5bf9\u4e8e\u63a7\u5236\u6d41\u7684\u57fa\u672c\u5355\u5143\u3002</li> <li>\u63a7\u5236\u6d41\u53ea\u80fd\u4ece BasicBlock \u7684 \u7b2c\u4e00\u4e2a\u6307\u4ee4 \u8fdb\u5165\u8be5\u5757\u3002</li> <li>\u9664\u4e86 BasicBlock \u7684\u6700\u540e\u4e00\u4e2a\u6307\u4ee4\uff08Terminator Instruction\uff09\uff0c\u63a7\u5236\u6d41\u5728\u79bb\u5f00\u57fa\u672c\u5757\u4e4b\u524d\u4e0d\u4f1a\u8df3\u8f6c\u6216\u505c\u673a</li> </ul> </li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM/#llvm-pass","title":"LLVM Pass","text":"<p>LLVM Pass \u662f\u6700\u6709\u610f\u601d\u7684\u5185\u5bb9\u4e86\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM/#todo","title":"TODO","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ul> <li>LLVM-IR-tutorial: \u770b\u4e00\u904d\uff0c\u5927\u6982\u4e86\u89e3 LLVM \u6c47\u7f16\u7684\u5199\u6cd5\u548c\u57fa\u672c\u601d\u60f3\u3002</li> <li>inkwell\u7684\u6587\u6863: rust binding, \u6211\u66f4\u719f\u6089\u4e00\u70b9\uff0c\u4e86\u89e3\u63a5\u53e3\u3002</li> <li>LLVM-Program-Manual: \u6211\u6bd4\u8f83\u559c\u6b22\u8fd9\u91cc\u7684\u5bf9\u7c7b\u7684\u603b\u4f53\u6027\u4ecb\u7ecd\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/Parser/","title":"Parser","text":"<p>\u5176\u5b9e\u548c\u672c\u7ae0\u7684\u4e3b\u9898\u5173\u7cfb\u5fae\u4e4e\u5176\u5fae\uff0c\u53ea\u662f\u6b63\u597d\u653e\u5728\u8fd9\u91cc\u4e86\u3002</p> <p>GitHub - tree-sitter/tree-sitter: An incremental parsing system for programming tools \u8fd9\u4e2a\u5e93\u96c6\u6210\u4e86\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u7684 parser\u3002\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u8bed\u8a00\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51\u7ed9\u51fa\u7684\u5217\u8868\uff1a</p> <ul> <li>C</li> <li>JSON</li> <li>HTML</li> <li>Go</li> <li>Python</li> <li>Markdown</li> <li>Makefile</li> <li>gitignore</li> <li>SQL</li> </ul> <p>C, Go, Rust, Java, Python \u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u5bf9\u8fd9\u4e9b\u8bed\u8a00\u7684 parser\u3002\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5e93\u81ea\u5b9a\u4e49\u8bed\u6cd5\u89c4\u5219\uff0c\u4e3a\u81ea\u5df1\u7684\u8bed\u8a00\u5b9e\u73b0 Parser\u3002\u5b83\u6709\u89c4\u5b9a\u81ea\u5df1\u7684 DSL\uff0c\u4f7f\u7528\u7c7b\u4f3c EBNF \u7684\u6587\u6cd5\u3002</p> <pre><code>// \u5bf9\u4e0b\u9762\u8fd9\u6bb5js\u4ee3\u7801\u6267\u884c\u547d\u4ee4 tree-sitter generate\uff0c\u4f1a\u751f\u6210parser.c\u3002\u4e00\u822c\u5c06\u5b83\u7f16\u8bd1\u4e3a\u9759\u6001\u5e93\u4f7f\u7528\nmodule.exports = grammar({\n  name: 'YOUR_LANGUAGE_NAME',\n\n  rules: {\n    // TODO: add the actual grammar rules\n    source_file: $ =&gt; 'hello'\n  }\n});\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/","title":"\u5e8f\u5217\u5316","text":"<p>\u7a0b\u5e8f\u901a\u5e38\uff08\u81f3\u5c11\uff09\u4f7f\u7528\u4e24\u79cd\u5f62\u5f0f\u7684\u6570\u636e\uff1a</p> <ol> <li>\u5728\u5185\u5b58\u4e2d\uff0c\u6570\u636e\u4fdd\u5b58\u5728\u5bf9\u8c61\u3001\u7ed3\u6784\u4f53\u3001\u5217\u8868\u3001\u6570\u7ec4\u3001\u6563\u5217\u8868\u3001\u6811\u7b49\u4e2d\u3002 \u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u9488\u5bf9 CPU \u7684\u9ad8\u6548\u8bbf\u95ee\u548c\u64cd\u4f5c\u8fdb\u884c\u4e86\u4f18\u5316\uff08\u901a\u5e38\u4f7f\u7528\u6307\u9488\uff09\u3002</li> <li>\u5982\u679c\u8981\u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\uff0c\u5219\u5fc5\u987b\u5c06\u5176 \u7f16\u7801\uff08encode\uff09/ \u5e8f\u5217\u5316\uff08serialization\uff09 / \u7f16\u7ec4\uff08marshalling\uff09 \u4e3a\u67d0\u79cd\u81ea\u5305\u542b\u7684\u5b57\u8282\u5e8f\u5217\uff08\u4f8b\u5982\uff0cJSON \u6587\u6863\uff09\u3002 \u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6307\u9488\u5bf9\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5b57\u8282\u5e8f\u5217\u8868\u793a\u4f1a\u4e0e\u901a\u5e38\u5728\u5185\u5b58\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u5b8c\u5168\u4e0d\u540c\u3002</li> </ol> <p>Serialization\u6307\u7684\u662f\u4e3a\u4e86\u8ba9\u6570\u636e\u4fbf\u4e8e\u4f20\u8f93\u548c\u5b58\u50a8\uff0c\u5c06\u5bf9\u8c61\u8f6c\u5316\u6210\u7279\u5b9a\u683c\u5f0f\u7684\u6570\u636e\u3002Encoding\u662f\u4e00\u4e2a\u66f4\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u5c06\u6570\u636e\u4ece\u4e00\u79cd\u683c\u5f0f\u8f6c\u5316\u6210\u53e6\u4e00\u79cd\u683c\u5f0f\u90fd\u53ef\u4ee5\u53eb\u505aEncoding\u3002Marshal \u4e0d\u4ec5\u4f20\u8f93\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u800c\u4e14\u4f1a\u4e00\u8d77\u4f20\u8f93\u5bf9\u8c61\u7684\u65b9\u6cd5\uff08\u76f8\u5173\u4ee3\u7801\uff09\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u4e0d\u9700\u8981\u4e25\u683c\u7684\u533a\u5206\u4ed6\u4eec\u4e09\u8005\u7684\u533a\u522b\u3002</p> \u7f16\u7801\u65b9\u5f0f \u4e8c\u8fdb\u5236/\u6587\u672c \u7c7b\u578b \u4f18\u70b9 \u7f3a\u70b9 Base64 \u6587\u672c \u65e0 \u652f\u6301\u5e7f\u6cdb\uff0c\u7f16\u7801\u4e8c\u8fdb\u5236 \u6ca1\u6709\u7ed3\u6784\uff0c\u6d6a\u8d39\u7a7a\u95f4 JSON \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u7b80\u6d01 XML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u590d\u6742 YAML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca TOML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u9002\u5408\u914d\u7f6e\u6587\u4ef6 CBOR \u4e8c\u8fdb\u5236 \u5f31/\u81ea\u89e3\u91ca \u7f16\u7801\u7d27\u51d1\uff0c\u4e8c\u8fdb\u5236\u7248\u7684JSON CSV,TSV \u8868\u683c \u5f31 \u9002\u5408\u8868\u683c \u7f3a\u5c11\u7edf\u4e00\u89c4\u8303 Protobuf \u4e8c\u8fdb\u5236 \u5f3a \u4e8c\u8fdb\u5236\u6bd4\u6587\u672c\u8282\u7701\u7a7a\u95f4 \u4e3b\u8981\u5bf9Go\u6bd4\u8f83\u597d\u7528 Borsh \u4e8c\u8fdb\u5236 \u5f3a \u53ef\u4ee5\u5e8f\u5217\u5316\u5bf9\u8c61 \u4f7f\u7528\u7684\u5c11\uff0c\u4e3b\u8981\u5bf9Rust\u6bd4\u8f83\u597d\u7528 Thrift \u4e8c\u8fdb\u5236 \u5f3a Avro \u4e8c\u8fdb\u5236 \u5f31/\u81ea\u89e3\u91ca pickle/ java.io.Serializable/... \u4e8c\u8fdb\u5236 \u5f3a \u8bed\u8a00\u81ea\u5e26\uff0c\u53ef\u4ee5\u5e8f\u5217\u5316\u5bf9\u8c61 \u4e0d\u5b89\u5168\uff0c\u4e0d\u901a\u7528"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#_2","title":"\u7f16\u7801\u65b9\u5f0f","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#json","title":"JSON","text":"<ul> <li>\u5927\u4e8e \\(2^{53}\\) \u7684\u6574\u6570\u65e0\u6cd5\u4f7f\u7528 IEEE 754 \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u4f7f\u7528JSON\u76f4\u63a5\u5b58\u50a8\u8fd9\u6837\u7684\u6570\u636e</li> <li>\u4e0d\u76f4\u63a5\u652f\u6301\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u9700\u8981\u501f\u52a9\u5982Base64\u7684\u5e2e\u52a9\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#python-std-json","title":"Python - std - json","text":"<p>Python \u7684 dict/list \u548c JSON \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u5e94\u3002\u5e8f\u5217\u5316 <code>dumps</code> \u548c\u53cd\u5e8f\u5217\u5316 <code>loads</code> \u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c<code>dump</code> \u548c <code>load</code> \u7684\u53c2\u6570\u662f\u6587\u4ef6\u3002</p> <pre><code>&gt;&gt;&gt; import json\n&gt;&gt;&gt; json.dumps(['foo', {'bar': ('baz', None, 1.0, 2)}])\n'[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]'\n&gt;&gt;&gt; json.loads('[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]')\n['foo', {'bar': ['baz', None, 1.0, 2]}]\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; json.load(Path(\"./a.json\").open())   # \u5982\u679c\u662f\u4e00\u4e2a\u7b80\u5355\u811a\u672c\u76f4\u63a5\u8fd9\u6837\u6700\u7b80\u6d01\uff0c\u53ea\u5f00\u4e0d\u5173\n&gt;&gt;&gt; json.loads(Path(\"./a.json\").read_text())   # \u5982\u679c\u662f\u4e00\u4e2a\u7b80\u5355\u811a\u672c\u76f4\u63a5\u8fd9\u6837\u6700\u7b80\u6d01\n</code></pre> <p>\u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u548c\u7c7b\u578b\uff0cJSON \u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u5728 Python \u4e2d\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u5e94\u3002</p> Python JSON dict object list, tuple array str string int, float, enum number True true False false None null"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#rust-cratesio-serde_json","title":"Rust - crates.io - serde_json","text":"<p>\u66f4\u591a\u5173\u4e8e serde \u5e93\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 Serde</p> <p>\u5728\u89e3\u6790 JSON \u6587\u672c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u6709\u4e24\u79cd\u9700\u6c42\uff0c\u4ee5\u53ca\u76f8\u53cd\u7684\u5e8f\u5217\u5316\u7684\u9700\u6c42\u3002</p> <ol> <li>\u89e3\u6790\u6210\u4e00\u4e2a strongly typed Rust data structure\u3002\u6bd4\u5982\u4e00\u4e9b API \u5df2\u7ecf\u89c4\u5b9a\u597d\u4e86\u8fd4\u56de\u7684\u6570\u636e\u683c\u5f0f\u3002</li> <li>\u89e3\u6790\u6210\u4e00\u4e2a untyped or loosely typed representation\u3002\u4e00\u4e9b\u66f4\u666e\u901a\u7684\u60c5\u51b5\u3002</li> </ol> <p>Demo For Strong Type \u6211\u4eec\u4e00\u822c\u4f7f\u7528 <code>#[derive(Serialize, Deserialize)]</code> \u6765\u4fee\u9970\u8981\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u578b\u3002\u7136\u540e\u5728 <code>serde_json::from_str</code> \u7684\u65f6\u5019\u6307\u5b9a\u7c7b\u578b\u3002</p> <pre><code>use serde::{Deserialize, Serialize};\nuse serde_json::Result;\n\n#[derive(Serialize, Deserialize)]\nstruct Person {\n    name: String,\n    age: u8,\n    phones: Vec&lt;String&gt;,\n}\n\nfn typed_example() -&gt; Result&lt;()&gt; {\n    // Some JSON input data as a &amp;str. Maybe this comes from the user.\n    let data = r#\"\n        {\n            \"name\": \"John Doe\",\n            \"age\": 43,\n            \"phones\": [\n                \"+44 1234567\",\n                \"+44 2345678\"\n            ]\n        }\"#;\n\n    // Parse the string of data into a Person object. This is exactly the\n    // same function as the one that produced serde_json::Value above, but\n    // now we are asking it for a Person as output.\n    let p: Person = serde_json::from_str(data)?;\n\n    // Do things just like with any other Rust data structure.\n    println!(\"Please call {} at the number {}\", p.name, p.phones[0]);\n\n    Ok(())\n}\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u518d\u5c06 Person \u5e8f\u5217\u5316\u6210 json \u6587\u672c\uff0c\u53ef\u4ee5\u8c03\u7528 <code>serde_json::to_string</code></p> <pre><code>    // Serialize it to a JSON string.\n    let j = serde_json::to_string(&amp;p)?;\n\n    // Print, write to a file, or send to an HTTP server.\n    println!(\"{}\", j);\n</code></pre> <p>Demo For Loose Type: <code>serde_json::Value</code> \u662f\u8fd9\u79cd\u677e\u6563\u7c7b\u578b\u7684\u4e00\u822c\u8868\u793a\u3002\u5728 <code>serde_json::from_str</code> \u7684\u65f6\u5019\u6307\u5b9a\u7c7b\u578b\u4e3a Value \u5373\u53ef\u3002</p> <pre><code>use serde_json::{Result, Value};\n\nfn untyped_example() -&gt; Result&lt;()&gt; {\n    // Some JSON input data as a &amp;str. Maybe this comes from the user.\n    let data = r#\"\n        {\n            \"name\": \"John Doe\",\n            \"age\": 43,\n            \"phones\": [\n                \"+44 1234567\",\n                \"+44 2345678\"\n            ]\n        }\"#;\n\n    // Parse the string of data into serde_json::Value.\n    let v: Value = serde_json::from_str(data)?;\n\n    // Access parts of the data by indexing with square brackets.\n    println!(\"Please call {} at the number {}\", v[\"name\"], v[\"phones\"][0]);\n\n    Ok(())\n}\n</code></pre> <p>\u4e0d\u96be\u60f3\u5230\uff0c\u5e8f\u5217\u5316\u5c31\u662f\u5148\u6784\u9020\u677e\u6563\u7c7b\u578b\u7684 <code>Value</code> \u7c7b\u578b\u6570\u636e\uff0c\u518d to_string\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>json!</code> \u5b8f\u6765\u6784\u9020 <code>Value</code> \u7c7b\u578b\u6570\u636e\u3002</p> <pre><code>use serde_json::json;\n\nfn main() {\n    // The type of `john` is `serde_json::Value`\n    let john = json!({\n        \"name\": \"John Doe\",\n        \"age\": 43,\n        \"phones\": [\n            \"+44 1234567\",\n            \"+44 2345678\"\n        ]\n    });\n\n    println!(\"first phone number: {}\", john[\"phones\"][0]);\n\n    // Convert to a string of JSON and print it out\n    println!(\"{}\", john.to_string());\n}\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#xml","title":"XML","text":"<p>\u6709\u4eba\u5bf9XML\u7684\u8bc4\u4ef7\u662f\uff1a\u4e00\u822c\u7684\u8bed\u8a00\uff0c\u8981\u4e48\u9002\u5408\u673a\u5668\u9605\u8bfb\uff0c\u8981\u4e48\u9002\u5408\u4eba\u7c7b\u9605\u8bfb\u3002\u800cXML\u662f\u5c11\u6709\u7684\u5bf9\u4eba\u548c\u673a\u5668\u90fd\u4e0d\u53cb\u597d\u7684\u3002\u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#python","title":"Python","text":"<p>\u6807\u51c6\u5e93\u63d0\u4f9b\u7684 XML \u6a21\u5757\uff0c\u5bf9\u4e8e\u6076\u610f\u6784\u9020\u7684\u6570\u636e\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u653b\u51fb\u8005\u53ef\u80fd\u6ee5\u7528 XML \u529f\u80fd\u6765\u6267\u884c\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3001\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u3001\u751f\u6210\u4e0e\u5176\u5b83\u8ba1\u7b97\u673a\u7684\u7f51\u7edc\u8fde\u63a5\u6216\u7ed5\u8fc7\u9632\u706b\u5899\u3002\u5982\u679c\u6765\u6e90\u4e0d\u4fe1\u4efb\uff0c\u63a8\u8350\u4f7f\u7528 GitHub - tiran/defusedxml\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#toml","title":"TOML","text":"<p>TOML\u4e3b\u8981\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u6570\u636e\u4f20\u8f93\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#python-std-tomllib","title":"Python - std - tomllib","text":"<p>3.11 \u5f15\u5165\u7684\u89e3\u6790 TOML \u6570\u636e\u7684\u6a21\u5757\uff0c\u63a5\u53e3\u548c json \u662f\u4e00\u81f4\u7684\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#rust-cratesio-toml","title":"Rust - crates.io - toml","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#yaml","title":"YAML","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#rust-cratesio-serde-yaml","title":"Rust crates.io - serde-yaml","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#base64","title":"Base64","text":"<p>base64\u662f\u76f8\u5f53\u7b80\u5355\u7684\u7f16\u7801\u6280\u672f\u3002\u4ed6\u4e3b\u8981\u662f\u7528\u4e8e\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7f16\u7801\u6210\u6587\u672c\u683c\u5f0f\uff0c\u4ece\u800c\u6ee1\u8db3\u67d0\u4e9b\u9650\u5236\uff0c\u672c\u8eab\u4e0d\u5bf9\u4e8c\u8fdb\u5236\u6570\u636e\u4f5c\u4efb\u4f55\u9650\u5236\u3002base64\u53ea\u4f7f\u7528<code>A</code>\u2013<code>Z</code>, <code>a</code>\u2013<code>z</code>, <code>0</code>\u2013<code>9</code>\u4ee5\u53ca<code>+</code>\u548c<code>/</code>\u6765\u7f16\u7801\u6570\u636e\uff08\u517164\u4e2a\u5b57\u7b26\uff0c\u4ee3\u8868\u4ece0\u523063\uff0c6\u4f4d\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u9700\u8981\u7528\u4e00\u4e2a\u5b57\u8282\uff088\u4f4d\uff09\u7684\u5b57\u7b26\uff0c\u6765\u7f16\u7801\u4e00\u4e2a6\u4f4d\u7684\u6570\u636e\uff0c\u6240\u4ee5\u7f16\u7801\u4e4b\u540e\u4f53\u79ef\u4f1a\u81a8\u80c0\u5230\u539f\u5148\u7684\u7ea64/3\u3002\u539f\u6765\u7684\u6570\u636e\u5e94\u8be5\u662f8\u4f4d\u7684\u500d\u6570\u800c\u4e0d\u662f6\u4f4d\u7684\u500d\u6570\uff0c\u600e\u4e48\u529e\uff1f\u7528<code>=</code>\u4f5c\u4e3apadding\u6765\u586b\u5145\u7ed3\u679c\u30023\u4e2a\u539f\u672c\u7684\u6570\u636e\uff0c\u7f16\u7801\u7684\u52304\u4e2a\u5b57\u7b26\u3002\u6240\u4ee5\u5982\u679c\u6570\u636e\u6700\u540e\u4f1a\u8865\u5145padding length = 3 - origin length % 3\u3002</p> <p>\u4f8b\u5982\uff1a\u7f16\u7801 <code>hi</code>(0x68, 0x69, 0110 1000 0110 1001)\uff0c\u6309\u71676\u4f4d\u5206\u5c31\u662f011010, 000110 1001\u3002\u4e5f\u5c31\u662f26, 6, 36\u3002\u67e5\u8868\u5f97<code>aGk</code>\u3002\u8fd8\u5dee\u4e86\u4e00\u4e2a\u5b57\u7b26\u51d1\u52303\u7684\u500d\u6570\uff0c\u8865\u4e00\u4e2apadding\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u7f16\u7801\u7ed3\u679c\u662f<code>aGk=</code>\u3002</p> <p>base64\u6709\u53d8\u79cdbase58\uff08\u53bb\u6389<code>0,I,l,O,+,/</code>\u65b9\u4fbf\u4eba\u9605\u8bfb\uff09, base32\uff0cbase16\uff08\u5373\u7528Hexadecimal\u8868\u8fbe\u4e8c\u8fdb\u5236\u6570\u636e\uff09\u7b49\u3002\u539f\u7406\u90fd\u4e00\u6837\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#python-std-base64","title":"Python - std - base64","text":"<p>\u9664\u4e86 base64\uff0c\u8fd8\u6709 base32,base16 \u7b49\u7f16\u7801\u4e5f\u5728\u8fd9\u4e2a\u5e93\u4e2d\u3002</p> <pre><code>&gt;&gt;&gt; base64.b64encode(b\"hello world\")\nb'aGVsbG8gd29ybGQ='\n&gt;&gt;&gt; base64.b64decode(b'aGVsbG8gd29ybGQ=')\nb'hello world'\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#protobuf","title":"Protobuf","text":"<p>golang \u548c Protobuf \u7684\u96c6\u6210\u4f7f\u7528\u65f6\u6700\u5e38\u89c1\u7684\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E5%BA%8F%E5%88%97%E5%8C%96/#programming-language-parser","title":"Programming Language Parser","text":"<p>\u5176\u5b9e\u548c\u672c\u7ae0\u7684\u4e3b\u9898\u5173\u7cfb\u5fae\u4e4e\u5176\u5fae\uff0c\u53ea\u662f\u6b63\u597d\u653e\u5728\u8fd9\u91cc\u4e86\u3002</p> <p>GitHub - tree-sitter/tree-sitter: An incremental parsing system for programming tools \u8fd9\u4e2a\u5e93\u96c6\u6210\u4e86\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u7684 parser\u3002\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u8bed\u8a00\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51\u7ed9\u51fa\u7684\u5217\u8868\uff1a</p> <ul> <li>C</li> <li>JSON</li> <li>HTML</li> <li>Go</li> <li>Python</li> <li>Markdown</li> <li>Makefile</li> <li>gitignore</li> <li>SQL</li> </ul> <p>C, Go, Rust, Java, Python \u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u5bf9\u8fd9\u4e9b\u8bed\u8a00\u7684 parser\u3002\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5e93\u81ea\u5b9a\u4e49\u8bed\u6cd5\u89c4\u5219\uff0c\u4e3a\u81ea\u5df1\u7684\u8bed\u8a00\u5b9e\u73b0 Parser\u3002\u5b83\u6709\u89c4\u5b9a\u81ea\u5df1\u7684 DSL\uff0c\u4f7f\u7528\u7c7b\u4f3c EBNF \u7684\u6587\u6cd5\u3002</p> <pre><code>// \u5bf9\u4e0b\u9762\u8fd9\u6bb5js\u4ee3\u7801\u6267\u884c\u547d\u4ee4 tree-sitter generate\uff0c\u4f1a\u751f\u6210parser.c\u3002\u4e00\u822c\u5c06\u5b83\u7f16\u8bd1\u4e3a\u9759\u6001\u5e93\u4f7f\u7528\nmodule.exports = grammar({\n  name: 'YOUR_LANGUAGE_NAME',\n\n  rules: {\n    // TODO: add the actual grammar rules\n    source_file: $ =&gt; 'hello'\n  }\n});\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","title":"Compiler","text":"<p>\u7f16\u8bd1\u7684\u5927\u81f4\u7684\u6d41\u7a0b\u5982\u4e0b\u3002\u4e0b\u56fe\u5ffd\u7565\u4e86\u4ee3\u7801\u4f18\u5316\u7684\u90e8\u5206\uff0c\u4ee3\u7801\u7684\u4f18\u5316\u53ef\u4ee5\u53d1\u751f\u5728\u5404\u4e2a\u9636\u6bb5\u3002</p> <p></p> <p>\u7f16\u8bd1\u8fc7\u7a0b\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\u524d\u7aef\u548c\u540e\u7aef\u3002\u524d\u7aef\u4e3b\u8981\u662f\u5c06\u6e90\u4ee3\u7801\u53d8\u6210\u4e2d\u95f4\u4ee3\u7801\uff0c\u540e\u7aef\u4e3b\u8981\u662f\u4f18\u5316\u4ee5\u53ca\u751f\u6210\u76ee\u6807\u673a\u5668\u7801\u3002\u6d59\u6c5f\u5927\u5b66\u7684\u300a\u7f16\u8bd1\u539f\u7406\u300b\u8bfe\u7a0b\u4e3b\u8981\u8bb2\u524d\u7aef\uff0c\u524d\u7aef\u66f4\u50cf\u4e00\u4e9b\u5b57\u7b26\u4e32\u5904\u7406\u7684\u7406\u8bba\u3002\u540e\u7aef\u5219\u8f83\u5c11\u7684\u6d89\u53ca\uff0c\u540e\u7aef\u66f4\u63a5\u8fd1\u7a0b\u5e8f\u5206\u6790\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#lexical-analysis","title":"Lexical Analysis","text":"<p>\u8bcd\u6cd5\u5206\u6790\uff08Lexical Analysis\uff09 \u7684\u4e3b\u8981\u4efb\u52a1\u662f\u8bfb\u5165\u6e90\u7a0b\u5e8f\u7684\u8f93\u5165\u5b57\u7b26\uff0c\u5c06\u4ed6\u4eec\u7ec4\u6210 lexemes\uff0c\u751f\u6210\u5e76\u8f93\u51fa\u4e00\u4e2a token \u5e8f\u5217\uff08token \u548c lexeme \u4e00\u4e00\u5bf9\u5e94\uff09\u3002\u901a\u5e38\uff0c\u8fd9\u9700\u8981\u8bc6\u522b lexemes\uff0c\u8fc7\u6ee4\u6ce8\u91ca\u548c\u7a7a\u767d\u3002</p> <p>Lexical Analyzer \u901a\u5e38\u8fd8\u8981\u548c Symbol table \u8fdb\u884c\u4ea4\u4e92\uff0c\u53d1\u73b0\u6807\u8bc6\u7b26\u65f6\u6dfb\u52a0\u5230 Symbol table\u3002</p> <p>\u6709\u4e09\u4e2a\u6982\u5ff5\u9700\u8981\u4e86\u89e3\u3002alphabet \u662f\u6709\u9650\u7b26\u53f7\u7684\u96c6\u5408\u3002string \u662f\u7b26\u53f7\u7684\u6709\u7a77\u5e8f\u5217\u3002language \u662f\u7ed9\u5b9a alphabet \u4e0a\u4efb\u610f\u53ef\u6570\u7684 string \u7684\u96c6\u5408\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#regular-expression","title":"Regular Expression","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression, Regex\uff09\u91c7\u7528\u5f52\u7eb3\u5b9a\u4e49\uff1a</p> <ul> <li> <p>\u5f52\u7eb3\u57fa\u7840\uff1a</p> </li> <li> <p>\u7a7a\u4e32 <code>\u03b5</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002<code>L(\u03b5) = {\u03b5}</code></p> </li> <li> <p>\u82e5 <code>a</code> \u662f <code>\u2211</code> \u4e0a\u7684\u4e00\u4e2a\u7b26\u53f7\uff0c\u90a3\u4e48 a \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002<code>L(a) = {a}</code></p> </li> <li> <p>\u5f52\u7eb3\u6b65\u9aa4\uff1a\u5982\u679c r,s \u90fd\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48</p> </li> <li> <p><code>(r)|(s)</code> \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u8bed\u8a00 <code>L(r) \u222a L(s)</code></p> </li> <li><code>(r)(s)</code> \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u8bed\u8a00 <code>L(r)L(s)</code></li> <li><code>(r)*</code> \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u8bed\u8a00 <code>(L(r))*</code></li> <li><code>(r)</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u8bed\u8a00 <code>L(r)</code>\uff0c\u8fd9\u662f\u4e3a\u4e86\u8bf4\u660e\u62ec\u53f7\u662f\u6ca1\u7528\u7684\u3002</li> </ul> <p>\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5b9a\u4e49\u7684 language \u53eb\u505a regular set\u3002\u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62ec\u53f7\uff0c\u89c4\u5b9a\u4f18\u5148\u7ea7\u7684\u987a\u5e8f\u662f <code>*</code> &gt; \u8fde\u63a5 &gt; <code>|</code> \u3002</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5b58\u5728\u5c40\u9650\u6027\u7684\uff0c\u6bd4\u5982\u4ed6\u6ca1\u6709\u8ba1\u6570\u7684\u529f\u80fd\uff0c\u4ed6\u4e0d\u80fd\u5339\u914d\u7c7b\u4f3c <code>n\u4e2aa b n\u4e2aa</code> \u8fd9\u6837\u7684\u4e32\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#finite-automata","title":"Finite Automata","text":"<p>\u6709\u7a77\u81ea\u52a8\u673a\uff08Finite Automata\uff09\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>DFA (Deterministic Finite Automata): \u5bf9\u6bcf\u4e00\u4e2a \u72b6\u6001\u548c\u8f93\u5165\u5b57\u7b26\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a \u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</li> <li>NFA (Non-Deterministic Finite Automata): \u5bf9\u4e8e\u76f8\u540c\u7684\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u5b57\u7b26\uff0c\u4e0b\u4e00\u4e2a\u72b6\u6001\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002</li> </ul> <p>\u4e3e\u4f8b\uff1a\u6211\u4eec\u901a\u5e38\u4f7f\u7528 transition graph \u6765\u8868\u793a\u6709\u7a77\u81ea\u52a8\u673a\u3002</p> <p></p> <ul> <li>NFA \u548c DFA \u5177\u6709 \u7b49\u4ef7\u6027\u3002\u5bf9\u4efb\u4f55\u975e\u786e\u5b9a\u7684\u6709\u7a77\u81ea\u52a8\u673a N \uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00 language \u7684\u786e\u5b9a\u7684\u6709\u7a77\u81ea\u52a8\u673a D\uff0c\u5bf9\u4efb\u4f55\u786e\u5b9a\u7684\u6709\u7a77\u81ea\u52a8\u673a D \uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00 language \u7684\u975e\u786e\u5b9a\u7684\u6709\u7a77\u81ea\u52a8\u673a N\u3002</li> <li>\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684 DFA\uff0c\u90fd\u6709\u4e00\u4e2a\u542b\u6709\u6700\u5c11\u91cf\u72b6\u6001\u7684\u7b49\u4ef7\u7684 DFA\uff0c\u800c\u4e14\u8fd9\u4e2a\u6700\u5c0f\u72b6\u6001\u7684 DFA \u662f\u552f\u4e00\u7684\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#regex-nfa-dfa","title":"Regex -&gt; NFA -&gt; DFA","text":"<p>\u5982\u679c\u4f60\u7684\u76f4\u89c9\u8db3\u591f\u597d\uff0c\u6216\u8005\u6709\u76f8\u5173\u7684\u77e5\u8bc6\u50a8\u5907\uff0c\u4f60\u53ef\u4ee5\u770b\u51fa\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528\u6709\u7a77\u81ea\u52a8\u673a\u6765\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4f7f\u7528 McNaughton-Yamada-Thompson \u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Regex \u8f6c\u5316\u4e3a NFA\u3002\u8fd9\u4e2a\u7b97\u6cd5\u7684\u601d\u8def\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5c06NFA \u8f6c\u5316\u4e3a DFA\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b50\u96c6\u6784\u9020\u7b97\u6cd5\u3002\u9996\u5148\u4e86\u89e3\u4e09\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff08\u96c6\u5408\uff09\uff0c\u5728\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\u4f1a\u628a\u4ed6\u4eec\u5f53\u505a\u51fd\u6570\u3002</p> <ul> <li>\u72b6\u6001\u7684 <code>\u03b5-closure(s)</code>\u3002\u7531\u4e00\u4e2a\u72b6\u6001 s \u51fa\u53d1\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u82e5\u5e72\u4e2a <code>\u03b5</code> \u8f6c\u6362\u80fd\u5230\u8fbe\u7684\u72b6\u6001\u7684 NFA \u72b6\u6001\u96c6\u5408\u3002</li> <li>\u72b6\u6001\u96c6\u5408\u7684 <code>\u03b5-closure(T)</code>\u3002\u4ece \u96c6\u5408 T \u4e2d\u7684 \u67d0\u4e00\u4e2a\u72b6\u6001\u51fa\u53d1\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u82e5\u5e72\u4e2a <code>\u03b5</code> \u8f6c\u6362\u80fd\u5230\u8fbe\u7684\u72b6\u6001\u7684 NFA \u72b6\u6001\u96c6\u5408\u3002</li> <li><code>move(T, a)</code>\u3002\u4ece\u96c6\u5408 T \u4e2d\u7684\u67d0\u4e2a\u72b6\u6001\u51fa\u53d1\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>a</code> \u8f6c\u6362\u80fd\u591f\u5230\u8fbe\u7684 NFA \u72b6\u6001\u96c6\u5408\u3002</li> </ul> <p>\u7136\u540e\u662f\u6784\u9020 DFA \u72b6\u6001\u8f6c\u6362\u56fe\u3002DFA \u72b6\u6001\u96c6\u5408\uff0c\u8bb0\u505a <code>Dstates</code>\uff08\u4e5f\u5c31\u662f\u56fe\u7684\u70b9\uff09\uff0cDFA \u72b6\u6001\u8f6c\u6362\u5173\u7cfb\uff0c\u8bb0\u505a <code>Dtran</code>\uff08\u4e5f\u5c31\u662f\u56fe\u7684\u8fb9\uff09\u3002\u4e0b\u9762\u662f\u8be5\u7b97\u6cd5\u7684 Rust \u4f2a\u4ee3\u7801\u3002</p> <pre><code>let Dtran = map!();\nlet Dstates = set!(\u03b5_closure(start),);\nlet untag = deque!(\u03b5_closure(start),);\nwhile !untag.is_empty() {\n  let T = untag.pop_front();\n  for symbol in alphabet {\n      let U = \u03b5_closure(move(T,symbol));\n      if Dstate.insert(U) {  // DFA\u589e\u52a0\u4e86\u4e00\u4e2a\u72b6\u6001\n          untag.push_back(U);\n      }\n      Dtran.insert( (T,U) ) = a; // \u8868\u793a T ---a--&gt; U\n  }\n}\n//  \u56e0\u4e3a\u5f53\u524d\u72b6\u6001 + \u8f93\u5165\u5b57\u7b26\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u5373\u4f7f\u5728 NFA \u4e2d\u6ca1\u6709\u5bf9\u5e94\u7684\u8f93\u5165\uff08\u5373\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u7a7a\u96c6\uff09\uff0cDFA \u4e2d\u4e5f\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a\u72b6\u6001\u6765\u8868\u793a\u8fd9\u4e2a\u7a7a\u72b6\u6001\u3002\n</code></pre> <p>DFA\u72b6\u6001\u6700\u5c0f\u5316\uff1a\u753b\u51faDFA\u72b6\u6001\u8f6c\u79fb\u8868\u540e\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5728\u4efb\u610f\u76f8\u540c\u8f93\u5165\u4e0b\u4ea7\u751f\u76f8\u540c\u8f93\u51fa\u7684\u72b6\u6001\u8fdb\u884c\u5408\u5e76\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#syntax-analysis","title":"Syntax Analysis","text":"<p>\u8bed\u6cd5\u5206\u6790\uff08Syntax Analysis\uff09 \u4ece \u8bcd\u6cd5\u5206\u6790 \u83b7\u5f97\u4e00\u4e2a Token Stream\u3002\u8bed\u6cd5\u5206\u6790\u5668\u7684\u5de5\u4f5c\u662f\u6839\u636e Token Stream \u6784\u9020\u51fa\u4e00\u4e2a\u8bed\u6cd5\u5206\u6790\u6811\uff0c\u5c06\u5b83\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u7684\u5176\u4ed6\u90e8\u5206\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8bed\u6cd5\u5206\u6790\u5668\u5927\u81f4\u5206\u4e3a\u901a\u7528\u7684\u3001\u81ea\u9876\u5411\u4e0b\u7684\u548c\u81ea\u5e95\u5411\u4e0a\u7684\uff0c\u800c\u901a\u7528\u7684\u56e0\u4e3a\u6548\u7387\u592a\u4f4e\u4e0d\u88ab\u4f7f\u7528\uff0c\u4e0b\u9762\u4f1a\u4ecb\u7ecd\u540e\u4e8c\u8005\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u6790 \u548c \u81ea\u5e95\u5411\u4e0a\u5206\u6790\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#context-free-grammar","title":"Context Free Grammar","text":"<p>\u9996\u5148\u4e86\u89e3 \u6587\u6cd5 Grammar \u7684\u6982\u5ff5\u3002\u6587\u6cd5\u662f\u5f62\u5f0f\u8bed\u8a00\u4e2d\u5b57\u7b26\u4e32\u7684\u4e00\u5957\u4ea7\u751f\u5f0f\u89c4\u5219\u3002\u8fd9\u4e9b\u89c4\u5219\u63cf\u8ff0\u4e86\u5982\u4f55\u7528\u8bed\u8a00\u7684\u5b57\u6bcd\u8868\u751f\u6210\u7b26\u5408\u8bed\u6cd5\u7684\u6709\u6548\u7684\u5b57\u7b26\u4e32\u3002\u6587\u6cd5\u4e0d\u63cf\u8ff0\u5b57\u7b26\u4e32\u7684\u542b\u4e49\uff0c\u4e5f\u4e0d\u63cf\u8ff0\u5728\u4efb\u4f55\u4e0a\u4e0b\u6587\u4e2d\u53ef\u4ee5\u7528\u5b83\u4eec\u505a\u4ec0\u4e48\u2014\u2014\u53ea\u63cf\u8ff0\u5b83\u4eec\u7684\u5f62\u5f0f\u3002</p> <p>Grammar: <code>G=(Vt,Vn,P,S)</code>\u3002\u610f\u601d\u662f\u8bf4\uff0c\u4e00\u4e2a Grammar \u7531\u4e0b\u9762\u56db\u4e2a\u5143\u7d20\u7ec4\u6210\uff1a</p> <ol> <li>\u4e00\u4e2a \u7ec8\u7ed3\u7b26\u53f7 (terminal symbol)\u96c6\u5408\uff0c\u6709\u65f6\u4e5f\u53eb\u8bcd\u6cd5\u5355\u5143 (token)\u3002</li> <li>\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7 (nonterminal symbol)\u96c6\u5408\uff0c\u53c8\u662f\u4e5f\u53eb\u8bed\u6cd5\u53d8\u91cf\u3002\u6bcf\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u8868\u793a\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7\u4e32\u7684\u96c6\u5408\u3002</li> <li>\u4e00\u4e2a\u4ea7\u751f\u5f0f (production) \u96c6\u5408\u3002</li> <li>\u6307\u5b9a\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u4f4d \u5f00\u59cb\u7b26\u53f7 (start symbol)\u3002\u5f00\u59cb\u7b26\u53f7\u8868\u793a\u7684\u662f\u8be5 Grammar \u4e2d\u6700\u5927\u7684\u8bed\u6cd5\u6210\u5206\u3002</li> </ol> <p>\u4f8b\u5982\uff1a<code>stmt -&gt; if (expr) stmt else stmt</code> \u8fd9\u6837\u7684\u89c4\u5219\u53eb\u505a production\uff0c<code>if</code> \u548c <code>()</code> \u88ab\u79f0\u4e3a terminal symbol\uff0c<code>expr</code> \u548c <code>stmt</code> \u8fd9\u6837\u7684\u53d8\u91cf\u8868\u793a\u7ec8\u7ed3\u7b26\u53f7\u7684\u5e8f\u5217\uff0c\u79f0\u4e3a nonterminal symbol\u3002<code>stmt</code> \u5c31\u662f start symbol\u3002</p> <p>\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 Context Free Grammar \u6307\u7684\u662f \u4ea7\u751f\u5f0f\u5de6\u4fa7\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u7b26\u53f7\uff0c\u5e76\u4e14\u8be5\u7b26\u53f7\u4e3a\u975e\u7ec8\u7ed3\u7b26\u53f7\u7684\u6587\u6cd5\u3002\u8fd9\u4e2a\u9650\u5236\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u4e00\u5171\u6709\u56db\u79cd\u6587\u6cd5\uff0c\u9010\u7ea7\u9650\u5236\u3002\u5bf9\u4e8e\u03b1\u2192\u03b2\uff1a</p> <ul> <li>0 \u578b\u6587\u6cd5\uff1a\u03b1\u4e2d\u81f3\u5c11\u5305\u542b 1 \u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>1 \u578b\u6587\u6cd5\uff08CSG \u4e0a\u4e0b\u6587\u6709\u5173\uff09 \uff1a\uff5c\u03b1\uff5c\u2264\uff5c\u03b2\uff5c</li> <li>2 \u578b\u6587\u6cd5\uff08CFG \u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff09 \uff1a\u03b1 \u2208 \u975e\u7ec8\u7ed3\u7b26</li> <li>3 \u578b\u6587\u6cd5\uff08RG \u6b63\u5219\uff09\uff1aA\u2192wB \u6216 A\u2192w (A\u2192Bw \u6216 A\u2192w) A/B \u4ee3\u8868\u975e\u7ec8\u7ed3\u7b26</li> </ul> <p>\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u8bed\u6cd5\u901a\u5e38\u662f CFG\uff0c\u901a\u5e38\u7528 RG \u5339\u914d Token\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u9700\u8981\u4e86\u89e3\uff1a</p> <ul> <li>\u63a8\u5bfc\uff08Derivation\uff09\uff1a\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u628a production \u7684\u53f3\u90e8\u66ff\u6362\u6210\u5de6\u90e8\uff0c\u53ea\u66ff\u6362 1 \u6b21\u5c31\u662f directly derive\u3002\u8bb0\u505a \\(\\Rightarrow^0\\)\uff0c\u82e5\u5e72\u6b21\u66ff\u6362\u8bb0\u505a \\(\\Rightarrow^*\\)\u3002\u76f8\u53cd\u7684\u8fc7\u7a0b\u5c31\u662f \u5f52\u7ea6 Reduction\u3002parsing tree \u662f\u63a8\u5bfc\u7684\u56fe\u5f62\u5316\u8868\u793a\u3002</li> <li>\u8bed\u8a00\uff08Language\uff09\uff1a\u7531 grammar <code>G</code> \u7684 start symbol <code>S</code> \u63a8\u5bfc\u51fa\u7684\u6240\u6709 sentence \u6784\u6210\u7684\u96c6\u5408\u79f0\u4e3a grammar<code>G</code> \u751f\u6210\u7684 language\uff0c\u8bb0\u4e3a <code>L(G)</code>\u3002<code>L(G) = {w /S =&gt;*, w \u2208 Vt*}</code>\u3002\u8981\u8bc1\u660e\u4e00\u4e2a Language \u548c Grammar \u5bf9\u5e94\uff0c\u9700\u8981\u8bc1\u660e Grammar \u6240\u6709\u80fd\u4ea7\u751f\u7684 sentence \u90fd\u5c5e\u4e8e Language\uff0cLanguage \u4e2d\u6240\u6709\u7684 string \u90fd\u80fd\u88ab Grammar \u4ea7\u751f\u3002</li> <li>\u4e8c\u4e49\u6027\uff08Ambiguous\uff09: \u82e5 grammar \u5bf9\u540c\u4e00 sentence \u53ef\u4ee5\u4ea7\u751f\u4e0d\u6b62\u4e00\u68f5 parsing tree\uff0c\u5219\u79f0 G \u662f ambiguous\u3002\u8981\u6539\u5199\u4e8c\u4e49\u6027\u6587\u6cd5\u4e3a\u975e\u4e8c\u4e49\u6027\u6587\u6cd5</li> <li>\u5212\u5206\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027</li> <li>\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26\uff0c\u589e\u52a0\u4e00\u4e2a\u5b50\u7ed3\u6784\u5e76\u63d0\u9ad8\u4e00\u7ea7\u4f18\u5148\u7ea7\uff08\u4f18\u5148\u7ea7\u7684\u5224\u65ad\uff09</li> <li>\u9012\u5f52\u975e\u7ec8\u7ed3\u7b26\u5728\u7ec8\u7ed3\u7b26\u5de6\u8fb9\uff0c\u8fd0\u7b97\u5177\u6709\u5de6\u7ed3\u5408\u6027\uff0c\u5426\u5219\u5177\u6709\u53f3\u7ed3\u5408\u6027\u3002</li> </ul> <p>\u56de\u987e\u4e00\u4e0b\uff0cSyntax Analyzer \u7684\u4f5c\u7528\u662f\u751f\u6210 AST \u6216 Parsing Tree\u3002\u5176\u5b9e parsing tree \u662f\u63a8\u5bfc\u7684\u56fe\u5f62\u5316\u8868\u793a\u3002AST \u5219\u662f\u7cbe\u7b80\u7684 Parsing Tree\uff0c\u4e00\u822c\u6211\u4eec\u751f\u4ea7 AST\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u624b\u5934\u6709\u4e00\u4e2a Token Stream\u3002\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u63a8\u5bfc\u5462\u53bb\u6784\u5efa parse tree \u5462\uff1f\u4e3b\u8981\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\u6362\u54ea\u4e2a nonterminal symbol? \u7528\u54ea\u6761 production?\u3002\u5e38\u7528\u7684\u6709\u4e24\u79cd\u529e\u6cd5\uff1a</p> <ol> <li>\u5728 Left-most Derivation \u6700\u5de6\u63a8\u5bfc\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u6bcf\u4e2a\u53e5\u578b\u7684\u6700\u5de6 nonterminal symbol \u8fdb\u884c\u66ff\u6362\u3002\u8fd9\u4e2a\u548c top-down parsing \u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u4ece Parse Tree \u7684\u9876\u5411\u4e0b\u5206\u6790\u3002\u5de6\u53e5\u578b (left sentential form)\u662f\u6307\u63a8\u5bfc\u81f3\u8be5\u53e5\u5b50\u7684\u5168\u90e8\u5de6\u63a8\u5bfc\u3002</li> <li>\u5728 Right-most Derivation \u6700\u53f3\u63a8\u5bfc\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u6bcf\u4e2a\u53e5\u578b\u7684\u6700\u53f3 nonterminal symbol \u8fdb\u884c\u66ff\u6362\uff0c\u6700\u53f3\u63a8\u5bfc\u4e5f\u88ab\u79f0\u4e3a \u89c4\u8303\u63a8\u5bfc\u3002\u8fd9\u4e2a\u548c down-top parsing \u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u4ece Token Stream \u5411\u4e0a\u6784\u9020 Parse Tree\u3002\u53f3\u53e5\u578b (right sentential form) \u662f\u6307\u63a8\u5bfc\u81f3\u8be5\u53e5\u5b50\u7684\u5168\u90e8\u53f3\u63a8\u5bfc\u3002</li> </ol>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#todo","title":"TODO","text":"","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/","title":"Static Program Analysis","text":"<p>\u9759\u6001\u7a0b\u5e8f\u5206\u6790\uff08Static program analysis\uff09\u662f\u6307\u5728\u4e0d\u8fd0\u884c\u7a0b\u5e8f\u7684\u6761\u4ef6\u4e0b\uff0c\u8fdb\u884c\u7a0b\u5e8f\u5206\u6790\u7684\u65b9\u6cd5\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cindex \u88ab\u5e7f\u6cdb\u7684\u7528\u4e8e\u7a0b\u5e8f\u5206\u6790\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#control-flow-analysis","title":"Control Flow Analysis","text":"","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#data-flow-analysis","title":"Data Flow Analysis","text":"<p>Taint Analysis\u53ef\u4ee5\u8ba4\u4e3a\u662fData Flow Analysis\u7684\u4e00\u79cd\u3002\u5b83\u53ea\u5173\u5fc3\u6c61\u70b9\u6570\u636e\u7684\u4f20\u64ad\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#pointer-analysis","title":"Pointer Analysis","text":"","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#pattern-matching","title":"Pattern Matching","text":"<p>\u6839\u636e\u5b9a\u4e49\uff0c\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u6e90\u4ee3\u7801\u5339\u914d\u6709\u95ee\u9898\u7684\u8bed\u53e5\uff0c\u4e5f\u7b97\u662f\u9759\u6001\u5206\u6790\u3002\u4e0d\u8fc7Pattern Matching\u4e0d\u4e00\u5b9a\u8981\u5728\u6e90\u4ee3\u7801\u4e0a\u505a\uff0c\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u3001AST\u3001\u4e2d\u95f4\u4ee3\u7801\u3001Binary\u7b49\u4efb\u610f\u5730\u65b9\u5b8c\u6210\u3002</p> <p>Pattern Matching \u663e\u7136\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u5c40\u9650\u6027\u4e5f\u5f88\u5927\uff0c\u4ed6\u5b8c\u5168\u4e0d\u8003\u8651\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u548c\u6570\u636e\u6d41\u3002\u53ef\u4ee5\u7ed3\u5408\u5176\u4ed6\u9759\u6001\u5206\u6790\u7684\u65b9\u6cd5\u4e00\u8d77\u4f7f\u7528\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#abstract-interpretation","title":"Abstract Interpretation","text":"<p>Abstract interpretation\uff08\u62bd\u8c61\u89e3\u91ca\uff09 is a technique to approximate the execution of a given computer program upon an abstract domain without concrete inputs. \uff08\u4f8b\u5982\uff0c\u8f93\u5165\u662f\u4e00\u4e2aint\uff0c\u7ed3\u5408\u5177\u4f53\u5206\u6790\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u7684\u503c\u9650\u5236\u5728{+, -, 0}\u7684domain\uff0c\u6216\u8005\u662f{constant, bottom} domain\uff09</p> <p>\u62bd\u8c61\u89e3\u91ca\u6280\u672f\u7684\u4e3b\u8981\u601d\u60f3\u662f\uff1a</p> <ol> <li>\u62bd\u8c61\u5316(Abstraction): \u5c06\u5177\u4f53\u7684\u7a0b\u5e8f\u72b6\u6001(\u5982\u53d8\u91cf\u503c\u3001\u63a7\u5236\u6d41\u7b49)\u6620\u5c04\u5230\u4e00\u4e2a\u62bd\u8c61\u7684\u6709\u9650\u57df\u4e0a\u3002\u8fd9\u4e2a\u62bd\u8c61\u57df\u6bd4\u5b9e\u9645\u7684\u5177\u4f53\u57df\u8981\u5c0f,\u66f4\u6613\u4e8e\u5206\u6790\u548c\u64cd\u4f5c\u3002</li> <li>\u89e3\u91ca(Interpretation): \u5728\u62bd\u8c61\u57df\u4e0a\u6267\u884c\u8bed\u4e49\u89c4\u5219,\u6a21\u62df\u7a0b\u5e8f\u5728\u8fd9\u4e2a\u62bd\u8c61\u57df\u4e0a\u6267\u884c\u65f6\u7684\u884c\u4e3a,\u4ece\u800c\u63a8\u5bfc\u7a0b\u5e8f\u5728\u8fd9\u4e2a\u62bd\u8c61\u57df\u4e0a\u7684\u8bed\u4e49\u6027\u8d28\u3002</li> <li>\u6536\u655b(Convergence): \u901a\u8fc7\u8fed\u4ee3\u65b9\u5f0f\u5728\u62bd\u8c61\u57df\u4e0a\u6267\u884c\u8bed\u4e49\u89c4\u5219,\u76f4\u5230\u8fbe\u5230\u4e0d\u52a8\u70b9(fixpoint),\u5373\u4e0d\u518d\u53d1\u751f\u72b6\u6001\u53d8\u5316\u3002\u5728\u8fd9\u4e2a\u4e0d\u52a8\u70b9\u4e0a,\u83b7\u5f97\u7a0b\u5e8f\u5728\u8be5\u62bd\u8c61\u57df\u4e0a\u7684\u6700\u7ec8\u8bed\u4e49\u6027\u8d28\u3002</li> </ol> <p>\u62bd\u8c61\u89e3\u91ca\u7684\u4f18\u52bf\u5728\u4e8e,\u5b83\u53ef\u4ee5\u5728\u4e0d\u6267\u884c\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b,\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u9759\u6001\u5206\u6790\u548c\u9a8c\u8bc1,\u4ece\u800c\u53d1\u73b0\u6f5c\u5728\u7684\u9519\u8bef\u6216\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\u901a\u8fc7\u9009\u62e9\u4e0d\u540c\u7c92\u5ea6\u7684\u62bd\u8c61\u57df,\u53ef\u4ee5\u5728\u7cbe\u5ea6\u548c\u6548\u7387\u4e4b\u95f4\u6743\u8861\u3002</p> <p>\u5177\u4f53\u7684\u89e3\u91ca\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6587\u7ae0\uff1ahttps://wiki.mozilla.org/Abstract_Interpretation \u4ed6\u91cc\u9762\u8fd8\u63d0\u4f9b\u4e86\u5e38\u91cf\u4f20\u64ad\u7684\u4f8b\u5b50\u3002\u770b\u5b8c\u5b83\u4e4b\u540e #TODO \uff0c\u6211\u4eec\u518d\u56de\u987e\u4e0a\u9762\u7684\u4e09\u4e2a\u4e3b\u8981\u601d\u60f3\uff1a</p> <ol> <li>Abstraction (Lattice)<ul> <li>\u22a4, called \"top\" (remember the T for top), the set of all integer values</li> <li>1, 2, ..., the singleton sets of integer values</li> <li>\u22a5, called \"bottom\", the empty set</li> <li></li> <li>Merging.: least upper bound (lub). e.g. \\(\\(1\\ lub\\ -1 = NZ\\)\\)</li> </ul> </li> <li>Interpretation: \u5c06\u539f\u672c\u7a0b\u5e8f\u8bed\u53e5\u7684\u8bed\u4e49\u6620\u5c04\u4e3a\u683c\u7684\u8fd0\u7b97\u3002 e.g. <code>x:= a + 1</code> \u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f <code>const+1 if a=const else NZ if a=NZ else T</code></li> <li>Convergence: \u4e0d\u65ad\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fbe\u5230\u4e0d\u52a8\u70b9\u3002\u7531\u4e8e\u8fd0\u7b97\u90fd\u662f\u5355\u8c03\u7684\uff0c\u4e00\u5b9a\u4f1a\u6536\u655b\u3002</li> </ol> <p>\u5728\u5357\u4eac\u5927\u5b66\u7684\u8f6f\u4ef6\u5206\u6790\u8bfe\u4e0a\uff0c\u674e\u6a3e\u8001\u5e08\u8bb2\u7684\u5206\u6790\u65b9\u6cd5\u5c31\u662f latice abstract interpretation. \u4ed6\u4f7f\u7528\u62bd\u8c61\u89e3\u91ca\u6280\u672f\uff0c\u8bb2\u4e86\u6570\u636e\u6d41\u5206\u6790\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#symbolic-execution","title":"Symbolic Execution","text":"<p>\u7b26\u53f7\u6267\u884c\u7684\u5173\u952e\u601d\u60f3\u5c31\u662f\uff0c\u628a\u8f93\u5165\u53d8\u4e3a\u7b26\u53f7\u503c\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8ba1\u7b97\u7684\u8f93\u51fa\u503c\u5c31\u662f\u4e00\u4e2a\u7b26\u53f7\u8f93\u5165\u503c\u7684\u51fd\u6570\u3002\u5728\u9047\u5230\u7a0b\u5e8f\u5206\u652f\u6307\u4ee4\u65f6\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u4e5f\u76f8\u5e94\u5730\u641c\u7d22\u6bcf\u4e2a\u5206\u652f\uff0c\u5206\u652f\u6761\u4ef6\u88ab\u52a0\u5165\u5230\u7b26\u53f7\u6267\u884c\u4fdd\u5b58\u7684\u7a0b\u5e8f\u72b6\u6001\u7684\\(\\pi\\)\u4e2d,\\(\\pi\\)\u8868\u793a\u5f53\u524d\u8def\u5f84\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u5728\u6536\u96c6\u4e86\u8def\u5f84\u7ea6\u675f\u6761\u4ef6\u4e4b\u540e\uff0c\u4f7f\u7528\u7ea6\u675f\u6c42\u89e3\u5668\u6765\u9a8c\u8bc1\u7ea6\u675f\u7684\u53ef\u89e3\u6027\uff0c\u4ee5\u786e\u5b9a\u8be5\u8def\u5f84\u662f\u5426\u53ef\u8fbe\u3002\u82e5\u8be5\u8def\u5f84\u7ea6\u675f\u53ef\u89e3\uff0c\u5219\u8bf4\u660e\u8be5\u8def\u5f84\u662f\u53ef\u8fbe\u7684\uff1b\u53cd\u4e4b\uff0c\u5219\u8bf4\u660e\u8be5\u8def\u5f84\u4e0d\u53ef\u8fbe\uff0c\u7ed3\u675f\u5bf9\u8be5\u8def\u5f84\u7684\u5206\u6790\u3002</p> <p>\u52a8\u6001\u7b26\u53f7\u6267\u884c \u9009\u62e9\u6027\u7b26\u53f7\u6267\u884c \u6df7\u5408\u6267\u884c(concolic execution)</p> <p>\u7531\u4e8e\u9700\u8981\u4f7f\u7528\u7ea6\u675f\u6c42\u89e3\uff0c\u800c\u4e14\u5bf9\u5faa\u73af\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u7b26\u53f7\u6267\u884c\u65b9\u6cd5\u6bd4\u8f83\u96be\u4ee5\u5927\u89c4\u6a21\u5e94\u7528\u3002 \u7ecf\u5178\u7684\u7b26\u53f7\u6267\u884c\u5de5\u5177\u5982KLEE\uff0c\u5df2\u7ecf\u88ab\u52a0\u5165LLVM\u7684\u5b98\u65b9\u9879\u76ee\u5217\u8868\u4e2d\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#sat-smt","title":"\u7ea6\u675f\u6c42\u89e3\uff0c SAT &amp; SMT","text":"<p>SAT Problem: Given a well-formed formula \u03b1 in propositional logic, decide whether there exists a satisfying solution for \u03b1.</p> <p>\u4f8b\u5982\uff0c\\(\\alpha(x,y) = x \\wedge  y\\) SAT\u5224\u5b9a\u5b58\u5728\u89e3x=y=1\u3002\u8fd9\u4e2a\u95ee\u9898\u662f NP Complete\u7684\u3002SMT\u5728SAT\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b[\u4e00\u9636\u7406\u8bba]\u7684\u5185\u5bb9\u3002\u77e5\u4e4e\u4e0a\u6709\u8fd9\u6837\u4e00\u4e2a\u56de\u7b54\uff1a</p> <p>SMT\u5c31\u662fSAT\uff08\u5e03\u5c14\u8868\u8fbe\u5f0f\u53ef\u6ee1\u8db3\u6027\u7406\u8bba\uff09\u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u57fa\u7840\u4e0a\u62d3\u5c55\u5230\u5176\u4ed6\u7406\u8bba\uff0c\u6bd4\u5982\u52a0\u4e0a\u5b9e\u6570\u7406\u8bba\uff0c\u95ee\u4f60 x^2+y^2=-1 \u662f\u5426\u53ef\u6ee1\u8db3\u3002</p> <p>Z3\u662f\u4e00\u4e2a\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u53ef\u6ee1\u8db3\u6027\u6a21\u7406\u8bba\uff08Satisfiability Modulo Theories\uff0cSMT\uff09\u7684\u7ea6\u675f\u6c42\u89e3\u5668\u3002yices2\u4e5f\u662f\u7ea6\u675f\u6c42\u89e3\u5668\u3002SMT-LIB \u683c\u5f0f\u662f\u591a\u4e2a SMT \u6c42\u89e3\u5668\u4f7f\u7528\u7684\u793e\u533a\u6807\u51c6\u3002\u5b83\u4f7f\u7528\u7c7b\u4f3c LISP \u7684\u8bed\u6cd5\uff0c\u4f7f\u5de5\u5177\u53ef\u4ee5\u8f7b\u677e\u5730\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6a21\u578b\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#formal-verification","title":"Formal Verification","text":"<p>\u5f62\u5f0f\u5316\u9a8c\u8bc1\u76843\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a</p> <ul> <li>Specification\uff1a\u7a0b\u5e8f\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28</li> <li>Modeling\uff1a\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u7a0b\u5e8f</li> <li>Verification\uff1a\u5982\u4f55\u68c0\u67e5\u7a0b\u5e8f\u662f\u5426\u6ee1\u8db3\u76f8\u5173\u6027\u8d28</li> <li>\u4ea4\u4e92\u5f0f\u9a8c\u8bc1\uff1aCoq</li> <li>\u81ea\u52a8\u5316\u9a8c\u8bc1\uff1aSeahorn\uff0cCPAChecker</li> <li>Auto-active\u9a8c\u8bc1\uff1aWhy3\uff0cViper\uff0cDafny</li> </ul> <p>\u7a0b\u5e8f\u9a8c\u8bc1\u7684\u6838\u5fc3\u662f\u970d\u5c14\u903b\u8f91\u3002\u970d\u5c14\u903b\u8f91\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u970d\u5c14\u4e09\u5143\u7ec4\uff0c\u4e00\u822c\u8bb0\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> \\[\\{P\\} c \\{Q\\}\\] <p>\u5176\u4e2d\uff0c\\(P\\)\u548c\\(Q\\)\u662f\u4e00\u9636\u903b\u8f91\u516c\u5f0f\uff0c\u5206\u522b\u8868\u793a\u524d\u7f6e\u6761\u4ef6\uff08Pre-Condition\uff09\u548c\u540e\u7f6e\u6761\u4ef6\uff08Post-Condition\uff09\u3002\u00a0\\(c\\)\u8868\u793a\u4e00\u6bb5\u7a0b\u5e8f\u6e90\u4ee3\u7801\u3002 \u970d\u5c14\u4e09\u5143\u7ec4\u7684\u542b\u4e49\u662f\uff0c\u5047\u5b9a\u524d\u7f6e\u6761\u4ef6\\(P\\)\u662f\u6709\u6548\u7684\uff0c\u90a3\u4e48\u5728\u6267\u884c\u5b8c\u7a0b\u5e8f\\(c\\)\u540e\uff0c\u540e\u7f6e\u6761\u4ef6\\(Q\\)\u5c06\u4f1a\u662f\u6709\u6548\u7684\u3002</p> <p>\u5982\u4f55\u5904\u7406\u5faa\u73af\uff0c\u6211\u4eec\u9700\u8981\u627e\u5faa\u73af\u4e0d\u53d8\u5f0f\uff08Loop Invariant\uff09\u3002\u81ea\u52a8\u63a8\u5bfc\u5faa\u73af\u4e0d\u53d8\u5f0f\u662f\u81ea\u52a8\u7a0b\u5e8f\u9a8c\u8bc1\u7684\u6838\u5fc3\u4efb\u52a1\u3002\u7ea6\u675f\u6c42\u89e3\u63a8\u5bfc\u5faa\u73af\u4e0d\u53d8\u5f0f\u3002</p> <p>\u6a21\u578b\u68c0\u6d4b\uff08Model Checking\uff09\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u5f62\u5f0f\u5316\u5206\u6790\u65b9\u6cd5\u3002 \u5b83\u901a\u8fc7\u6784\u9020\u8f6f\u4ef6\u7cfb\u7edf\u7684\u62bd\u8c61\u6a21\u578b\uff0c\u6765\u68c0\u6d4b\u5176\u662f\u5426\u6ee1\u8db3\u8981\u6c42\u7684\u6027\u8d28\u3002 \u6a21\u578b\u68c0\u6d4b\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u7cfb\u7edf\u6a21\u578b\u7684\u5efa\u7acb\u9700\u8981\u9886\u57df\u4e13\u5bb6\u7684\u53c2\u4e0e\u3002 \u5bfb\u627e\u6070\u5f53\u7684\u62bd\u8c61\u5c42\u6b21\uff0c\u4ece\u800c\u8db3\u4ee5\u8bc1\u660e\u7cfb\u7edf\u7684\u7279\u5b9a\u5c5e\u6027\uff0c\u662f\u6a21\u578b\u68c0\u6d4b\u7684\u4e00\u5927\u96be\u70b9\u3002 \u8fc7\u5206\u7684\u62bd\u8c61\u5c06\u5bfc\u81f4\u5c5e\u6027\u65e0\u6cd5\u8bc1\u660e\uff1b\u800c\u4e0d\u8db3\u7684\u62bd\u8c61\u53c8\u5c06\u5bfc\u81f4\u592a\u591a\u5c5e\u6027\u65e0\u5173\u7684\u5197\u4f59\u7ec6\u8282\uff0c\u4ece\u800c\u5f15\u53d1\u72b6\u6001\u7206\u70b8\uff0c\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u5f97\u5230\u7ed3\u679c\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/#ai-based","title":"AI Based","text":"<p>\u73b0\u5728\u8bba\u6587\u91cc\u4f1a\u7528AI\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\u3002\u4e0d\u505a\u8bc4\u4ef7\u3002</p> <p>Reference</p> <ol> <li>https://wiki.mozilla.org/Abstract_Interpretation</li> <li>\u975e\u5e38\u597d\u7684\u5f62\u5f0f\u5316\u9a8c\u8bc1\u5165\u95e8\u8d44\u6599\uff1ahttps://www.zhihu.com/column/c_1311359270597419008</li> <li>hand book of model checking</li> </ol>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/#_2","title":"\u5c42\u6b21\u6a21\u578b","text":"<ul> <li>Application Layer: HTTP</li> <li>Transport Layer: TCP, UDP, </li> <li>Internet Layer: IP</li> <li>Link Layer: Link Layer</li> </ul> <ul> <li>Common: Congestion Control and Flow Control</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/#_3","title":"\u6027\u80fd\u8861\u91cf\u6307\u6807","text":"<p>\u5e26\u5bbd\uff08Bandwidth\uff09\u3002 \u672c\u6765\u8868\u793a\u901a\u4fe1\u7ebf\u8def\u5141\u8bb8\u901a\u8fc7\u7684\u4fe1\u53f7\u9891\u5e26\u8303\u56f4\uff0c\u5355\u4f4d\u662f\u8d6b\u5179\uff08Hz\uff09\u3002\u800c\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\uff0c\u5e26\u5bbd\u8868\u793a\u7f51\u7edc\u7684\u901a\u4fe1\u7ebf\u8def\u6240\u80fd\u4f20\u9001\u6570\u636e\u7684\u80fd\u529b\uff0c\u662f\u6570\u5b57\u4fe1\u9053\u6240\u80fd\u4f20\u9001\u7684 \" \u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387 \" \u7684\u540c\u4e49\u8bed\uff0c\u5355\u4f4d\u662f\u6bd4\u7279/\u79d2\uff08b/s\uff09\u3002</p> <p>\u541e\u5410\u91cf\uff08Throughput\uff09\u3002\u6307\u5355\u4f4d\u65f6\u95f4\u5185\u901a\u8fc7\u67d0\u4e2a\u7f51\u7edc\uff08\u6216\u4fe1\u9053\u3001\u63a5\u53e3\uff09\u7684\u6570\u636e\u91cf\u3002\u541e\u5410\u91cf\u53d7\u7f51\u7edc\u5e26\u5bbd\u6216\u7f51\u7edc\u989d\u5b9a\u901f\u7387\u7684\u9650\u5236\u3002\u5355\u4f4d\u4e5f\u662f\u6bd4\u7279/\u79d2\uff08b/s\uff09\u3002</p> <p>Throughput\u00a0\u662f\u6307\u7f51\u7edc\u4e2d\u4e3b\u673a\uff08server \u548c client\uff09\u4e4b\u95f4\u7684\u00a0\u5b9e\u9645\u00a0\u6570\u636e\u4f20\u8f93\u901f\u7387\uff0c\u5373\u5355\u4f4d\u65f6\u95f4\u5185\u5b9e\u9645\u4f20\u8f93\u7684\u6570\u636e\u91cf\uff0c\u5e38\u7528\u7684\u5355\u4f4d\u6709 Kbps,Mbps\u3002\u800c\u00a0Bandwidth\u00a0\u662f\u6307\u7f51\u7edc\u7684\u00a0\u6700\u5927\u00a0\u6570\u636e\u4f20\u8f93\u901f\u7387\uff0c\u5e38\u7528\u5355\u4f4d\u4e5f\u662f Kbps,Mbps\u3002</p> <p>\u65f6\u5ef6\uff08Delay\uff09\u3002\u6307\u6570\u636e\uff08\u4e00\u4e2a\u62a5\u6587\u6216\u5206\u7ec4\uff09\u4ece\u7f51\u7edc\uff08\u6216\u94fe\u8def\uff09\u7684\u4e00\u7aef\u4f20\u9001\u5230\u53e6\u4e00\u7aef\u6240\u9700\u8981\u7684\u603b\u65f6\u95f4\u3002\u5b83\u7531 4 \u90e8\u5206\u6784\u6210\u2236\u53d1\u9001\u65f6\u5ef6\u3001\u4f20\u64ad\u65f6\u5ef6\u3001\u5904\u7406\u65f6\u5ef6\u548c\u6392\u961f\u65f6\u5ef6\u3002</p> <ul> <li>\u53d1\u9001\u65f6\u5ef6 propagation delay\u3002\u7ed3\u70b9\u5c06\u5206\u7ec4\u7684\u6240\u6709\u6bd4\u7279\u63a8\u5411\uff08\u4f20\u8f93\uff09\u94fe\u8def\u6240\u9700\u7684\u65f6\u95f4\uff0c\u5373\u4ece\u53d1\u9001\u5206\u7ec4\u7684\u7b2c\u4e00\u4e2a\u6bd4\u7279\u7b97\u8d77\uff0c\u5230\u8be5\u5206\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u6bd4\u7279\u53d1\u9001\u5b8c\u6bd5\u6240\u9700\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u4e5f\u79f0\u4f20\u8f93\u65f6\u5ef6\u3002\u8ba1\u7b97\u516c\u5f0f\u4e3a\\(\\(\u53d1\u9001\u65f6\u5ef6=\u5206\u7ec4\u957f\u5ea6/\u4fe1\u9053\u5bbd\u5ea6\\)\\)\uff0c\u5176\u4e2d\u4fe1\u9053\u5bbd\u5ea6\u662f\u6307\u00a0\u4fe1\u9053\u7684\u6700\u5927\u6570\u636e\u4f20\u8f93\u901f\u7387 maximum data transmission rate\u3002</li> <li>\u4f20\u64ad\u65f6\u5ef6 propagation delay\u3002\u7535\u78c1\u6ce2\u5728\u4fe1\u9053\u4e2d\u4f20\u64ad\u4e00\u5b9a\u7684\u8ddd\u79bb\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5373\u4e00\u4e2a\u6bd4\u7279\u4ece\u94fe\u8def\u7684\u4e00\u7aef\u4f20\u64ad\u5230\u53e6\u4e00\u7aef\u6240\u9700\u7684\u65f6\u95f4\u3002\u8ba1\u7b97\u516c\u5f0f\u4e3a\\(\\(\u4f20\u64ad\u65f6\u5ef6=\u4fe1\u9053\u957f\u5ea6/\u7535\u78c1\u6ce2\u5728\u4fe1\u9053\u4e0a\u7684\u4f20\u64ad\u901f\u7387\\)\\)</li> <li>\u5904\u7406\u65f6\u5ef6\u3002\u6570\u636e\u5728\u4ea4\u6362\u7ed3\u70b9\u4e3a\u5b58\u50a8\u8f6c\u53d1\u800c\u8fdb\u884c\u7684\u4e00\u4e9b\u5fc5\u8981\u7684\u5904\u7406\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5206\u6790\u5206\u7ec4\u7684\u9996\u90e8\u3001\u4ece\u5206\u7ec4\u4e2d\u63d0\u53d6\u6570\u636e\u90e8\u5206\u3001\u8fdb\u884c\u5dee\u9519\u68c0\u9a8c\u6216\u67e5\u627e\u9002\u5f53\u7684\u8def\u7531\u7b49\u3002</li> <li>\u6392\u961f\u65f6\u5ef6\u3002\u5206\u7ec4\u5728\u8fdb\u5165\u8def\u7531\u5668\u540e\u8981\u5148\u5728\u8f93\u5165\u961f\u5217\u4e2d\u6392\u961f\u7b49\u5f85\u5904\u7406\u3002\u8def\u7531\u5668\u786e\u5b9a\u8f6c\u53d1\u7aef\u53e3\u540e\uff0c\u8fd8\u8981\u5728\u8f93\u51fa\u961f\u5217\u4e2d\u6392\u961f\u7b49\u5f85\u8f6c\u53d1\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u6392\u961f\u65f6\u5ef6\u3002\\(\\(\u603b\u65f6\u5ef6=\u53d1\u9001\u65f6\u5ef6+\u4f20\u64ad\u65f6\u5ef6+\u5904\u7406\u65f6\u5ef6+\u6392\u961f\u65f6\u5ef6\\)\\)\u3002\u4e0d\u8fc7\u540e\u4e24\u8005\u4e00\u822c\u4e0d\u8003\u8651\u3002</li> <li>\u65f6\u5ef6\u5e26\u5bbd\u79ef\u3002\u53d1\u9001\u7aef\u53d1\u9001\u7684\u7b2c\u4e00\u4e2a bit \u5373\u5c06\u5230\u8fbe\u7ec8\u70b9\u7684\u65f6\u5019\uff0c\u53d1\u9001\u7aef\u5df2\u7ecf\u53d1\u9001\u4e86\u591a\u5c11\u4e2a bit\u3002</li> <li>\u5f80\u8fd4\u65f6\u5ef6\uff08Round Trip Time\uff0cRTT\uff09\u3002\u6307\u4ece\u53d1\u9001\u7aef\u53d1\u9001\u6570\u636e\u5f00\u59cb\uff0c\u5230\u53d1\u9001\u7aef\u6536\u5230\u00a0\u6765\u81ea\u63a5\u6536\u7aef\u7684\u786e\u8ba4\uff0c\u603b\u5171\u7ecf\u5386\u7684\u65f6\u5ef6\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe\u63a5\u6536\u7aef\u5728\u6536\u5230\u6570\u636e\u4e4b\u540e\u7acb\u5373\u53d1\u9001\u786e\u8ba4\u5e76\u5ffd\u7565\u786e\u8ba4\u5e27\u7684\u957f\u5ea6\u7684\u8bdd\uff0c\\(\\(RTT=\u53d1\u9001\u65f6\u5ef6+\u4f20\u64ad\u65f6\u5ef6\u00d72\\)\\) \u4fe1\u9053\u5229\u7528\u7387\uff08Channel Utilization\uff09\u3002\u6307\u51fa\u67d0\u4e00\u4fe1\u9053\u6709\u767e\u5206\u4e4b\u591a\u5c11\u7684\u65f6\u95f4\u662f\u6709\u6570\u636e\u901a\u8fc7\u7684\uff0c\u5373\u4fe1\u9053\u5229\u7528\u7387 = \u6709\u6570\u636e\u901a\u8fc7\u65f6\u95f4/\uff08\u6709 + \u65e0\uff09\u6570\u636e\u901a\u8fc7\u65f6\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u662f\u9700\u8981\u786e\u8ba4\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97 \\(\\(\u4fe1\u9053\u5229\u7528\u7387=\\frac{\u53d1\u9001\u65f6\u5ef6}{\u53d1\u9001\u65f6\u5ef6+\u5f80\u8fd4\u4f20\u8f93\u65f6\u5ef6}\u200b\\)\\)</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/","title":"\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236","text":"<p>\u62e5\u585e\uff08Congestion\uff09\uff1a\u7f51\u7edc\u4e2d\u5b58\u5728\u592a\u591a\u7684\u6570\u636e\u5305\u5bfc\u81f4\u6570\u636e\u5305\u88ab\u5ef6\u8fdf\u548c\u4e22\u5931\uff0c\u964d\u4f4e\u4e86\u4f20\u8f93\u6027\u80fd\uff0c\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a\u62e5\u585e\u3002\u7f51\u7edc\u5c42\u548c\u4f20\u8f93\u5c42\u5171\u540c\u627f\u62c5\u5904\u7406\u62e5\u585e\u7684\u8d23\u4efb\u3002\u63a7\u5236\u62e5\u585e\u7684\u6700\u6709\u6548\u65b9\u6cd5\u662f\u51cf\u5c11\u4f20\u8f93\u5c42\u6ce8\u5165\u7f51\u7edc\u7684\u8d1f\u8f7d\u3002\u62e5\u585e\u4ea7\u751f\u6700\u4e25\u91cd\u7684\u540e\u679c\u662f\u6b7b\u9501\u3002</p> <p>\u503c\u5f97\u6307\u51fa\u7684\u662f \u62e5\u585e\u63a7\u5236 \u548c \u6d41\u91cf\u63a7\u5236 \u4e4b\u95f4\u6709\u5f88\u5927\u7684\u5dee\u5f02\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u975e\u5e38\u5fae\u5999\u3002</p> <ul> <li>\u62e5\u585e\u63a7\u5236\u7684\u4efb\u52a1\u662f\u786e\u4fdd\u7f51\u7edc\u80fd\u591f\u627f\u8f7d\u6240\u6709\u5230\u8fbe\u7684\u6d41\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u6027\u7684\u95ee\u9898\uff0c\u6d89\u53ca\u5404\u65b9\u9762\u7684\u884c\u4e3a\uff0c\u5305\u62ec\u6240\u6709\u7684\u4e3b\u673a\u548c\u6240\u6709\u7684\u8def\u7531\u5668\u3002</li> <li>\u6d41\u91cf\u63a7\u5236\u53ea\u4e0e\u7279\u5b9a\u7684\u53d1\u9001\u65b9\u548c\u7279\u5b9a\u7684\u63a5\u6536\u65b9\u4e4b\u95f4\u7684\u70b9\u5230\u70b9\u6d41\u91cf\u6709\u5173\u3002\u5b83\u7684\u4efb\u52a1\u662f\u786e\u4fdd\u4e00\u4e2a \u5feb\u901f\u7684\u53d1\u9001\u65b9\u4e0d\u4f1a\u6301\u7eed\u5730\u4ee5\u8d85\u8fc7\u63a5\u6536\u65b9\u63a5\u6536\u80fd\u529b\u7684\u901f\u7387\u4f20\u8f93\u6570\u636e\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#_2","title":"\u7f51\u7edc\u5c42\u62e5\u585e\u63a7\u5236","text":"<p>\u62e5\u585e\u7684\u51fa\u73b0\u610f\u5473\u7740\u8d1f\u8f7d\uff08\u6682\u65f6\uff09\u5927\u4e8e\u8d44\u6e90\uff08\u5728\u7f51\u7edc\u7684\u4e00\u90e8\u5206\u3009\u53ef\u4ee5\u5904\u7406\u7684\u80fd\u529b\u3002\u5f88\u81ea\u7136\u4eba\u4eec\u80fd\u60f3\u5230\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a\u589e\u52a0\u8d44\u6e90\u6216\u51cf\u5c11\u8d1f\u8f7d\u3002</p> <ol> <li>\u7ed9\u8def\u7531\u5668\u3001\u94fe\u8def\u5347\u7ea7\uff0c\u589e\u52a0\u5e26\u5bbd\u3002</li> <li>\u6d41\u91cf\u611f\u77e5\u7684\u8def\u7531\uff0c\u6839\u636e\u6bcf\u5929\u7684\u6d41\u91cf\u6a21\u5f0f\u5b9a\u5236\u8def\u7531\u3002</li> <li>\u51c6\u5165\u63a7\u5236\u3002\u5728\u865a\u7535\u8def\u7f51\u7edc\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u62d2\u7edd\u65b0\u8fde\u63a5\u7684\u5efa\u7acb\u51cf\u5c11\u8d1f\u8f7d\u3002</li> <li>\u6d41\u91cf\u8c03\u8282\u3002\u8def\u7531\u5668\u76d1\u63a7\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u786e\u5b9a\u5408\u9002\u5feb\u8981\u63a5\u8fd1\u62e5\u585e\uff0c\u7136\u540e\u5c06\u53cd\u9988\u6d88\u606f\u4f20\u9012\u7ed9\u9020\u6210\u62e5\u585e\u7684\u53d1\u9001\u65b9\u3002</li> <li>\u8d1f\u8f7d\u8131\u79bb\u3002\u5f53\u4ee5\u4e0a\u4efb\u4f55 \u79cd\u65b9\u6cd5\u90fd\u65e0\u6cd5\u6d88\u9664\u62e5\u585e\u65f6\uff0c\u8def\u7531\u5668\u53ef\u4ee5\u4eae\u51fa\u5b83\u7684\u6740\u624b\u94dc\uff0c\u5373\u8d1f\u8f7d\u8131\u843d\uff0c\u628a\u67d0\u4e9b\u6570\u636e\u5305\u4e22\u5f03\u3002\u5bf9\u4e8e\u8981\u4e22\u5f03\u54ea\u4e9b\u6570\u636e\u5305\uff0c\u6709\u4e0d\u540c\u7684\u7b56\u7565\u3002</li> </ol>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#tcp","title":"TCP \u62e5\u585e\u63a7\u5236","text":"<p>UDP \u662f\u6ca1\u6709\u62e5\u585e\u63a7\u5236\u7684\u3002\u6211\u4eec\u6765\u770b\u770b TCP \u62e5\u585e\u63a7\u5236\u7684\u65b9\u6cd5\u3002TCP \u4f1a\u4e0d\u65ad\u7684\u63a2\u7d22\u62e5\u585e\u7a97\u53e3 <code>cwnd</code>\u3002\u6574\u4e2a\u8fc7\u7a0b\u88ab\u6982\u62ec\u4e3a\u201c\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001\u5feb\u901f\u56de\u590d\u201d\uff08\u4e0b\u9762\u7684\u7b2c\u4e09\u5f20\u56fe \uff09</p> <p>\u6162\u542f\u52a8\uff1aTCP \u5728\u521a\u5efa\u7acb\u8fde\u63a5\u5b8c\u6210\u540e\uff0c\u9996\u5148\u662f\u6709\u4e2a\u6162\u542f\u52a8\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u6162\u542f\u52a8\u7684\u610f\u601d\u5c31\u662f\u4e00\u70b9\u4e00\u70b9\u7684\u63d0\u9ad8\u53d1\u9001\u6570\u636e\u5305\u7684\u6570\u91cf\u3002</p> <p>\u4ee5\u4e00\u4e2a\u8f83\u5c0f\u7684\u503c\u5f00\u59cb\uff0c1 \u4e2a MSS\u3002\u5f53\u88ab\u786e\u8ba4\uff08\u6536\u5230 ACK\uff09\u7684\u65f6\u5019</p> <ul> <li>\u5982\u679c\u8fd8\u6ca1\u6709\u8fbe\u5230 <code>ssthresh</code> \u7684\u9608\u503c\uff0c<code>cwnd</code> \u7ffb\u500d\u3002</li> <li>\u5982\u679c\u8fbe\u5230\u4e86 <code>ssthresh</code> \u7684\u9608\u503c\uff0c\u90a3\u4e48 <code>cwnd++</code>\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u62e5\u585e\u907f\u514d\uff0c\u56e0\u4e3a\u51cf\u7f13\u4e86\u53d1\u9001\u901f\u5ea6\u3002</li> </ul> <p>\u5f53\u6211\u4eec\u6536\u5230\u4e09\u4e2a\u91cd\u590d\u7684\u786e\u8ba4\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u5df2\u7ecf\u5f00\u59cb\u4e22\u5305\u4e86\uff08\u4f46\u8fd8\u4e0d\u662f\u7279\u522b\u4e25\u91cd\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56de\u987eTCP\u534f\u8bae\uff09\u3002\u53ef\u80fd \u662f\u62e5\u585e\u5bfc\u81f4\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8fdb\u884c\u5feb\u901f\u6062\u590d\uff1a</p> <ul> <li><code>cwnd/=2</code>\uff0c<code>ssthresh</code> \u4e5f\u88ab\u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u503c\u3002</li> <li>\u62e5\u585e\u7a97\u53e3\u00a0<code>cwnd = ssthresh + 3</code>\u00a0\uff08 3 \u7684\u610f\u601d\u662f\u786e\u8ba4\u6709 3 \u4e2a\u6570\u636e\u5305\u88ab\u6536\u5230\u4e86\uff09\uff1b</li> <li>\u91cd\u4f20\u4e22\u5931\u7684\u6570\u636e\u5305\uff1b</li> <li>\u5982\u679c\u518d\u6536\u5230\u91cd\u590d\u7684 ACK\uff0c\u90a3\u4e48 cwnd \u589e\u52a0 1\uff1b</li> <li>\u5982\u679c\u6536\u5230\u65b0\u6570\u636e\u7684 ACK \u540e\uff0c\u628a cwnd \u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u6b65\u4e2d\u7684 ssthresh \u7684\u503c\uff0c\u539f\u56e0\u662f\u8be5 ACK \u786e\u8ba4\u4e86\u65b0\u7684\u6570\u636e\uff0c\u8bf4\u660e\u4ece duplicated ACK \u65f6\u7684\u6570\u636e\u90fd\u5df2\u6536\u5230\uff0c\u8be5\u6062\u590d\u8fc7\u7a0b\u5df2\u7ecf\u7ed3\u675f\uff0c\u53ef\u4ee5\u56de\u5230\u6062\u590d\u4e4b\u524d\u7684\u72b6\u6001\u4e86\uff0c\u4e5f\u5373\u518d\u6b21\u8fdb\u5165\u62e5\u585e\u907f\u514d\u72b6\u6001\uff1b</li> </ul> <p></p> <p>\u5982\u679c\u6211\u4eec\u53d1\u73b0\u53d1\u9001\u5305\u8d85\u65f6\u4e86\uff0c\u8fd9\u65f6\u6211\u4eec\u8fdb\u884c\u6162\u542f\u52a8\uff08\u4e0b\u9762\u7684\u7b2c\u4e00\u5f20\u56fe\uff09\uff1a</p> <ul> <li><code>ssthresh</code> \u8bbe\u7f6e\u6210 <code>cwnd/2</code>\uff0c <code>cwnd=1</code>\u3002</li> </ul> <p>\u4e4b\u540e\u7ee7\u7eed\u6309\u7167\u4e0a\u9762\u7684\u89c4\u5219\u589e\u52a0 <code>cwnd</code>\uff0c\u91cd\u590d\u4e0a\u9762\u7684\u8fc7\u7a0b\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#_3","title":"\u6d41\u91cf\u63a7\u5236\u534f\u8bae","text":"<p>\u6d41\u91cf\u63a7\u5236\u8981\u5904\u7406\u7684\u95ee\u9898\u662f\uff1a\u53d1\u9001\u7684\u901f\u5ea6\u592a\u5feb\u800c\u63a5\u53d7\u7684\u901f\u5ea6\u592a\u6162\u3002\u5982\u679c\u4e00\u76f4\u65e0\u8111\u7684\u53d1\u6570\u636e\u7ed9\u5bf9\u65b9\uff0c\u4f46\u5bf9\u65b9\u5904\u7406\u4e0d\u8fc7\u6765\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u89e6\u53d1\u91cd\u53d1\u673a\u5236\uff0c\u4ece\u800c\u5bfc\u81f4\u7f51\u7edc\u6d41\u91cf\u7684\u65e0\u7aef\u7684\u6d6a\u8d39\u3002</p> <ul> <li>\u53d1\u9001\u7a97\u53e3\uff1a\u53d1\u9001\u65b9\u7ef4\u6301\u4e00\u7ec4\u8fde\u7eed\u7684\u5141\u8bb8\u53d1\u9001\u7684\u5e27\u7684\u5e8f\u53f7\u3002</li> <li>\u63a5\u6536\u7a97\u53e3\uff1a\u63a5\u6536\u65b9\u7ef4\u6301\u4e00\u7ec4\u8fde\u7eed\u7684\u5141\u8bb8\u63a5\u6536\u7684\u5e27\u7684\u5e8f\u53f7\u3002</li> </ul> <p>\u4e8b\u5b9e\u4e0a\uff0c\u901a\u8fc7\u786e\u8ba4\u3001\u8d85\u65f6\u91cd\u4f20\u3001\u7f16\u53f7\u3001\u6821\u9a8c\uff0c\u5b9e\u73b0\u4e86 \u53ef\u9760\u4f20\u8f93\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#stop-and-wait","title":"Stop and Wait","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u6570\u636e\u5305\u4e4b\u540e\uff0c\u76f4\u5230\u6536\u5230ACK\u5305\u624d\u53d1\u9001\u4e0b\u4e00\u4e2a\u3002\u8fd9\u7b97\u6cd5\u663e\u7136\u53ea\u5b58\u5728\u6559\u79d1\u4e66\u4e2d\u3002</p> <p></p> <p>\u53ef\u80fd\u51fa\u73b0\u7684\u610f\u5916\u60c5\u51b5\u3002</p> <ul> <li>\u7b2c\u4e00\u79cd\uff0c\u5982\u679c Sender \u53d1\u9001\u7684\u5305\u4e22\u5931\u4e86\u3002Sender \u5728\u5f88\u4e45\u4e4b\u540e\u6ca1\u6709\u6536\u5230 ACK \u4f1a\u9009\u62e9\u91cd\u53d1\u3002</li> <li>\u7b2c\u4e8c\u79cd\uff0c\u5982\u679c Receiver \u53d1\u9001\u7684 ACK \u4e22\u5931\u4e86\u3002Sender \u5728\u5f88\u4e45\u4e4b\u540e\u6ca1\u6709\u6536\u5230 ACK \u4f1a\u9009\u62e9\u91cd\u53d1\u3002\u90a3 Receiver \u5c31\u5f88\u8ff7\u60d1\u4e86\uff0c\u8fd9\u4e2a\u5305\u662f\u54ea\u4e2a\uff1f\u662f\u65b0\u7684\u5305\uff0c\u8fd8\u662f\u65e7\u7684\u5305\uff1f\u6240\u4ee5\u6211\u4eec\u9700\u8981 \u7ed9\u5305\u7f16\u53f7\uff0c\u5bf9\u4e8e Stop and Wait\uff0c1 bit \u7684\u5c31\u591f\u4e86\uff08\u8fd9\u4e5f\u662f\u4e0b\u9762 GBN \u516c\u5f0f N=1 \u7684\u60c5\u51b5\uff09\u3002</li> </ul> <p>\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a stop and wait \u5c31\u662f \u53d1\u9001\u7a97\u53e3\uff08send window, swnd\uff09 \u548c \u63a5\u6536\u7a97\u53e3\uff08receive window, rwnd\uff09 \u5927\u5c0f\u90fd\u662f 1 \u7684 GBN\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#go-back-n-gbn","title":"Go back N (GBN)","text":"<p>\u5728GBN\u534f\u8bae\u4e2d\uff0c\u5141\u8bb8\u53d1\u9001\u65b9\u53d1\u9001\u591a\u4e2a\u5206\u7ec4\u800c\u4e0d\u9700\u8981\u7b49\u5f85\u786e\u8ba4\u3002\u4f46\u662f\u5728\u6d41\u6c34\u7ebf\u4e2d\u672a\u786e\u8ba4\u7684\u5206\u7ec4\u6570\u4e0d\u80fd\u8d85\u8fc7\u67d0\u4e2a\u6700\u5927\u7684\u5141\u8bb8\u6570\\(N\\)\uff08\u5373\u53d1\u9001\u7a97\u53e3\u5927\u5c0f\\(W_t\\)\uff09\u3002\u6211\u4eec\u5c06 \\(base\\) \u5b9a\u4e49\u6210 \u6700\u65e9\u672a\u786e\u8ba4\u7684\u5206\u7ec4\u7684\u5e8f\u53f7\u3002\u5c06 \\(nextseqnum\\) \u5b9a\u4e49\u6210\u6700\u5c0f\u7684\u672a\u4f7f\u7528\u5e8f\u53f7\u3002  </p> <p>\u91c7\u7528\u7d2f\u79ef\u786e\u8ba4\u7684\u65b9\u5f0f\uff0cACK=N\u8868\u793a\u63a5\u6536\u65b9\u5df2\u7ecf\u6536\u5230N\u53f7\u5e27\u548c\u5b83\u4e4b\u524d\u7684\u5168\u90e8\u5e27\u3002\u6240\u4ee5\uff0c\u5982\u679cReceiver\u6536\u5230\u4e861345\u4f46\u662f\u6ca1\u6536\u52302\uff0c\u53ea\u4f1a\u53d1\u9001ACK=1\u5e76\u4e22\u5f033\u30014\u30015\uff1b\u5982\u679cSender\u53ea\u6536\u5230\u4e86ACK(1),ACK(3),ACK(5)\uff0cSender\u77e5\u9053\u5176\u5b9e1\u30012\u30013\u30014\u30015\u90fd\u5df2\u7ecf\u88ab\u63a5\u6536\u6210\u529f\u4e86\uff0c\u4e0b\u4e00\u4e2a\u53d1\u90016\u3002</p> <p>\u5982\u679c\u51fa\u73b0\u8d85\u65f6\uff0c\u53d1\u9001\u65b9\u91cd\u4f20\u6240\u4ee5\u5df2\u53d1\u9001\u4f46\u672a\u88ab\u786e\u8ba4\u7684\u5e27\u3002\u7c7b\u4f3c\u7684\uff0c\u8d85\u65f6\u53ef\u80fd\u662f\u53d1\u9001\u7684\u6570\u636e\u4e22\u5931\u6216\u8005ACK\u4e22\u5931\u3002</p> <p>\u91c7\u7528N\u4e2a\u6bd4\u7279\u5bf9frame\u8fdb\u884c\u7f16\u53f7\uff0c\u90a3\u4e48\u53d1\u9001\u7a97\u53e3\u7684\u5c3a\u5bf8\u6ee1\u8db3\\(1\\le W_t \\le2^n-1\\)\u3002\u5426\u5219\u5c31\u65e0\u6cd5\u533a\u522b\u65e7\u5e27\u548c\u65b0\u5e27\u3002\u63a5\u6536\u7a97\u53e3\u5927\u5c0f\u4e3a1\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#selective-repeat-protocol-sr","title":"Selective repeat protocol (SR)","text":"<p>GBN\u548cSR\u90fd\u5c5e\u4e8e\u8fde\u7eedARQ\u534f\u8bae\u3002</p> <p>\u56de\u987e\uff1a\u5728GBN\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u6536\u5230\u4e861345\u4f46\u662f\u6ca1\u6536\u52302\uff0c\u53ea\u4f1a\u53d1\u9001ACK=1\u5e76\u4e22\u5f03345\u3002</p> <p>GBN\u76f4\u63a5\u4e22\u5f03\u4e86\u5931\u5e8f\u7684\u5305\uff0c\u4e5f\u662f\u4e00\u79cd\u6d6a\u8d39\u3002\u6211\u4eec\u60f3\u53ea\u91cd\u4f20\u51fa\u9519\u7684\u5e27\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u63a5\u6536\u65b9\u7a97\u53e3\u5927\u5c0f\u4e3a1\uff0c\u5bf9\u4e8e\u4e0d\u6309\u5e8f\u5230\u8fbe\u7684\u5305\u6ca1\u6709\u5730\u65b9\u7f13\u5b58\u3002\u6240\u4ee5SR\u63a5\u6536\u65b9\u7a97\u53e3\u5927\u4e8e1 \u3002</p> <p>\u4e5f\u662f\u91c7\u7528\u7d2f\u79ef\u786e\u8ba4\u7684\u65b9\u5f0f\uff0cACK(N)\u8868\u793a\u63a5\u6536\u65b9\u5df2\u7ecf\u6536\u5230N\u53f7\u5e27\u548c\u5b83\u4e4b\u524d\u7684\u5168\u90e8\u5e27\u3002\u53ea\u4e0d\u8fc7\u4ee5\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u5728\u6536\u52302\u4e4b\u540e\u5c31\u76f4\u63a5\u53d1\u9001ACK=5\u4e86\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u628a3\u30014\u7f13\u5b58\u4e86\u3002</p> <p>\u53d1\u9001\u7a97\u53e3\u548c\u63a5\u53d7\u7a97\u53e3\u7684\u5c3a\u5bf8\u8981\u6ee1\u8db3\\(W_T \\le 2^{n-1}\\)\uff0c\u5426\u5219\u4e5f\u662f\u65e0\u6cd5\u533a\u5206\u65b0\u5305\u548c\u65e7\u5305\u3002\u4e00\u822c\u60c5\u51b5\u6211\u4eec\u8ba4\u4e3a\u53d1\u9001\u7a97\u53e3\u548c\u63a5\u53d7\u7a97\u53e3\u662f\u4e00\u6837\u5927\u7684\u3002</p> <p>\u5177\u4f53\u89e3\u91ca\uff0c\u662f</p> <ol> <li>\\(rwnd+swnd \\leq 2^n\\)</li> <li>\\(swnd \\geq rwnd\\)</li> </ol> <p>\u8bbe\u60f3\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\uff0c3bit\uff0c\u53d1\u9001\u7a97\u53e3\u4e3a 5\uff0c\u63a5\u53d7\u7a97\u53e3\u4e3a 4\u3002</p> <p>\u53d1\u9001\u65b9\u53d1\u9001 0,1,2,3,4\uff0c\u63a5\u53d7\u8005\u90fd\u6536\u5230\u4e86\uff0c\u8fd4\u56de ACK(4)\uff0c\u79fb\u52a8\u63a5\u53d7\u7a97\u53e3\uff0c\u7b49\u5f85 5,6,7,0\u3002\u7ed3\u679c ACK \u4e22\u4e86\uff0c\u53d1\u9001\u65b9\u91cd\u4f20\u4e86 0\u3002</p> <p>\u6240\u4ee5\u63a5\u6536\u65b9\u5c31\u628a\u8001 0 \u5f53\u65b0 0 \u4e86\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5206\u4e0d\u6e05\u65e7\u5e27\u548c\u65b0\u5e27\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#tcp_1","title":"TCP \u6d41\u91cf\u63a7\u5236","text":"<p>TCP\u4f7f\u7528\u7684\u7b97\u6cd5\u548cSR\u7b97\u6cd5\u5f88\u63a5\u8fd1\u4e86\uff0c\u4f46\u662f\u5b9e\u73b0\u4e0a\u8fd8\u662f\u6709\u7ec6\u8282\u7684\u4f18\u5316\u3002</p> <ul> <li>\u5728\u901a\u4fe1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u63a5\u6536\u65b9\u6839\u636e\u81ea\u5df1\u63a5\u6536\u7f13\u5b58\u7684\u5927\u5c0f\uff0c\u52a8\u6001\u7684\u8c03\u6574\u63a5\u6536\u7a97\u53e3\u7684\u5927\u5c0f\uff08\u5934\u90e8\u7684\u7a97\u53e3\u5927\u5c0f\u5b57\u6bb5\uff09\u3002\u53d1\u9001\u65b9\u7684\u53d1\u9001\u7a97\u53e3\u53d6\\(min(rwnd,cwnd)\\)\uff0c\u5373\u63a5\u6536\u7a97\u53e3\u548c\u62e5\u585e\u7a97\u53e3\u7684\u8f83\u5c0f\u8005\u3002</li> <li>TCP\u4f7f\u7528\u7d2f\u8ba1\u5e94\u7b54\u7684\u65b9\u5f0f\u3002\u8fd9\u4e00\u70b9\u4e0e\u8fde\u7eedARQ\u7c7b\u4f3c\u3002</li> <li>TCP\u5728\u63a5\u6536\u7aef\u4f1a\u8bbe\u7f6e\u7f13\u5b58\uff0c\u6765\u7f13\u5b58\u6b63\u786e\u63a5\u6536\u4f46\u662f\u5931\u5e8f\u7684\u5206\u7ec4\uff0c\u8fd9\u70b9\u4e0eSR\u7c7b\u4f3c\u3002\uff08\u5b9e\u9645\u4e0aTCP RFC\u5e76\u6ca1\u6709\u5bf9\u63a5\u6536\u7aef\u8981\u600e\u6837\u5904\u7406\u5931\u5e8f\u5230\u8fbe\u7684\u5206\u7ec4\u63d0\u51fa\u8981\u6c42\uff0c\u4f46\u662f\u5728\u63a5\u6536\u7aef\u8bbe\u7f6e\u7f13\u5b58\u662f\u5b9e\u8df5\u4e2d\u5927\u5bb6\u90fd\u91c7\u7528\u7684\u65b9\u6cd5\uff09</li> <li>TCP\u4f7f\u7528\u5feb\u901f\u91cd\u4f20\u673a\u5236\uff1a\u5982\u679c\u6536\u5230\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u62a5\u6587\u6bb5\u76843\u4e2a\u5197\u4f59ACK\uff0c\u5219\u5728\u8d85\u65f6\u4e8b\u4ef6\u53d1\u751f\u524d\u5c31\u4f1a\u5bf9\u8be5\u62a5\u6587\u6bb5\u8fdb\u884c\u91cd\u4f20\uff0c\u8fd9\u5927\u5927\u8282\u7ea6\u4e86\u65f6\u95f4\u3002</li> <li>\u6ce8\u610f\uff1aTCP\u4e2d\u7684ack\u662f\u6307\u63a5\u6536\u7aef\u5e0c\u671b\u4ece\u53d1\u9001\u7aef\u6536\u5230\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\u3002\u8fd9\u4e2a\u548c\u4e4b\u524d\u4ecb\u7ecd\u7684\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u662f\u5b9e\u73b0\u7684\u6548\u679c\u662f\u7c7b\u4f3c\u7684\u7684\u3002\u4f8b\u5982\u53d1\u9001\u7aef\u53d1\u9001\u4e86\u7f16\u53f7\u4e3a0-5\u7684\u5b57\u8282\uff0c\u8fd9\u65f6\u63a5\u6536\u7aef\u6210\u529f\u63a5\u6536\u540e\u5c31\u4f1a\u53d1\u9001ack\u4e3a6\u3002</li> <li>\u5bf9\u4e8e\u6700\u540e0\u7a97\u53e3\u7684\u60c5\u51b5\uff0c\u4e3a\u4e86\u907f\u514d\u201c\u6b7b\u9501\u201d\uff0c\u4f1a\u8ba1\u65f6\u3002\u5982\u679c\u8d85\u65f6\u4e86\u8fd8\u6ca1\u6709\u6536\u5230\u7a97\u53e3\u4e0d\u4e3a0\u7684\u901a\u77e5\uff0c\u4f1a\u53d1\u9001\u63a2\u6d4b\u62a5\u6587\u6bb5\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#_4","title":"\u94fe\u8def\u5c42\u6d41\u91cf\u63a7\u5236","text":"<p>\u7f51\u7edc\u5c42\u9700\u8981\u6d41\u91cf\u63a7\u5236\u5417\uff1f \u7f51\u7edc\u5c42\u70b9\u5bf9\u70b9\u4e4b\u95f4\u7684\u4f20\u8f93\uff0c\u5176\u5b9e\u8fd8\u662f\u7ecf\u8fc7\u94fe\u8def\u5c42\u7684\u3002\u6240\u4ee5 IP \u534f\u8bae\u91cc\u6ca1\u6709\u6d41\u91cf\u63a7\u5236\u3002</p> <p>\u90a3\u4e48\u94fe\u8def\u5c42\u6d41\u91cf\u63a7\u5236\u6709\u4ec0\u4e48\u529e\u6cd5\u5462\uff1f\u5c31\u662f\u4e0a\u9762\u7684\u529e\u6cd5\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Control/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>4.2 TCP \u91cd\u4f20\u3001\u6ed1\u52a8\u7a97\u53e3\u3001\u6d41\u91cf\u63a7\u5236\u3001\u62e5\u585e\u63a7\u5236 | \u5c0f\u6797coding</li> <li>CS 144: Introduction to Computer Networking</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/HTTP/","title":"HTTP","text":"<p>HTTP \u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u4e5f\u5c31\u662fHyperText\u00a0Transfer\u00a0Protocol\u3002</p> <p>HTTP\u53ef\u4ee5\u8bf4\u662f\u4f7f\u7528\u7684\u6700\u591a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u4e86\u3002\u5b83\u81ea\u8eab\u4e5f\u5728\u4e0d\u65ad\u53d1\u5c55\uff0c\u4ece\u6700\u5f00\u59cb\u7684HTTP/1.0 -&gt; HTTP/1.1 -&gt; HTTP/2 -&gt; HTTP/3\u3002\u4f46\u662f\u4e0d\u7ba1\u600e\u4e48\u53d1\u5c55\uff0c\u5b83\u505a\u7684\u4e8b\u60c5\u662f\u4e00\u6837\u7684\uff1a\u4e24\u70b9\u4e4b\u95f4\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u53d1\u9001 Request \u5305\uff0c\u8fd4\u56de Response \u5305\uff0c\u5305\u7684\u5185\u5bb9\u662f\u8d85\u6587\u672c\uff08\u4e5f\u5c31\u662f\u5565\u90fd\u53ef\u4ee5\u53d1\uff0c\u4e0d\u4ec5\u9650\u7eaf\u6587\u672c\uff09\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/HTTP/#http-packet","title":"HTTP Packet","text":"<p>HTTP Packet \u7531 Header \u548c Body \u7ec4\u6210\u3002\u5206\u4e3aRequest Packet\u548cResponse Packet\u3002</p> <p>Request \u5305\u7684\u57fa\u672c\u683c\u5f0f\u5982\u4e0b\uff0c <code>POST</code> \u662f\u65b9\u6cd5\uff0c<code>/form/entry</code> \u662f URI\uff0c<code>HTTP/1.1</code> \u662f\u7248\u672c\uff0c\u540e\u9762\u662f\u9996\u90e8\u5b57\u6bb5\uff0c\u6700\u540e\u662f\u8bf7\u6c42\u4f53\u3002\u4f8b\u5982\uff1a</p> <pre><code>POST /form/entry HTTP/1.1\nHost: hackr.jp\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 16\n\nname=ueno&amp;age=37\n</code></pre> <p>\u6536\u5230 Request \u4e4b\u540e\uff0c\u670d\u52a1\u5668\u4f1a\u8fd4\u56de Response\u3002<code>HTTP/1.1</code> \u662f\u7248\u672c\uff0c<code>200</code> \u662f\u72b6\u6001\u7801\uff0c<code>OK</code> \u662f\u72b6\u6001\u8bf4\u660e\uff0c\u540e\u9762\u662f\u9996\u90e8\u5b57\u6bb5\uff0c\u6700\u540e\u662f\u54cd\u5e94\u4f53\u3002\u4f8b\u5982\uff1a</p> <pre><code>HTTP/1.1 200 OK\nDate: Tue, 10 Jul 2012 06:50:15 GMT\nContent-Length: 362\nContent-Type: text/html\n\n&lt;html&gt;\n\u2026\u2026\n</code></pre> <p>\u8fd9\u4e9b\u9996\u90e8\u5b57\u6bb5\u3001\u72b6\u6001\u7801\u7684\u5177\u4f53\u542b\u4e49\u5728\u9762\u8bd5\u548c\u5b9e\u8df5\u4e2d\u90fd\u633a\u6709\u7528\u7684\uff0c\u503c\u5f97\u4ecb\u7ecd\u4e00\u4e0b\u3002</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/HTTP/#_1","title":"\u72b6\u6001\u7801","text":"<ul> <li>1xx: \u4fe1\u606f\u54cd\u5e94\u3002\u8fd9\u4e00\u7c7b\u72b6\u6001\u7801\u8868\u793a\u4e34\u65f6\u7684\u54cd\u5e94\uff0c\u670d\u52a1\u5668\u5df2\u63a5\u6536\u8bf7\u6c42\u5e76\u7ee7\u7eed\u5904\u7406\u3002</li> <li>2xx: \u6210\u529f\u3002\u8fd9\u7c7b\u72b6\u6001\u7801\u8868\u793a\u8bf7\u6c42\u5df2\u88ab\u6210\u529f\u63a5\u6536\u3001\u7406\u89e3\u5e76\u63a5\u53d7\u3002</li> <li>3xx: \u91cd\u5b9a\u5411\u3002\u8fd9\u7c7b\u72b6\u6001\u7801\u8868\u793a\u4e3a\u4e86\u5b8c\u6210\u8bf7\u6c42\uff0c\u5fc5\u987b\u8fdb\u4e00\u6b65\u6267\u884c\u64cd\u4f5c\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u72b6\u6001\u7801\u7528\u6765\u91cd\u5b9a\u5411\u3002</li> <li>4xx: \u5ba2\u6237\u7aef\u9519\u8bef\u3002\u8fd9\u7c7b\u72b6\u6001\u7801\u8868\u793a\u8bf7\u6c42\u53ef\u80fd\u51fa\u9519\uff0c\u59a8\u788d\u4e86\u670d\u52a1\u5668\u7684\u5904\u7406\u3002</li> <li>5xx: \u670d\u52a1\u5668\u9519\u8bef\u3002\u8fd9\u7c7b\u72b6\u6001\u7801\u8868\u793a\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u9519\u8bef\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/HTTP/#http_1","title":"HTTP\u7684\u5404\u4e2a\u7248\u672c","text":"<p>HTTP1.0\uff1a\u6d4f\u89c8\u5668\u7684\u6bcf\u6b21\u8bf7\u6c42\u90fd\u9700\u8981\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u5b8c\u6210\u8bf7\u6c42\u5904\u7406\u540e\u7acb\u5373\u65ad\u5f00TCP\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u4e0d\u8ddf\u8e2a\u6bcf\u4e2a\u5ba2\u6237\u4e5f\u4e0d\u8bb0\u5f55\u8fc7\u53bb\u7684\u8bf7\u6c42\u3002</p> <p>HTTP1.1\uff1aHTTP1.0\u7684\u7f3a\u70b9\u5f88\u660e\u663e\u3002\u5982\u679c\u7528\u6237\u8bbf\u95ee\u7684\u7f51\u9875\u5185\u6709\u5927\u91cf\u7684\u56fe\u7247\u3001JS\u811a\u672c\u7b49\u8d44\u6e90\uff0c\u6bcf\u8bf7\u6c42\u4e00\u4e2a\u8d44\u6e90\u90fd\u8981\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u592a\u4e0d\u73b0\u5b9e\u3002HTTP1.1\u5141\u8bb8\u591a\u4e2aHTTP\u8bf7\u6c42\u590d\u7528\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u540c\u65f6\u5efa\u7acb\u591a\u4e2a\u8fde\u63a5\u9632\u6b62\u5934\u963b\u585e\u95ee\u9898\u3002</p> <p>HTTP2.0</p>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/HTTP/#_2","title":"\u7f16\u7a0b","text":"<p>HTTP\u53ef\u80fd\u662f\u6700\u6d41\u884c\u7684\u5e94\u7528\u5c42\u534f\u8bae\u4e86\u3002\u5f88\u591a\u5e93\u548c\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u5bf9\u53d1\u9001\u3001\u5904\u7406HTTP\u8bf7\u6c42\u505a\u4e86\u5c01\u88c5\u3002</p> <p>\u53d1\u9001HTTP\u8bf7\u6c42\uff1a</p> <ul> <li><code>curl</code>\uff1a \u901a\u8fc7\u547d\u4ee4\u884c\u6784\u9020HTTP\u8bf7\u6c42\u3002</li> <li><code>request</code>\uff1a\u901a\u8fc7Python\u811a\u672c\u6784\u9020HTTP\u8bf7\u6c42\u3002</li> </ul> <p>\u5904\u7406HTTP\u8bf7\u6c42\uff1a</p> <ul> <li><code>net/http</code>\uff1a\u7f16\u5199Golang\u5e94\u7528\uff0c\u5904\u7406HTTP\u8bf7\u6c42\u3002\u53ea\u9700\u8981\u7b80\u5355\u7684\u4e09\u6b65\u3002</li> </ul>","tags":["TODO"]},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/IP/","title":"IP","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Link%20Layer/","title":"Link Layer","text":"<p>\u5bf9\u5b66\u8ba1\u7b97\u673a\u7684\u540c\u5b66\u6765\u8bf4\uff0c\u94fe\u8def\u5c42\uff08Link Layer\uff09\u53ef\u80fd\u662f\u6700\u4e0d\u91cd\u8981\u7684\u4e86\uff0c\u90a3\u662f\u7f51\u5de5\u9700\u8981\u5173\u5fc3\u7684\u4e8b\u60c5\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Link%20Layer/#_1","title":"\u94fe\u8def\u5c42\u529f\u80fd\u6982\u8ff0","text":"<p>\u94fe\u8def\u5c42\u7684\u529f\u80fd\u53ef\u4ee5\u6982\u62ec\u4e3a\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ol> <li>\u4e3a\u7f51\u7edc\u5c42\u63d0\u4f9b\u670d\u52a1\uff1a\u5206\u4e3a\u65e0\u786e\u8ba4\u65e0\u8fde\u63a5\u670d\u52a1\uff08\u6bd4\u5982\u4ee5\u592a\u7f51\uff09\uff0c\u6709\u786e\u8ba4\u65e0\u8fde\u63a5\u670d\u52a1\uff08\u65e0\u7ebf\u901a\u4fe1\u5e38\u7528\uff09\uff0c\u6709\u786e\u8ba4\u9762\u76f8\u8fde\u63a5\u670d\u52a1\u3002</li> <li>\u94fe\u8def\u7ba1\u7406\uff1a\u5bf9\u4e8e\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff0c\u9700\u8981\u7ba1\u7406\u8fde\u63a5\u7684\u5efa\u7acb\u3001\u7ef4\u6301\u3001\u91ca\u653e\uff1b\u5728\u591a\u4e2a\u7ad9\u70b9\u5171\u4eab\u540c\u4e00\u7269\u7406\u4fe1\u9053\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u5728\u8981\u6c42\u901a\u4fe1\u7684\u7ad9\u70b9\u95f4\u00a0\u5206\u914d\u548c\u7ba1\u7406\u4fe1\u9053\u00a0\u4e5f\u662f\u94fe\u8def\u7ba1\u7406\u7684\u8303\u7574\u3002</li> <li>\u7ec4\u5e27\uff08Framing\uff09\uff1a\u4e24\u4e2a\u4e3b\u673a\u4f20\u9001\u6d88\u606f\u7684\u65f6\u5019\u662f\u628a\u7f51\u7edc\u5c42\u7684\u5206\u7ec4\u00a0\u5c01\u88c5\u6210\u5e27\uff0c\u4ee5\u5e27\u7684\u683c\u5f0f\u8fdb\u884c\u4f20\u8f93\u7684\u3002\u90a3\u4e48\u5982\u4f55\u5c01\u88c5\uff0c\u5982\u4f55\u5b9a\u754c\u5c31\u662f\u95ee\u9898\u4e86\u3002</li> <li>\u6d41\u91cf\u63a7\u5236\uff1a\u7531\u4e8e\u6536\u53d1\u53cc\u65b9\u7684\u5de5\u4f5c\u901f\u7387\u548c\u7f13\u5b58\u7a7a\u95f4\u7684\u5dee\u5f02\uff0c\u53ef\u80fd\u51fa\u73b0\u53d1\u9001\u65b9\u7684\u53d1\u9001\u80fd\u529b\u5927\u4e8e\u63a5\u6536\u65b9\u7684\u63a5\u6536\u80fd\u529b\u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8981\u9650\u5236\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\uff0c\u5426\u5219\u524d\u9762\u6765\u4e0d\u53ca\u63a5\u6536\u7684\u5e27\u4f1a\u88ab\u540e\u9762\u4e0d\u65ad\u53d1\u9001\u7684\u5e27\u6df9\u6ca1\u3002\u8be6\u89c1\u00a0\u62e5\u585e\u63a7\u5236\u548c\u6d41\u91cf\u63a7\u5236\u7efc\u8ff0\u00a0\u8fd9\u7bc7\u6587\u7ae0\u3002</li> <li>\u5dee\u9519\u7ea0\u6b63\u548c\u68c0\u6d4b\uff0c\u94fe\u8def\u5c42\u7684\u68c0\u6d4b\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u9ad8\u4e0a\u5c42\u7684\u4f20\u8f93\u6548\u7387\uff0c\u8be6\u89c1 [[Error Control]] \u8fd9\u7bc7\u6587\u7ae0\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/Link%20Layer/#framing","title":"\u7ec4\u5e27 Framing","text":"<p>\u5e27\uff08Frame\uff09\uff1a \u94fe\u8def\u5c42\u7684\u00a0\u534f\u8bae\u6570\u636e\u5355\u5143 (Protocol Data Unit,PDU)\u3002\uff08\u7f51\u7edc\u5c42\u7684\u534f\u8bae\u6570\u636e\u5355\u5143\u53eb\u5206\u7ec4 Packet\uff0c\u4f20\u8f93\u5c42\u7684\u534f\u8bae\u6570\u636e\u5355\u5143\u53eb Message\uff0cTCP \u7684\u534f\u8bae\u6570\u636e\u5355\u5143\u53eb Segment\uff09</p> <p>\u94fe\u8def\u5c42\u7684\u4f20\u8f93\u6570\u636e\u5757\u53eb\u505a\u5e27\u3002\u662f\u5bf9 IP \u5206\u7ec4\u7684\u7b80\u5355\u5305\u88c5\uff0c\u5728IP\u5206\u7ec4\uff08packet\uff09 \u7684\u524d\u540e\u6dfb\u52a0\u4e00\u4e9b\u5b57\u6bb5\uff0c\u5e27\u9996\u90e8\u548c\u5e27\u5c3e\u90e8\u3002 \u9996\u90e8\u548c\u5c3e\u90e8\u5305\u542b\u8bb8\u591a\u7684\u63a7\u5236\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u505a\u5230\u5b9a\u754c\u7684\u4f5c\u7528\u3002\u597d\u7684\u8bbe\u8ba1\u65b9\u6848\u5fc5\u987b\u4f7f\u63a5\u6536\u65b9\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u65b0\u5e27\u7684\u5f00\u59cb\uff0c\u4f7f\u7528\u7684\u4fe1\u9053\u5e26\u5bbd\u8981\u5c11\u3002\u5143\u4fe1\u606f\u4e2d\u8fd8\u53ef\u80fd\u5305\u62ec\u6821\u9a8c\u4fe1\u606f\u3002\u6211\u4eec\u8981\u89e3\u51b3\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5e27\u5b9a\u754c\uff0c\u5e27\u540c\u6b65\uff0c\u900f\u660e\u4f20\u8f93\u3002</p> <p></p> <p>\u901a\u5e38\u6709\u4e0b\u9762\u56db\u79cd\u65b9\u6cd5\u5b9e\u73b0\u7ec4\u5e27\uff0c\u4e00\u822c\u4f7f\u7528\u540e\u9762\u4e24\u79cd\u3002</p> <ol> <li>\u5b57\u8282\u8ba1\u6570\u6cd5\uff1a\u5b57\u8282\u8ba1\u6570\u6cd5\u662f\u5728\u5e27\u7684\u5934\u90e8\u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5b57\u6bb5\u6765\u6807\u660e\u5e27\u5185\u5b57\u7b26\u6570\u3002\u76ee\u7684\u8282\u70b9\u6536\u5230\u5b57\u8282\u8ba1\u6570\u503c\u4e4b\u540e\u5c31\u77e5\u9053\u540e\u9762\u8ddf\u7740\u7684\u5b57\u8282\u6570\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u5e27\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u7684\u6700\u5927\u95ee\u9898\u662f\u4e00\u65e6\u5b57\u8282\u8ba1\u6570\u503c\u51fa\u9519\uff0c\u5c31\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e2a\u5e27\u7684\u7ed3\u675f\u548c\u4e0b\u4e2a\u5e27\u7684\u5f00\u59cb\uff0c\u6536\u53d1\u53cc\u65b9\u5931\u53bb\u540c\u6b65\u3002</li> <li>\u5b57\u8282\u586b\u5145\u7684\u6807\u5fd7\u5b57\u8282\u6cd5\uff08\u5982 PPP \u534f\u8bae\u4f7f\u7528\u7684\uff09\uff1a\u4f7f\u7528\u7279\u5b9a\u5b57\u7b26\u6765\u5b9a\u754c\u4e00\u5e27\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u6709\u4e00\u4e2a\u53ef\u80fd\u7684\u95ee\u9898\uff0c\u5c31\u662f\u4f20\u8f93\u7684\u6570\u636e\u4e2d\u51fa\u73b0\u4e86\u63a7\u5236\u5b57\u7b26\u3002\u6240\u4ee5\u6211\u4eec\u8981\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u8bba\u6570\u636e\u662f\u4ec0\u4e48\u90fd\u5e94\u8be5\u80fd\u6b63\u5e38\u7684\u4f20\u8f93, \u5c31\u597d\u50cf\u6570\u636e\u662f\u900f\u660e\u7684\u4e00\u6837\u3002\u8fd9\u5c31\u662f\u00a0\u900f\u660e\u4f20\u8f93\u3002\u5728\u5b57\u8282\u586b\u5145\u6cd5\u4e2d\uff0c\u6211\u4eec\u7528\u8f6c\u4e49\u7b26\u7684\u65b9\u5f0f\u5b9e\u73b0\uff08\u5c31\u597d\u50cfC\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4e2d\u51fa\u73b0\u00a0<code>\"</code>\uff0c\u8981\u7528\u00a0<code>\\\"</code>\u00a0\u4ee3\u66ff\u4e00\u6837\uff09</li> <li>\u6bd4\u7279\u586b\u5145\u7684\u6807\u5fd7\u6bd4\u7279\u6cd5\uff1a\u4e5f\u662f\u4f7f\u7528\u7279\u5b9a\u5b57\u7b26\u6765\u5b9a\u754c\u4e00\u5e27\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002<ol> <li>\uff08 5\"1\"1\"0\" \u6cd5\uff09\uff1a\u6bd4\u5982\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u6807\u5fd7\u662f 01111110\u3002\u5bf9\u5e94\u7684\u900f\u660e\u4f20\u8f93\u65b9\u6848\u662f\uff0c\u6211\u4eec\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u5c01\u88c5\u7684\u65f6\u5019\uff0c\u9047\u5230\u8fde\u7eed\u7684 5 \u4e2a 1 \u5c31\u586b\u5145\u4e00\u4e2a 0\uff0c\u89e3\u5c01\u88c5\u7684\u65f6\u5019\u9047\u5230\u8fde\u7eed\u7684 5 \u4e2a 1 \u5c31\u5220\u9664\u540e\u9762\u7684 0\u3002\u5728\u9047\u5230\u8fde\u7eed\u7684\u516d\u4e2a 1\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5230\u8fbe\u4e86\u8fb9\u754c\u4e86\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5f88\u9002\u5408\u7528\u786c\u4ef6\u6765\u5b9e\u73b0\u3002</li> </ol> </li> <li>\u7269\u7406\u5c42\u7f16\u7801\u8fdd\u7981\u6cd5\uff1a\u6bd4\u5982\u66fc\u5f7b\u65af\u7279\u7f16\u7801\u53ea\u6709 \u201c\u9ad8\u4f4e\u201d\u548c\u201c\u4f4e\u9ad8\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u201c\u9ad8\u9ad8\u201d\u548c\u201c\u4f4e\u4f4e\u201d\u4f5c\u4e3a\u63a7\u5236\u5b57\u7b26\u3002IEEE802 \u6807\u51c6\u91c7\u7528\u8fd9\u79cd\u529e\u6cd5\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/NAT/","title":"NAT","text":"<p>RFC1918\u00a0\u89c4\u5b9a\u4e86\u4e09\u4e2a\u4fdd\u7559\u5730\u5740\u6bb5\u843d\uff1a10.0.0.0-10.255.255.255/8\uff1b172.16.0.0-172.31.255.255/12\uff1b192.168.0.0-192.168.255.255/16\u3002\u8fd9\u4e09\u4e2a\u8303\u56f4\u5206\u522b\u5904\u4e8e A,B,C \u7c7b\u7684\u5730\u5740\u6bb5\uff0c\u4e0d\u5411\u7279\u5b9a\u7684\u7528\u6237\u5206\u914d\uff0c\u88ab IANA \u4f5c\u4e3a\u79c1\u6709\u5730\u5740\u4fdd\u7559\u3002</p> <p>\u5bf9\u4e8e\u6709 Internet \u8bbf\u95ee\u9700\u6c42\u800c\u5185\u90e8\u53c8\u4f7f\u7528\u79c1\u6709\u5730\u5740\u7684\u7f51\u7edc\uff0c\u5c31\u8981\u5728\u7ec4\u7ec7\u7684\u51fa\u53e3\u4f4d\u7f6e\u90e8\u7f72 NAT \u7f51\u5173\uff0c\u5728\u62a5\u6587\u79bb\u5f00\u79c1\u7f51\u8fdb\u5165 Internet \u65f6\uff0c\u5c06\u6e90 IP \u66ff\u6362\u4e3a\u516c\u7f51\u5730\u5740\uff0c\u901a\u5e38\u662f\u51fa\u53e3\u8bbe\u5907\u7684\u63a5\u53e3\u5730\u5740\u3002\u4e00\u4e2a\u5bf9\u5916\u7684\u8bbf\u95ee\u8bf7\u6c42\u5728\u5230\u8fbe\u76ee\u6807\u4ee5\u540e\uff0c\u8868\u73b0\u4e3a\u7531\u672c\u7ec4\u7ec7\u51fa\u53e3\u8bbe\u5907\u53d1\u8d77\uff0c\u56e0\u6b64\u88ab\u8bf7\u6c42\u7684\u670d\u52a1\u7aef\u53ef\u5c06\u54cd\u5e94\u7531 Internet \u53d1\u56de\u51fa\u53e3\u7f51\u5173\u3002\u51fa\u53e3\u7f51\u5173\u518d\u00a0\u5c06\u76ee\u7684\u5730\u5740\u66ff\u6362\u4e3a\u79c1\u7f51\u7684\u6e90\u4e3b\u673a\u5730\u5740\uff0c\u53d1\u56de\u5185\u90e8\u3002\u8fd9\u6837\u4e00\u6b21\u7531\u79c1\u7f51\u4e3b\u673a\u5411\u516c\u7f51\u670d\u52a1\u7aef\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u5c31\u5728\u901a\u4fe1\u4e24\u7aef\u5747\u65e0\u611f\u77e5\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u3002\u4f9d\u636e\u8fd9\u79cd\u6a21\u578b\uff0c\u6570\u91cf\u5e9e\u5927\u7684\u5185\u7f51\u4e3b\u673a\u5c31\u4e0d\u518d\u9700\u8981\u516c\u6709 IP \u5730\u5740\u4e86\u3002\u8fd9\u4e5f\u5c31\u662fNAT\uff08Network Address Translation\uff0c\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09\u505a\u7684\u4e8b\u60c5\u3002</p> <p>NAT \u7f13\u89e3\u4e86 IPV4 \u5730\u5740\u4e0d\u591f\u7528\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u9690\u85cf\u79c1\u6709\u7f51\u7edc\uff0c\u8fbe\u5230\u4fdd\u62a4\u79c1\u6709\u7f51\u7edc\u7684\u76ee\u7684\u3002\u4f46\u662f\u4e5f\u5e26\u6765\u5f88\u591a\u95ee\u9898\uff1a</p> <ol> <li>NAT \u8fdd\u53cd\u4e86 IP \u7684\u7ed3\u6784\u6a21\u578b\uff1a\u7ed3\u6784\u6a21\u578b\u58f0\u660e\u6bcf\u4e2a IP \u5730\u5740\u5747\u552f\u4e00\u6807\u8bc6\u4e86\u4e16\u754c\u4e0a\u7684\u4e00\u53f0\u673a\u5668\u3002 Internet \u7684\u8f6f\u4ef6\u7ed3\u6784\u4e5f\u662f\u5efa\u7acb\u5728\u8fd9\u6837\u7684\u4e8b\u5b9e\u57fa\u7840\u4e4b\u4e0a\u7684\u3002</li> <li>NAT \u6253\u7834\u4e86 Internet \u7684\u7aef\u00b7\u7aef\u7684\u8fde\u63a5\u6a21\u578b\uff0c\u5373\u4efb\u4f55\u4e00\u4e2a\u4e3b\u673a\u53ef\u5728\u4efb\u4f55\u65f6\u95f4\u7ed9\u4efb\u4f55\u4e00\u53f0\u5176\u4ed6\u4e3b\u673a\u53d1\u9001\u6570\u636e\u5305\u3002\u56e0\u4e3a NAT \u76d2\u5b50\u4e0a\u7684\u6620\u5c04\u662f\u7531\u51fa\u5883\u6570\u636e\u5305\u5efa\u7acb\u7684\uff0c\u53ea\u80fd\u5728\u51fa\u5883\u6570\u636e\u5305\u4e4b\u540e\u5230\u8fbe\u7684\u5165\u5883\u6570\u636e\u5305\u624d\u80fd\u88ab\u63a5\u53d7\u3002</li> <li>NAT Internet \u4ece\u4e00\u4e2a\u65e0\u8fde\u63a5\u7f51\u7edc\u6539\u53d8\u6210\u4e00\u4e2a\u9762\u5411\u8fde\u63a5\u7f51\u7edc\u7279\u6709\u7684\u5f62\u5f0f\u3002\u95ee\u9898\u5728\u4e8e NAT \u76d2\u5b50\u5fc5\u987b\u4e3a\u6bcf\u4e00\u4e2a\u4ece\u5b83\u8fd9\u91cc\u7ecf\u8fc7\u7684\u8fde\u63a5\u7ef4\u62a4\u5fc5\u8981\u7684\u4fe1\u606f\uff08\u5373\u6620\u5c04\u5173\u7cfb\uff09\u3002\u8ba9\u7f51\u7edc\u7ef4\u62a4\u8fde\u63a5\u72b6\u6001\u662f\u9762\u5411\u8fde\u63a5\u7f51\u7edc\u7684\u4e00\u79cd\u7279\u6027\uff0c\u800c\u4e0d\u662f\u65e0\u8fde\u63a5\u7f51\u7edc\u7684\u7279\u6027\u3002\u5982\u679c NAT \u76d2\u5b50\u5d29\u6e83\uff0c\u5e76\u4e14\u5b83\u7684\u6620\u5c04\u8868\u4e22\u5931\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709 TCP \u8fde\u63a5\u90fd\u5c06\u88ab\u6467\u6bc1\u3002</li> <li>NAT \u8fdd\u53cd\u4e86\u6700\u57fa\u672c\u7684\u534f\u8bae\u5206\u5c42\u89c4\u5219\uff1a\u7b2c k \u5c42\u4e0d\u5e94\u8be5\u5bf9\u7b2c k+1 \u5c42\u5728\u672c\u5c42\u7684\u6709\u6548\u8f7d\u8377\u5b87\u6bb5\u4e2d\u653e\u4ec0\u4e48\u4f5c\u4efb\u4f55\u5047\u8bbe\u3002\u8fd9\u6761\u57fa\u672c\u539f\u5219\u53ef\u4ee5\u4fdd\u8bc1\u5c42\u4e0e\u5c42\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002</li> <li>Internet \u4e0a\u7684\u8fdb\u7a0b\u5e76\u4e0d\u4e00\u5b9a\u5fc5\u987b\u4f7f\u7528 TCP \u6216\u8005 UDP \u3002\u5982\u679c\u673a\u5668 \u4e0a\u7684\u4e00\u4e2a\u7528\u6237\u51b3\u5b9a\u4f7f\u7528\u4e00\u79cd\u65b0\u7684\u4f20\u8f93\u534f\u8bae\u4e0e\u673a\u5668 \u4e0a\u7684\u7528\u6237\u8fdb\u884c\u901a\u8bdd\uff08\u6bd4\u5982\uff0c\u4e00\u4e2a\u591a\u5a92\u4f53\u5e94\u7528\uff09\uff0c\u90a3\u4e48\uff0c\u7531\u4e8e NAT \u7684\u4ecb\u5165\uff0c\u8fd9\u6837\u7684\u5e94\u7528\u5c06\u65e0\u6cd5\u5de5\u4f5c\uff0c\u56e0\u4e3a NAT \u76d2\u5b50\u5c06\u65e0\u6cd5\u6b63\u786e\u5730\u5b9a\u4f4d\u5230 TCP Source port\u3002</li> <li>\u6709\u4e9b\u5e94\u7528\u4ee5\u89c4\u5b9a\u7684\u65b9\u5f0f\u4f7f\u7528\u591a\u4e2a TCP/IP \u8fde\u63a5\u6216\u8005 UDP \u7aef\u53e3\u3002\u4f8b\u5982\uff0c\u6807\u51c6\u7684\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff08FTP, File Transfer Protocol) \u5728\u6570\u636e\u5305\u6b63\u6587\u63d2\u5165\u5730\u5740\uff0c\u63a5\u6536\u65b9\u6b63\u6587\u4e2d\u63d0\u53d6\u51fa\u8fd9\u4e9b\u5730\u5740\uff0c\u5e76\u4f7f\u7528\u5b83\u4eec\u3002\u6240\u4ee5 FTP \u670d\u52a1\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e13\u95e8\u4e3a\u6b64\u6253\u4e2a\u8865\u4e01\u3002</li> </ol> <p>\u5982\u679c\u8bf4\u4e00\u5f00\u59cb\u6211\u4eec\u5c31\u80fd\u8ba4\u8bc6\u5230 32 \u4f4d\u7684 IP \u5730\u5740\u4e0d\u591f\u800c\u4f7f\u7528 IPv6 \u5c31\u4e0d\u7528 NAT \u8fd9\u4e2a\u6253\u8865\u4e01\u7684\u534f\u8bae\u4e86\uff0c\u7136\u800c\u8fd9\u5c31\u662f\u73b0\u5b9e\uff0c\u73b0\u5b9e\u662f\u53d7\u5236\u4e8e\u5386\u53f2\u7684\u53d1\u5c55\u8fdb\u7a0b\u7684\u3002\u53e6\u5916\uff0c\u73b0\u5728\u7edd\u5927\u591a\u6570\u7684\u4e3b\u673a\u90fd\u5904\u5728\u5185\u7f51\u5185\u901a\u8fc7 NAT \u534f\u8bae\u8bbf\u95ee Internet\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/NAT/#nat_1","title":"NAT \u7684\u5206\u7c7b","text":"<p>RFC3489\uff0cNAT Variations\u3002</p> <ul> <li>Full Cone NAT\uff08\u4e00\u5bf9\u4e00 NAT\uff09\uff1a\u628a\u6240\u6709\u76f8\u540c\uff08internal IP address\uff0cport\uff09\u7684\u8bf7\u6c42\u6620\u5c04\u5230\u76f8\u540c\u7684\uff08external IP address\uff0cport\uff09\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u4e00\u4e2a\u5916\u90e8\u4e3b\u673a\u5747\u53ef\u901a\u8fc7\u8be5\u6620\u5c04\u53d1\u9001\u6570\u636e\u5305\u5230\u8be5\u5185\u90e8\u4e3b\u673a\u3002</li> <li>Restricted cone NAT\uff1a\u9650\u5236\u6027\u9525 NAT \u628a\u6240\u6709\u6765\u81ea\u76f8\u540c\uff08internal IP address\uff0cport\uff09\u7684\u8bf7\u6c42\u6620\u5c04\u5230\u76f8\u540c\u7684\uff08external IP address\uff0cport\uff09\u3002\u4f46\u662f, \u548c\u5168\u9525 NAT \u4e0d\u540c\u7684\u662f\uff1a\u53ea\u6709\u5f53\u5185\u90e8\u4e3b\u673a\u5148\u7ed9\u5916\u90e8\u4e3b\u673a\uff08\u67d0 IP \u5730\u5740\uff09\u53d1\u9001\u6570\u636e\u5305, \u8be5\u5916\u90e8\u4e3b\u673a\uff08\u8be5 IP \u5730\u5740\uff09\u624d\u80fd\u5411\u8be5\u5185\u90e8\u4e3b\u673a\u53d1\u9001\u6570\u636e\u5305\u3002</li> <li>Port restricted NAT\uff1a\u7aef\u53e3\u9650\u5236\u6027\u9525 NAT \u4e0e\u9650\u5236\u6027\u9525 NAT \u7c7b\u4f3c, \u4e0d\u8fc7\u53c8\u591a\u4e86\u7aef\u53e3\u53f7\u7684\u9650\u5236, \u5373\u53ea\u6709\u5185\u90e8\u4e3b\u673a\u5148\u5411\uff08\u67d0\u5916\u90e8\u5730\u5740\uff1a\u67d0\u7aef\u53e3\u53f7\uff09\u5bf9\u53d1\u9001\u6570\u636e\u5305, \uff08\u8be5\u5916\u90e8\u4e3b\u673a\uff1a\u8be5\u7aef\u53e3\u53f7\uff09\u624d\u80fd\u4f7f\u7528\u7279\u5b9a\u7684\u7aef\u53e3\u53f7\u5411\u5185\u90e8\u4e3b\u673a\u53d1\u9001\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\uff0c\u4e0a\u9762\u4e09\u79cd\u7c7b\u578b\u4f9d\u6b21\u66f4\u52a0\u4e25\u683c\u3002</li> <li>Symmetric NAT\uff1a\u5bf9\u79f0\u578b NAT \u628a\u4ece\u76f8\u540c\uff08internal IP address\uff0cport\uff09\u5230\u76f8\u540c\uff08destination IP address\uff0cport\uff09\u5730\u5740\u548c\u7aef\u53e3\u7684\u6240\u6709\u8bf7\u6c42\uff0c\u90fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\uff08external IP address\uff0cport\uff09\u3002\u5e76\u4e14\u8fd9\u4e2a\u6620\u5c04\u53ea\u6709\u5728\u6240\u4ee5\u8fd9\u4e5f\u662f\u4e5f\u8fd9\u662f\u6700\u4e25\u683c\u7684\u7c7b\u578b\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/NAT/#nat-tunnel","title":"NAT Tunnel","text":"<p>NAT Tunnel\uff0c\u7ffb\u8bd1\u505a NAT \u6253\u6d1e\u6216\u8005 NAT \u7a7f\u900f\uff0c\u7b80\u5355\u5730\u8bb2\u5c31\u662f\u8981\u8ba9\u5904\u4e8e\u4e0d\u540c NAT \u7f51\u7edc\u4e0b\u7684\u4e24\u4e2a\u8282\u70b9 (Peer) \u5efa\u7acb\u76f4\u63a5\u8fde\u63a5\u3002\u6362\u8a00\u4e4b\uff0c\u53cc\u65b9\u8981\u4ea4\u6362\u81ea\u5df1\u7684\u00a0<code>(\u5916\u7f51IP,TCP src port')</code>\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/","title":"Quick UDP Internet Connections","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#packet","title":"\u6570\u636e\u5305 Packet","text":"<p>\u6570\u636e\u5305\u7531\u6570\u636e\u5305\u5934\u548c\u8377\u8f7d\uff08\u82e5\u5e72\u5e27\uff09\u7ec4\u6210\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#_1","title":"\u6570\u636e\u5305\u5934","text":"<p>QUIC\u534f\u8bae\u4e2d\u7684\u6570\u636e\u5305\u5206\u4e3a\u4e24\u79cd\u5934\u90e8\u683c\u5f0f\uff1a\u957f\u5305\u5934\uff08Long Header\uff09\u548c\u77ed\u5305\u5934\uff08Short Header\uff09\u3002\u8fd9\u4e24\u79cd\u5305\u5934\u683c\u5f0f\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\u548c\u534f\u8bae\u9636\u6bb5\u3002</p> <ul> <li>\u957f\u5305\u5934\uff1a\u4e3b\u8981\u7528\u4e8eQUIC\u8fde\u63a5\u7684\u5efa\u7acb\u9636\u6bb5\uff0c\u5305\u62ec\u521d\u59cb\u63e1\u624b\u3001\u7248\u672c\u534f\u5546\u4ee5\u53ca\u5176\u4ed6\u4e0d\u9700\u8981\u6700\u5c0f\u5316\u5f00\u9500\u7684\u63a7\u5236\u6d88\u606f\u3002\u957f\u5305\u5934\u5305\u542b\u8db3\u591f\u7684\u4fe1\u606f\u6765\u8bc6\u522b\u548c\u6784\u5efa\u65b0\u7684QUIC\u8fde\u63a5\u3002\u957f\u5305\u5934\u53c8\u5206\u4e3a\u521d\u59cb\u30010-RTT\u3001\u63e1\u624b\u3001\u91cd\u8bd54\u7c7b\u3002</li> <li>\u77ed\u5305\u5934\uff1a\u7528\u4e8e\u8fde\u63a5\u5efa\u7acb\u540e\u7684\u6570\u636e\u4f20\u8f93\u9636\u6bb5\u3002\u8bbe\u8ba1\u66f4\u4e3a\u7b80\u6d01\uff0c\u4ee5\u51cf\u5c11\u4f20\u8f93\u5f00\u9500\uff0c\u9002\u7528\u4e8e\u5e38\u89c4\u5e94\u7528\u6570\u636e\u7684\u4f20\u8f93\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#_2","title":"\u5e27","text":"<p>QUIC \u5e27\u662f QUIC\u00a0\u5305\u7684\u6709\u6548\u8f7d\u8377\u3002\u6839\u636e RFC\u00a09000\u7b2c19\u7ae0\uff0cQUIC \u5e27\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b</p> <ul> <li>\u586b\u5145\u5e27\uff08Padding Frame\uff09\uff1a\u987e\u540d\u601d\u4e49\uff0c\u7528\u6765\u63d0\u9ad8\u6570\u636e\u5305\u5927\u5c0f\uff0c\u5185\u5bb9\u6ca1\u6709\u610f\u4e49\u3002</li> <li>Ping\u5e27\uff1a\u987e\u540d\u601d\u4e49\uff0c\u9a8c\u8bc1\u5bf9\u7aef\u662f\u5426\u6d3b\u8dc3\uff0c\u65e0\u5185\u5bb9\u3002</li> <li>ACK\u5e27\uff1a</li> <li>\u6d41\u91cd\u5236\u5e27\uff08Reset Stream Frame\uff09\uff1a\u5173\u95ed\u6d41\u7684\u53d1\u9001\u7aef\u3002</li> <li>\u505c\u6b62\u53d1\u9001\u5e27\uff08Stop Sending Frame\uff09</li> <li>\u52a0\u5bc6\u5e27\uff08Crypto Frame\uff09</li> <li>\u65b0\u4ee4\u724c\u5e27\uff08New Token Frame\uff09</li> <li>\u6d41\u5e27\uff08Stream Frame\uff09</li> <li>\u6700\u5927\u6570\u636e\u91cf\u5e27\uff08Max Data Frame\uff09</li> <li>\u6700\u5927\u6d41\u6570\u636e\u91cf\u5e27\uff08Max Stream Data Frame\uff09</li> <li>\u6700\u5927\u6d41\u5e27</li> <li>\u6570\u636e\u963b\u585e\u5e27</li> <li>\u6d41\u6570\u636e\u963b\u585e\u5e27</li> <li>\u6d41\u963b\u585e\u5e27</li> <li>\u65b0\u8fde\u63a5ID\u5e27\uff08New Connection ID Frame\uff09</li> <li>\u505c\u7528\u8fde\u63a5ID\u5e27</li> <li>\u901a\u9053\u6311\u6218\u5e27</li> <li>\u56de\u590d\u901a\u9053\u5e27</li> <li>\u8fde\u63a5\u5173\u95ed\u5e27</li> <li>\u63e1\u624b\u5b8c\u6210\u5e27</li> <li>\u6269\u5c55\u5e27</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#_3","title":"\u72b6\u6001\u673a","text":"<p>QUIC\u6709\u4e24\u79cd\u63e1\u624b\u65b9\u5f0f\uff0c\u5982\u56fe</p> <p></p> <p>Initial 1-RTT \u63e1\u624b\uff1a\u9002\u7528\u4e8e\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u9996\u6b21\u5efa\u7acb\u8fde\u63a5\u7684\u60c5\u51b5\u3002\u8fd9\u79cd\u65b9\u5f0f\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef\u53d1\u9001\u521d\u59cb\u5305\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\u57fa\u4e8e\u56fa\u5b9asalt\u7684\u6d3e\u751f\u521d\u59cb\u5bc6\u94a5\u53d1\u9001\u52a0\u5bc6\u7684\u63e1\u624b\u6570\u636e\uff0c\u5305\u62ec\u52a0\u5bc6\u5957\u4ef6\u5efa\u8bae\u3001TLS\u7248\u672c\u548c\u5176\u4ed6\u521d\u59cb\u4fe1\u606f\u3002</li> <li>\u670d\u52a1\u5668\u54cd\u5e94\uff1a\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u521d\u59cb\u5305\uff0c\u7528\u540c\u6837\u7684\u65b9\u5f0f\u89e3\u5bc6\u5e76\u5904\u7406\u8bf7\u6c42\u3002\u7136\u540e\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u670d\u52a1\u5668\u914d\u7f6e\u3001TLS\u8bc1\u4e66\u548c\u5176\u5b83\u52a0\u5bc6\u53c2\u6570\u7684\u52a0\u5bc6\u54cd\u5e94\u3002</li> <li>\u63e1\u624b\u5b8c\u6210\uff1a\u53cc\u65b9\u4ea4\u6362\u5b8c\u6bd5\u5fc5\u8981\u7684\u52a0\u5bc6\u4fe1\u606f\u540e\uff0c\u751f\u6210\u5e94\u7528\u6570\u636e\u52a0\u5bc6\u5bc6\u94a5\uff0c\u5e76\u5b8c\u6210\u63e1\u624b\uff0c\u5f00\u59cb\u5b89\u5168\u7684\u6570\u636e\u4f20\u8f93\u3002</li> </ul> <p>0-RTT\u63e1\u624b\uff1a\u9002\u7528\u4e8e\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u524d\u5df2\u7ecf\u5efa\u7acb\u8fc7\u8fde\u63a5\uff0c\u5e76\u4e14\u5ba2\u6237\u7aef\u6709\u7f13\u5b58\u7684\u670d\u52a1\u5668\u4fe1\u606f\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u6b65\u9aa4\u5305\u62ec\uff1a</p> <ul> <li>0-RTT\u6570\u636e\u53d1\u9001\uff1a\u5ba2\u6237\u7aef\u4e0d\u4ec5\u53d1\u9001\u521d\u59cb\u63e1\u624b\u6d88\u606f\uff0c\u8fd8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5f80\u8fd4\u4e2d\u53d1\u9001\u52a0\u5bc6\u7684\u5e94\u7528\u6570\u636e\u3002\u8fd9\u662f\u56e0\u4e3a\u5ba2\u6237\u7aef\u4f7f\u7528\u4ece\u4e4b\u524d\u4f1a\u8bdd\u4e2d\u4fdd\u5b58\u7684\u5bc6\u94a5\u6750\u6599\u6765\u52a0\u5bc6\u8fd9\u4e9b\u6570\u636e\u3002</li> <li>\u670d\u52a1\u5668\u5904\u7406\u548c\u54cd\u5e94\uff1a\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u6570\u636e\u540e\uff0c\u9996\u5148\u5904\u74060-RTT\u6570\u636e\u3002\u5982\u679c\u4f1a\u8bdd\u4fe1\u606f\u6709\u6548\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u5e76\u5feb\u901f\u53d1\u9001\u54cd\u5e94\u3002\u5426\u5219\uff0c\u670d\u52a1\u5668\u4f1a\u53d1\u9001\u65b0\u7684\u53c2\u6570\u548c\u5bc6\u94a5\u66f4\u65b0\u4fe1\u606f\uff0c\u5c31\u548cInitial 1-RTT\u63e1\u624b\u5dee\u4e0d\u591a\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#_4","title":"\u6d41\u591a\u8def\u590d\u7528","text":"<p>TCP\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u6309\u5e8f\u5230\u8fbe\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u8282\u6d41\u4e2d\u95f4\u4e22\u5931\u4e86\u90e8\u5206\u6570\u636e\uff0c\u540e\u7eed\u7684\u6570\u636e\u90fd\u4f1a\u56e0\u6b64\u963b\u585e\u3002\u8fd9\u79cd\u60c5\u51b5\u53eb\u505a\u5934\u963b\u585e\uff08Head-of-Line Blocking, HOL blocking\uff09\u3002\u5982\u679c\u5e94\u7528\u5c42\u53d1\u9001\u7684\u82e5\u5e72\u4e2a\u6570\u636e\u5305\u4e4b\u95f4\uff0c\u6ca1\u6709\u76f8\u4e92\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd9\u79cd\u6309\u5e8f\u5230\u8fbe\u7684\u884c\u4e3a\u53cd\u800c\u4f1a\u6210\u4e3a\u7f3a\u70b9\u3002</p> <p>\u4e3a\u6b64\u67092\u4e2a\u89e3\u51b3\u529e\u6cd5\uff1a</p> <ol> <li>\u5982\u679c\u82e5\u5e72\u4e2a\u6570\u636e\u5305\u4e4b\u95f4\u6ca1\u6709\u5148\u540e\u987a\u5e8f\uff0c\u53ef\u4ee5\u5efa\u7acb\u591a\u4e2aTCP\u8fde\u63a5\u5206\u522b\u4f20\u8f93\u6570\u636e\u3002\u8fd9\u4e5f\u662fHTTP/1.1\u91c7\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002</li> <li>\u91cd\u65b0\u641e\u4e00\u4e2a\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u5141\u8bb8\u4f20\u9012\u591a\u4e2a\u5b57\u8282\u6d41\u3002\u8fd9\u5c31\u662f\u6d41\u591a\u8def\u590d\u7528\uff0cQUIC\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/QUIC/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>RFC 9000 - QUIC: A UDP-Based Multiplexed and Secure Transport</li> <li>RFC9000\u4e2d\u6587\uff1aQUIC\u4f20\u8f93\u534f\u8bae</li> <li>State machine inference of QUIC</li> <li>The QUIC Transport Protocol: Design and Internet-Scale Deployment</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/","title":"TCP","text":"<p>TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u662f\u4e00\u4e2a\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u4e3b\u8981\u7528\u4e8e\u5728\u7f51\u7edc\u4e2d\u53ef\u9760\u5730\u4f20\u8f93\u6570\u636e\u3002</p> <ul> <li>\u9762\u5411\u8fde\u63a5\uff1a\u901a\u4fe1\u524d\u5fc5\u987b\u5efa\u7acb\u8fde\u63a5(\u4e09\u6b21\u63e1\u624b)\uff0c\u901a\u4fe1\u7ed3\u675f\u8981\u91ca\u653e\u8fde\u63a5(\u56db\u6b21\u6325\u624b)</li> <li>\u53ef\u9760\u4f20\u8f93\uff1a\u6307\u7684\u662fTCP\u534f\u8bae\u80fd\u4fdd\u8bc1 \u63a5\u6536\u5230\u7684\u6240\u6709\u5b57\u8282\u90fd\u4e0e\u53d1\u9001\u7684\u5b57\u8282 \u76f8\u540c\u4e14\u6709\u5e8f\u3002</li> <li>\u9762\u5411\u5b57\u8282\u6d41\uff1a\u628a\u5e94\u7528\u5c42\u6570\u636e\u770b\u4f5c\u5b57\u8282\u6d41\uff0c\u6839\u636eMSS(\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6)\u5212\u5206\u6570\u636e\u6bb5\uff0c\u4e0d\u4fdd\u7559\u5e94\u7528\u5c42\u7684\u62a5\u6587\u8fb9\u754c\u3002</li> <li>\u6d41\u91cf\u63a7\u5236\uff1a\u6ed1\u52a8\u7a97\u53e3\u673a\u5236</li> <li>\u62e5\u585e\u63a7\u5236\uff1a\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001\u5feb\u91cd\u4f20\u3001\u5feb\u6062\u590d</li> <li>\u5168\u53cc\u5de5\u901a\u4fe1\uff1a\u6570\u636e\u53ef\u4ee5\u540c\u65f6\u53cc\u5411\u4f20\u8f93</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#tcp_1","title":"TCP \u62a5\u6587\u683c\u5f0f","text":"<pre><code> 0                   1                   2                   3   \n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 \n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |       Destination Port        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Sequence Number                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Acknowledgment Number                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Data |           |U|A|P|R|S|F|                               |\n| Offset| Reserved  |R|C|S|S|Y|I|            Window             |\n|       |           |G|K|H|T|N|N|                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Checksum            |         Urgent Pointer        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Options                    |    Padding    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             data                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n</code></pre> <ul> <li>\u6e90\u7aef\u53e3(16\u4f4d)\uff1a\u5b58\u50a8\u53d1\u9001\u5e94\u7528\u7a0b\u5e8f\u7684\u7aef\u53e3\u53f7\uff0c\u7528\u4e8e\u786e\u5b9a\u6570\u636e\u4f20\u8f93\u7684\u6765\u6e90\u5e94\u7528\u3002</li> <li>\u76ee\u6807\u7aef\u53e3(16\u4f4d)\uff1a\u5305\u542b\u63a5\u6536\u5e94\u7528\u7a0b\u5e8f\u7684\u7aef\u53e3\u53f7\uff0c\u786e\u4fdd\u6570\u636e\u80fd\u88ab\u53d1\u9001\u5230\u6b63\u786e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u5e8f\u5217\u53f7(32\u4f4d)\uff1a\u901a\u8fc7\u6709\u5e8f\u5206\u6bb5\u548c\u5728\u63a5\u6536\u7aef\u91cd\u7ec4\uff0c\u786e\u4fdd\u6570\u636e\u6309\u6b63\u786e\u987a\u5e8f\u63a5\u6536\u3002</li> <li>\u786e\u8ba4\u53f7(32\u4f4d)\uff1a\u5305\u542b\u4e0b\u4e00\u4e2a\u9884\u671f\u7684\u5e8f\u5217\u53f7\uff0c\u7528\u4e8e\u786e\u8ba4\u5df2\u63a5\u6536\u5230\u7684\u6570\u636e\u3002</li> <li>\u6570\u636e\u504f\u79fb(4\u4f4d)\uff1a\u8868\u793aTCP\u6570\u636e\u8d1f\u8f7d\u7684\u8d77\u59cb\u70b9\uff0c\u540c\u65f6\u5b58\u50a8TCP\u5934\u90e8\u7684\u5927\u5c0f\u3002</li> <li>\u63a7\u5236\u6807\u5fd7(9\u4f4d)\uff1aTCP\u4f7f\u7528\u591a\u4e2a\u63a7\u5236\u6807\u5fd7\u6765\u7ba1\u7406\u901a\u4fe1\u3002\u4e3b\u8981\u6807\u5fd7\u5305\u62ec\uff1a<ul> <li>SYN(\u540c\u6b65)\uff1a\u8d1f\u8d23\u5efa\u7acb\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u7684\u8fde\u63a5</li> <li>ACK(\u786e\u8ba4)\uff1a\u7528\u4e8e\u4f20\u8f93\u5bf9\u6570\u636e\u63a5\u6536\u60c5\u51b5\u7684\u786e\u8ba4</li> <li>FIN(\u7ed3\u675f)\uff1a\u8868\u660eTCP\u8fde\u63a5\u662f\u5426\u7ec8\u6b62</li> <li>RST(\u91cd\u7f6e)\uff1a\u4e3b\u8981\u7528\u4e8e\u5728\u53d1\u751f\u9519\u8bef\u65f6\u91cd\u7f6e\u8fde\u63a5</li> </ul> </li> <li>\u7a97\u53e3\u5927\u5c0f(16\u4f4d)\uff1a\u6307\u5b9a\u53d1\u9001\u65b9\u63a5\u6536\u7a97\u53e3\u7684\u5927\u5c0f\u3002</li> <li>\u6821\u9a8c\u548c(16\u4f4d)\uff1a\u7528\u4e8e\u68c0\u6d4b\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6570\u636e\u662f\u5426\u635f\u574f\u3002</li> <li>\u7d27\u6025\u6307\u9488(16\u4f4d)\uff1a\u6307\u5411\u7d27\u6025\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u3002</li> <li>\u53ef\u9009\u9009\u9879(\u53ef\u53d8\u957f\u5ea6)\uff1a\u8868\u793a\u4e0d\u540c\u7684TCP\u9009\u9879\u3002</li> <li>\u6570\u636e\u8d1f\u8f7d\uff1a\u5305\u542b\u5b9e\u9645\u4f20\u8f93\u7684\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u3002</li> </ul> <p>\u5bf9\u6bd4 UDP \u7684\u62a5\u6587\u683c\u5f0f\uff0c\u4e0d\u96be\u53d1\u73b0TCP\u7684\u62a5\u6587\u4e2d\u6dfb\u52a0\u4e86\u5f88\u591a\u5b57\u6bb5\uff0c\u7528\u6765\u652f\u6301TCP\u72ec\u6709\u7684\u7279\u6027\uff0c\u5177\u4f53\u7684\u8bf4\uff1a</p> <ul> <li>\u9762\u5411\u8fde\u63a5\uff1a\u63a7\u5236\u6807\u5fd7\u5e2e\u52a9\u6807\u8bb0\u8fde\u63a5\u5efa\u7acb\u8fc7\u7a0b\u7684\u72b6\u6001\u3002</li> <li>\u53ef\u9760\u4f20\u8f93\uff1a\u5229\u7528ACK\u63a7\u5236\u6807\u5fd7\u786e\u8ba4\u5e94\u7b54\uff0c\u5229\u7528\u5e8f\u5217\u53f7\u3001\u786e\u8ba4\u53f7\u548c\u8d85\u65f6\u91cd\u4f20\u6765\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u6709\u5e8f\uff0c\u6821\u9a8c\u548c\u6765\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002</li> <li>\u9762\u5411\u5b57\u8282\u6d41\uff1a\u5229\u7528\u5e8f\u5217\u53f7\u548c\u786e\u8ba4\u53f7\u786e\u5b9a\u5b57\u8282\u6d41\u7684\u4f4d\u7f6e\u3002</li> <li>\u6d41\u91cf\u63a7\u5236\uff1a\u5229\u7528\u7a97\u53e3\u5927\u5c0f\u6765\u534f\u5546\u53d1\u9001\u901f\u7387\u3002</li> </ul> <p>\u8fd8\u6709\u4e00\u4e9b\u6ca1\u6709\u63d0\u5230\u7684\u589e\u52a0\u7684\u5934\u90e8\u5b57\u6bb5\uff1a</p> <ul> <li>\u7531\u4e8e\u5934\u90e8\u957f\u5ea6\u53ef\u53d8\uff0c\u6240\u4ee5\u6709\u6570\u636e\u504f\u79fb\u5b57\u6bb5\u3002</li> <li>\u7d27\u6025\u6307\u9488\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u4e0d\u662f\u6240\u6709\u7684TCP\u534f\u8bae\u7684\u5b9e\u73b0\u90fd\u652f\u6301\u3002\u66f4\u591a\u662f\u4f9d\u8d56\u5e94\u7528\u5c42\u7684\u4f18\u5148\u7ea7\u673a\u5236\u6765\u5904\u7406\u7d27\u6025\u6570\u636e\u3002</li> <li>\u53ef\u9009\u9009\u9879\uff1a\u5e38\u7528\u7684\u6709<ul> <li>MSS\uff1a\u8fd9\u4e2a\u9009\u9879\u7528\u4e8e\u544a\u77e5\u5bf9\u65b9\u80fd\u591f\u63a5\u6536\u7684\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3aMTU\u51cf\u53bbTCP\u548cIP\u5934\u90e8\u7684\u957f\u5ea6\uff0c\u4ee5\u907f\u514dIP\u5206\u7247\u3002\u5bf9\u4e8e\u4ee5\u592a\u7f51\uff0cMSS\u901a\u5e38\u4e3a1460\u5b57\u8282\uff081500 - 40\uff09\u3002</li> <li>Selective ACK\uff1a\u652f\u6301\u9009\u62e9\u786e\u8ba4\u673a\u5236\u3002\u8be5\u9009\u9879\u5141\u8bb8\u63a5\u6536\u65b9\u544a\u77e5\u53d1\u9001\u65b9\u54ea\u4e9b\u6570\u636e\u5305\u5df2\u7ecf\u6210\u529f\u63a5\u6536\uff0c\u54ea\u4e9b\u6570\u636e\u5305\u4e22\u5931\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u4f20\u7684\u6570\u91cf\uff0c\u63d0\u9ad8\u7f51\u7edc\u6548\u7387\u3002</li> <li>Timestamp\uff1a\u65f6\u95f4\u6233\u4fe1\u606f\uff0c\u8fd9\u6709\u52a9\u4e8e\u8ba1\u7b97\u5f80\u8fd4\u65f6\u95f4\uff08RTT\uff09\u3002</li> <li>NOP\uff1a\u7528\u4e8e\u6269\u5c55TCP\u7a97\u53e3\u5927\u5c0f\uff0c\u4ee5\u652f\u6301\u66f4\u5927\u7684\u63a5\u6536\u7f13\u51b2\u533a\uff0c\u9002\u5e94\u9ad8\u5e26\u5bbd\u5ef6\u8fdf\u7684\u7f51\u7edc\u73af\u5883\u3002</li> </ul> </li> </ul> <p>\u5728\u4e0b\u6587\u8fd8\u4f1a\u91cd\u65b0\u63d0\u5230\u8fd9\u4e9b\u673a\u5236\u548c\u5b57\u6bb5\uff0c\u4e0d\u7528\u5728\u6b64\u5904\u5b8c\u5168\u7406\u89e3\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#tcp_2","title":"TCP \u6709\u9650\u72b6\u6001\u673a","text":"<p>\u6709\u9650\u72b6\u6001\u673a\u5728\u7f51\u7edc\u9886\u57df\u662f\u63cf\u8ff0\u4e00\u4e2a\u534f\u8bae\u7684\u5e38\u7528\u624b\u6bb5\uff0cTCP\u534f\u8bae\u7684\u72b6\u6001\u673a\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#-","title":"\u5efa\u7acb\u8fde\u63a5 - \u4e09\u6b21\u63e1\u624b","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u8fde\u63a5 TCP \u8fde\u63a5\uff0c\u901a\u4fe1\u53cc\u65b9\u5fc5\u987b\u4ece\u5bf9\u65b9\u4e86\u89e3\u5982\u4e0b\u4fe1\u606f\uff1a</p> <ol> <li>\u5bf9\u65b9\u62a5\u6587\u53d1\u9001\u7684\u5f00\u59cb\u5e8f\u53f7\u3002</li> <li>\u5bf9\u65b9\u53d1\u9001\u6570\u636e\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002</li> <li>\u80fd\u88ab\u63a5\u6536\u7684\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6 MSS\u3002</li> <li>\u88ab\u652f\u6301\u7684 TCP \u9009\u9879\u3002</li> </ol> <p>\u4e09\u6b21\u63e1\u624b\uff08\u5982\u679c\u4e00\u5207\u987a\u5229\uff09\u7684\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001 <code>SYN</code> \u5305\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165 <code>SYN_SENT</code> \u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\u3002<ul> <li><code>SYN = 1</code>\uff0c\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\u3002</li> <li><code>seq = x</code>\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u521d\u8bc6\u5e8f\u53f7\u3002</li> </ul> </li> <li>\u670d\u52a1\u5668\u6536\u5230 <code>SYN</code> \u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684 <code>SYN</code>\uff08<code>ack=j+1</code>\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a <code>SYN</code> \u5305\uff08<code>seq=k</code>\uff09\uff0c\u5373 <code>SYN+ACK</code> \u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165 <code>SYN_RECEIVED</code> \u72b6\u6001\u3002 \u7406\u8bba\u4e0a\uff0c\u5728\u8fd9\u4e2a\u65f6\u5019\uff0c\u670d\u52a1\u5668\u8981\u4e3a\u8be5\u8fde\u63a5\u5206\u914d\u8d44\u6e90\uff0c\u4f46\u662f\u8fd9\u610f\u5473\u7740 SYN \u6cdb\u6d2a\u653b\u51fb\u53ef\u80fd\u53d1\u751f\u3002<ul> <li><code>SYN = 1</code>\uff0c\u8868\u793a\u540c\u610f\u5efa\u7acb\u8fde\u63a5\u3002</li> <li><code>seq = y</code>\uff0c\u4f5c\u4e3a\u670d\u52a1\u5668\u53d1\u9001\u7684\u521d\u8bc6\u5e8f\u53f7\u3002</li> <li><code>ACK = 1</code>\uff0c\u8868\u793a\u6536\u5230\u7528\u6237\u53d1\u9001\u7684 <code>SYN</code> \u5305\u3002\u5b9e\u9645\u4e0a\uff0c\u4e4b\u540e\u53d1\u9001\u7684\u6bcf\u4e00\u4e2a\u5305\u7684 <code>ACK</code> \u90fd\u4e3a 1\u3002</li> <li><code>ack = x+1</code>\uff0c\u8868\u793a\u8bf7\u6c42\u7684\u4e0b\u4e00\u4e2a\u5b57\u8282\u662f <code>x+1</code>\uff08\u8868\u793a <code>x</code> \u4e4b\u524d\u7684\u5b57\u8282\u90fd\u5df2\u7ecf\u6536\u5230\uff09</li> </ul> </li> <li>\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684 <code>SYN+ACK</code> \u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305 <code>ACK</code>(<code>ack=k+1</code>)\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u8fdb\u5165 <code>ESTABLISHED</code>\uff08TCP \u8fde\u63a5\u6210\u529f\uff09\u72b6\u6001\u3002<ul> <li><code>ACK = 1</code>\uff0c\u8868\u793a\u786e\u8ba4\u6536\u5230\u4e86\u670d\u52a1\u5668\u7684 <code>SYN+ACK</code> \u5305\u3002</li> <li><code>ack = y+1</code>\uff0c\u8868\u793a\u8bf7\u6c42\u7684\u4e0b\u4e00\u4e2a\u5b57\u8282\u662f <code>y+1</code>\uff08\u8868\u793a <code>y</code> \u4e4b\u524d\u7684\u5b57\u8282\u90fd\u5df2\u7ecf\u6536\u5230\uff09</li> <li><code>seq = x+1</code>\uff0c\u6b64\u65f6\u53ef\u4ee5\u5f00\u59cb\u643a\u5e26\u6570\u636e\u4e86\uff0c\u5f00\u59cb\u7684\u5e8f\u53f7\u662f <code>x+1</code>\u3002</li> </ul> </li> <li>\u670d\u52a1\u5668\u6536\u5230\u5ba2\u6237\u7aef\u7684<code>ACK</code>\u5305\uff0c\u8fdb\u5165<code>ESTABLISHED</code>\u72b6\u6001\u3002\u4e09\u6b21\u63e1\u624b\u5b8c\u6210\u3002</li> </ol> <p>\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\uff1a</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#-_1","title":"\u65ad\u5f00\u8fde\u63a5 - \u56db\u6b21\u6325\u624b","text":"<p>\u56db\u6b21\u6325\u624b\uff08\u5982\u679c\u4e00\u5207\u987a\u5229\uff09\u7684\u8fc7\u7a0b\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u662f\u76f8\u5bf9\u7684\u6982\u5ff5\uff0c\u4e0d\u4e00\u5b9a\u548c\u4e0a\u9762\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u76f8\u540c\uff09\uff1a</p> <ol> <li>\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a <code>FIN</code> \u5305\u3002\u6b64\u65f6\u5ba2\u6237\u7aef \u5173\u95ed\u81ea\u5df1\u7684\u53d1\u9001\u901a\u9053\uff0c\u8fdb\u5165<code>FIN WAIT 1</code>\u72b6\u6001\u3002<ul> <li><code>FIN = 1</code>\uff0c\u8868\u793a \u6211\u4e0d\u4f1a\u518d\u5411\u4f60\u53d1\u9001\u6570\u636e\u4e86\u3002</li> <li><code>seq = u</code>\uff0c<code>u</code> \u662f\u8fde\u7740\u4e0a\u6b21\u53d1\u9001\u7684\u5305\u7684\u3002\u4e0d\u8fc7 FIN \u62a5\u6587\u5373\u4f7f\u4e0d\u643a\u5e26\u6570\u636e\uff0c\u4e5f\u6d88\u8017\u4e00\u4e2a\u5e8f\u53f7\u3002<code>ACK = 1</code>\uff0c\u4e0a\u9762\u5f3a\u8c03\u8fc7\uff0c\u9664\u4e86\u4e00\u5f00\u59cb\u7684 <code>SYN</code> \u5305\uff0c\u5176\u4ed6\u7684 <code>ACK</code> \u90fd\u4e3a 1\u3002\u8fd9\u4e2a\u548c\u666e\u901a\u7684\u5305\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002</li> </ul> </li> <li>\u670d\u52a1\u7aef\u6536\u5230<code>FIN</code>\u5305\uff0c\u8fdb\u5165<code>CLOSE WAIT</code>\u72b6\u6001\uff0c\u53d1\u9001\u4e00\u4e2a <code>ACK</code>\u3002\u8868\u793a\u786e\u8ba4\u6536\u5230\u4e86 <code>FIN</code> \u5305\u3002<ul> <li><code>ACK = 1, ack = u+1</code>\u3002</li> </ul> </li> <li>\u670d\u52a1\u5668\u8fd8\u53ef\u4ee5\u63a5\u7740\u53d1\u9001\u6570\u636e\uff0c\u53d1\u9001\u5b8c\u6210\u540e\uff0c\u4e5f\u53d1\u9001 <code>FIN</code> \u5305\u8868\u793a\u6211\u8981\u5173\u95ed\u81ea\u5df1\u7684\u53d1\u9001\u901a\u9053\u4e86\u3002\u8fdb\u5165<code>LAST ACK</code>\u72b6\u6001\u3002<ul> <li><code>FIN = 1</code>\uff0c\u8868\u793a \u6211\u4e0d\u4f1a\u518d\u5411\u4f60\u53d1\u9001\u6570\u636e\u4e86\u3002</li> <li><code>ACK = 1, ack = u+1 seq =v</code> \u3002</li> </ul> </li> <li>\u5ba2\u6237\u7aef\u6536\u5230<code>FIN</code>\u5305\uff0c\u8fdb\u5165<code>TIME WAIT</code>\u72b6\u6001\uff0c\u7b49\u5f852MSL\u65f6\u95f4\u540e\u5173\u95ed\u8fde\u63a5\uff0c\u8fdb\u5165<code>CLOSE</code>\u72b6\u6001\u3002\u53d1\u9001<code>ACK``ACK = 1, ack = v+1</code>\uff0c\u8868\u793a\u786e\u8ba4\u6536\u5230\u670d\u52a1\u5668\u53d1\u9001\u7684\u65ad\u5f00\u8bf7\u6c42\u3002<ul> <li>\u4e3a\u4ec0\u4e48\u9700\u8981 TIME_WAIT \u72b6\u6001\u5462\uff1f\u4e00\u4e2a\u662f\u8ba9\u65e7\u8fde\u63a5\u7684\u5305\u5728\u7f51\u7edc\u4e0a\u6d88\u5931\uff0c\u9632\u6b62\u5f71\u54cd\u65b0\u8fde\u63a5\uff08\u5982\u679c\u65b0\u7684 TCP \u56db\u5143\u7ec4\u548c\u8001\u7684\u4e00\u6a21\u4e00\u6837\uff09\u3002\u4e00\u4e2a\u662f\u5982\u679c ACK \u4e22\u4e86\uff0c\u670d\u52a1\u5668\u91cd\u4f20 FIN \u53ef\u4ee5\u54cd\u5e94\uff08\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u662f\u54cd\u5e94 RST\uff0c\u4e0d\u8fc7\u4f5c\u7528\u5dee\u4e0d\u591a\u5566\uff0c\u90fd\u662f\u628a\u8fde\u63a5\u5173\u6389\uff09\u3002</li> </ul> </li> <li>\u670d\u52a1\u5668\u6536\u5230<code>ACK</code>\u5305\uff0c\u5173\u95ed\u8fde\u63a5\uff0c\u8fdb\u5165<code>CLOSE</code>\u72b6\u6001\u3002</li> </ol>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#keepalive","title":"Keepalive \u673a\u5236","text":"<p>\u5982\u679c\u5ba2\u6237\u7aef\u610f\u5916\u6b7b\u4ea1\uff0c\u6ca1\u6709\u53d1 FIN\uff0c\u96be\u9053\u8fd9\u4e2a\u8fde\u63a5\u5c31\u6301\u7eed\u5230\u670d\u52a1\u5668\u91cd\u542f\uff1f\u6309\u7167\u4e0a\u9762TCP\u7684\u72b6\u6001\u673a\u770b\uff0c\u786e\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u663e\u7136\uff0c\u5b9e\u8df5\u4e0a\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002</p> <p>Keepalive\u673a\u5236\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u65f6\u95f4\u6bb5\uff0c\u5982\u679c\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5185\u6ca1\u6709\u4efb\u4f55\u548c\u8fde\u63a5\u76f8\u5173\u7684\u6d3b\u52a8\uff08\u6570\u636e\u5305\u7684\u4ea4\u4e92\uff09\uff0cTCP \u7684 Keepalive \u673a\u5236\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u65f6\u95f4\u6bb5\uff0c\u53d1\u9001\u4e00\u4e2a\u63a2\u6d4b\u62a5\u6587\uff0c\u5982\u679c \u8fde\u7eed\u7684\u82e5\u5e72\u4e2a \u63a2\u6d4b\u62a5\u6587\u6ca1\u6709\u5f97\u5230\u54cd\u5e94\uff0c\u8ba4\u4e3a\u5f53\u524d\u7684 TCP \u8fde\u63a5\u5df2\u7ecf\u6b7b\u4ea1\u3002</p> <p>Linux \u5b9e\u73b0\u4e86 Keepalive \u673a\u5236\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#_1","title":"\u53ef\u9760\u4f20\u8f93","text":"<p>TCP\u534f\u8bae\u5e76\u4e0d\u4f9d\u8d56\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\uff08\u901a\u5e38\u5c31\u662fIP\u534f\u8bae\uff09\uff0c\u6765\u4fdd\u8bc1\u81ea\u8eab\u7684\u53ef\u9760\u6027\u3002\u5728\u5e95\u5c42\u534f\u8bae\u4f1a\u51fa\u9519\u3001\u4e71\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u4e0d\u51fa\u9519\u3001\u4e0d\u4e71\u5e8f\uff1f\u524d\u8005\u4e3b\u8981\u9760\u7684\u662f\u6821\u9a8c\u548c\uff0c\u540e\u8005\u5219\u9760\u8d85\u65f6\u91cd\u4f20\u673a\u5236\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#_2","title":"\u8d85\u65f6\u91cd\u4f20","text":"<p>\u975e\u5e38\u76f4\u89c2\u7684\u7406\u89e3\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0cTCP\u53d1\u9001\u7684\u5b57\u8282\u6d41\uff0c\u5c31\u662f\u53d1\u9001\u82e5\u5e72\u4e2aTCP\u62a5\u6587\u3002\u7531\u4e8e\u5e95\u5c42\u534f\u8bae\u4e0d\u80fd\u4fdd\u8bc1\u987a\u5e8f\uff0c\u6240\u4ee5\u7ed9TCP\u62a5\u6587\u7f16\u4e2a\u53f7\uff0c\u59821\u30012\u30013\u30014\u30015\uff08\u4ec5\u505a\u4e3e\u4f8b\uff0cTCP\u7684\u201c\u7f16\u53f7\u201d\u662f\u5b57\u8282\u6d41\u504f\u79fb\uff09\u3002\u63a5\u6536\u8005\u5982\u679c\u6536\u52301\u30015\u30014\u30012\uff0c\u81ea\u5df1\u6392\u62101\u30012\u30014\u30015\uff0c\u544a\u8bc9\u53d1\u9001\u65b9\uff1a\u201c\u6211\u57282\u4e4b\u524d\u7684\u6570\u636e\u90fd\u6536\u5230\u4e86\u201d\u3002\u53d1\u9001\u65b9\u4e45\u4e45\u7b49\u4e0d\u52303\u4e4b\u540e\u7684\u786e\u8ba4\u6d88\u606f\uff0c\u5c31\u4f1a\u91cd\u53d13\u30014\u30015\u3002</p> <p>\u66f4\u4e25\u8c28\u7684\u8bf4\uff0cTCP\u534f\u8bae\u5728\u53d1\u9001\u6570\u636e\u7684\u65f6\u5019\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5f53\u8d85\u8fc7\u6307\u5b9a\u7684\u65f6\u95f4\u540e\uff0c\u6ca1\u6709\u6536\u5230\u5bf9\u65b9\u7684\u5bf9\u5e94\u7684 <code>ACK</code> \u786e\u8ba4\u5e94\u7b54\u62a5\u6587\uff0c\u5c31\u4f1a\u91cd\u53d1\u8be5\u6570\u636e\u3002\u6ca1\u6709\u6536\u5230\u5bf9\u5e94<code>ACK</code>\u6709\u53ef\u80fd\u662f\u53d1\u9001\u7684\u62a5\u6587\u4e22\u5931\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u5bf9\u5e94\u7684 <code>ACK</code> \u786e\u8ba4\u5e94\u7b54\u62a5\u6587\u4e22\u5931\u3002</p> <p>\u8fd9\u4e2a\u6307\u5b9a\u7684\u65f6\u95f4\u8bbe\u7f6e\u6210\u591a\u5c11\u5408\u9002\u5462\uff1fTCP \u91c7\u7528\u4e00\u79cd\u81ea\u9002\u5e94\u7b97\u6cd5\uff0c\u4ed6\u8bb0\u5f55\u4e00\u4e2a\u62a5\u6587\u7684\u53d1\u51fa\u65f6\u95f4\u548c\u76f8\u5e94\u6536\u5230\u786e\u8ba4\u7684\u65f6\u95f4\u3002\u8fd9\u4e24\u4e2a\u65f6\u95f4\u4e4b\u5dee\u88ab\u79f0\u4e3a\u62a5\u6587\u6bb5\u7684 RTT(Round-Trip Time\uff0c\u5f80\u8fd4\u65f6\u95f4)\u3002TCP \u4fdd\u7559\u4e86 RTT \u7684\u4e00\u4e2a \u52a0\u6743\u5e73\u5747 RTT\uff0c\u968f\u7740\u6bcf\u6b21\u65b0\u6d4b\u91cf\u7684 RTT \u53d8\u5316\u3002\u6211\u4eec\u7684\u8d85\u65f6\u91cd\u4f20\u65f6\u95f4\u7565\u5927\u4e8e RTT\u3002</p> <p>\u6700\u57fa\u672c\u7684\u8d85\u65f6\u91cd\u4f20\u5b58\u5728\u7684\u95ee\u9898\u662f\uff0c\u8d85\u65f6\u5468\u671f\u53ef\u80fd\u8f83\u957f\u3002\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u52a0\u901f\u5462\uff1f\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u91cd\u4f20\u673a\u5236\uff1aTCP \u89c4\u5b9a\u5f53\u53d1\u9001\u65b9\u63a5\u6536\u5230\u5bf9\u540c\u4e00\u4e2a\u62a5\u6587\u6bb5\u7684 3 \u4e2a\u5197\u4f59 ACK \u65f6\uff0c\u5c31\u53ef\u4ee5\u786e\u8ba4\u4e22\u5931\u3002\u4f8b\u5982\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u4e86 1\uff0c2\uff0c3\uff0c4\uff0c5 \u7684\u62a5\u6587\u6bb5\uff0c\u4f46\u662f\u63a5\u53d7\u65b9\u53ea\u6536\u5230\u4e86 1\uff0c3\uff0c4\uff0c5\uff0c\u90a3\u4e48\u63a5\u6536\u65b9\u5c31\u53d1\u9001 3 \u4e2a\u5bf9 1 \u53f7\u62a5\u6587\u7684\u5197\u4f59 ACK\uff0c\u8868\u793a\u81ea\u5df1\u5e0c\u671b\u6536\u5230 2 \u53f7\u62a5\u6587\u6bb5\u3002\u8fd9\u79cd\u6280\u672f\u8fd8\u7528\u5728 \u62e5\u585e\u63a7\u5236 \u4e2d\u3002</p> <p>\u5feb\u901f\u91cd\u4f20\u673a\u5236\u4ecd\u6709\u95ee\u9898\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u53d1\u9001\u65b9\u5728\u6536\u5230 3 \u4e2a\u5bf9 1 \u53f7\u62a5\u6587\u7684\u5197\u4f59 ACK\uff0c\u5e76\u4e0d\u77e5\u9053\u540e\u7eed\u76843\u30014\u30015\u662f\u5426\u5df2\u7ecf\u9001\u8fbe\u3002\u6700\u597d\u662f\u901a\u8fc7\u67d0\u79cd\u673a\u5236\uff0c\u8ba9\u53d1\u9001\u65b9\u53ea\u91cd\u4f20\u7f3a\u5931\u7684\u62a5\u6587\u3002\u8fd9\u53eb\u505a\u9009\u62e9\u786e\u8ba4\u673a\u5236\uff0c\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684Selective ACK \u53ef\u9009\u5b57\u6bb5\uff08\u4e5f\u5c31\u610f\u5473\u7740\u4e0d\u662f\u6240\u6709\u7684TCP\u5b9e\u73b0\u90fd\u652f\u6301\uff0c\u7406\u8bba\u4e0aTCP\u7684\u5b9e\u73b0\u5728\u6ca1\u6536\u52302\u7684\u60c5\u51b5\u4e0b\u6536\u52303\u30014\u30015\uff0c\u662f\u53ef\u4ee5\u628a\u4ed6\u4eec\u5168\u90e8\u6254\u6389\u7684\uff09\u3002\u4ecd\u4ee5\u4e0a\u9762\u7684\u4f8b\u5b50\u4e3e\u4f8b\uff0c\u6b64\u65f6ACK=1\uff0cSACK=3-5\uff0c\u53d1\u9001\u65b9\u5c31\u77e5\u9053\uff0c\u53ea\u4f202\u548c\u540e\u7eed\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#_3","title":"\u6821\u9a8c\u548c","text":"<p>\u5e94\u7528\u5c42\u5f80\u5f80\u4f7f\u7528\u54c8\u5e0c\u7b97\u6cd5\u4f5c\u4e3a\u6821\u9a8c\u6570\u636e\uff0c\u5982md5/sha-3\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u7684\u8ba1\u7b97\u5f00\u9500\u592a\u5927\u4e86\u3002TCP\u7684\u6821\u9a8c\u548c\u4f7f\u7528\u5f02\u6216\u3002\u6821\u9a8c\u548c\u7684\u8ba1\u7b97\u6d89\u53ca\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u4f2a\u9996\u90e8\u7684\u6784\u9020\uff1a\u5728\u8ba1\u7b97\u6821\u9a8c\u548c\u65f6\uff0c\u9996\u5148\u9700\u8981\u6784\u9020\u4e00\u4e2a12\u5b57\u8282\u7684\u4f2a\u9996\u90e8\u3002\u4f2a\u9996\u90e8\u5305\u542b\u6e90IP\u5730\u5740\u3001\u76ee\u7684IP\u5730\u5740\u3001\u4fdd\u7559\u5b57\u8282\uff08\u7f6e0\uff09\u3001\u4f20\u8f93\u5c42\u534f\u8bae\u53f7\uff08TCP\u4e3a6\uff09\u548cTCP\u62a5\u6587\u957f\u5ea6\uff08\u5305\u62ecTCP\u9996\u90e8\u548c\u6570\u636e\uff09\u3002</li> <li>\u6570\u636e\u5206\u7ec4\uff1a\u5c06\u4f2a\u9996\u90e8\u3001TCP\u9996\u90e8\u548cTCP\u6570\u636e\u5206\u4e3a16\u4f4d\u7684\u5b57\u3002\u5982\u679c\u603b\u957f\u5ea6\u4e3a\u5947\u6570\u4e2a\u5b57\u8282\uff0c\u5219\u5728\u6700\u540e\u589e\u52a0\u4e00\u4e2a\u5168\u4e3a0\u7684\u5b57\u8282\u4ee5\u5f62\u621016\u4f4d\u5b57\u3002</li> <li>\u53cd\u7801\u6c42\u548c\uff1a\u5c06\u6240\u670916\u4f4d\u5b57\u8fdb\u884c\u53cd\u7801\u76f8\u52a0\uff0c\u8fdb\u4f4d\u4e5f\u8981\u7d2f\u52a0\u3002\u8ba1\u7b97\u65f6\uff0c\u6821\u9a8c\u548c\u5b57\u6bb5\u672c\u8eab\u88ab\u7f6e\u4e3a0\uff0c\u4ee5\u907f\u514d\u5f71\u54cd\u8ba1\u7b97\u7ed3\u679c\u3002</li> <li>\u53d6\u53cd\uff1a\u6700\u540e\uff0c\u5bf9\u8ba1\u7b97\u7ed3\u679c\u53d6\u53cd\uff0c\u5f97\u5230\u7684\u503c\u5373\u4e3aTCP\u7684\u6821\u9a8c\u548c\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab\u586b\u5165TCP\u9996\u90e8\u7684\u6821\u9a8c\u548c\u5b57\u6bb5\u4e2d\u3002</li> </ol> <p>\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u68c0\u6d4b\u51fa\u5927\u591a\u6570\u4f20\u8f93\u9519\u8bef\uff0c\u8ba1\u7b97\u7b80\u5355\uff0c\u5f00\u9500\u5c0f\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u4fdd\u8bc1100%\u68c0\u6d4b\u51fa\u6240\u6709\u9519\u8bef\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TCP/#_4","title":"\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236","text":"<p>\u7531\u4e8e\u7f51\u7edc\u7684\u5404\u5c42\u534f\u8bae\uff0c\u5728\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\u4e0a\u4f7f\u7528\u7684\u601d\u60f3\u662f\u7c7b\u4f3c\u7684\uff0c\u5c06\u4ed6\u4eec\u7edf\u4e00\u653e\u5230\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\u6587\u7ae0\u4e2d\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TLS/","title":"TLS","text":"<p>TLS\uff08\u4f20\u8f93\u5c42\u5b89\u5168\u534f\u8bae\uff0cTransport Layer Security\uff09\u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u5b89\u5168\u534f\u8bae\uff0c\u8bbe\u8ba1\u7528\u6765\u4e3a\u7f51\u7edc\u901a\u4fe1\u63d0\u4f9b\u9690\u79c1\u548c\u6570\u636e\u5b8c\u6574\u6027\u3002TLS \u662f SSL\uff08\u5b89\u5168\u5957\u63a5\u5c42\uff0cSecure Sockets Layer\uff09\u7684\u540e\u7ee7\u8005\u3002HTTPS\u5373HTTP+TLS\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/TLS/#tls_1","title":"TLS\u7684\u5173\u952e\u7279\u6027","text":"<ul> <li>\u52a0\u5bc6\uff1aTLS \u63d0\u4f9b\u52a0\u5bc6\u670d\u52a1\uff0c\u786e\u4fdd\u6570\u636e\u5728\u4e92\u8054\u7f51\u4e0a\u7684\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u88ab\u7a83\u542c\u3002</li> <li>\u8eab\u4efd\u9a8c\u8bc1\uff1aTLS \u652f\u6301\u4f7f\u7528\u8bc1\u4e66\u6765\u9a8c\u8bc1\u901a\u4fe1\u53cc\u65b9\u7684\u8eab\u4efd\uff0c\u8fd9\u4e9b\u8bc1\u4e66\u901a\u5e38\u7531\u53ef\u4fe1\u7684\u7b2c\u4e09\u65b9\u8bc1\u4e66\u9881\u53d1\u673a\u6784\uff08CA\uff09\u7b7e\u53d1\u3002</li> <li>\u6570\u636e\u5b8c\u6574\u6027\uff1aTLS \u63d0\u4f9b\u6d88\u606f\u5b8c\u6574\u6027\u68c0\u67e5\uff0c\u786e\u4fdd\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u88ab\u7be1\u6539\u3002</li> </ul> <p>\u5982\u679c\u8bc1\u4e66\u6ca1\u6709CA\u8ba4\u8bc1\uff0c\u53ef\u80fd\u906d\u53d7\u4e2d\u95f4\u4eba\u653b\u51fb\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/UDP/","title":"UDP","text":"<p>UDP \u7684\u4e00\u4e9b\u7279\u5f81\uff1a</p> <ul> <li>\u65e0\u8fde\u63a5\uff1a\u901a\u4fe1\u53cc\u65b9\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\u3002\u3002</li> <li>\u4e0d\u53ef\u9760\uff1a\u4e0d\u4fdd\u8bc1\u6570\u636e\u5305\u6309\u5e8f\u5230\u8fbe\uff0c\u4e5f\u4e0d\u4fdd\u8bc1\u6570\u636e\u5305\u4e00\u5b9a\u80fd\u5230\u8fbe\u3002</li> <li>\u9762\u5411\u62a5\u6587\uff1a\u5e94\u7528\u5c42\u4ea4\u7ed9UDP\u591a\u957f\u7684\u62a5\u6587\uff0cUDP\u5c31\u7167\u6837\u53d1\u9001\uff0c\u4e0d\u4f1a\u62c6\u5206\u6216\u5408\u5e76\u6570\u636e\u3002</li> </ul> <p>UDP \u662f\u4e00\u4e2a\u4e0d\u53ef\u9760\u7684\u534f\u8bae\u3002\u6240\u4ee5\u901a\u5e38\u7528\u4e8e\u5e76\u4e0d\u9700\u8981\u53ef\u9760\u4f20\u8f93\u7684\u5e94\u7528\uff0c\u5982\u76f4\u64ad\u3001\u5728\u7ebf\u6e38\u620f\u3001\u8bed\u97f3\u901a\u8bdd\u7b49\u3002\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e UDP \u5efa\u7acb\u4e00\u4e2a\u53ef\u9760\u4f20\u8f93\uff0c\u6bd4\u5982 Google \u7684 QUIC \u534f\u8bae\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/UDP/#udp_1","title":"UDP \u62a5\u6587\u683c\u5f0f","text":"<p>UDP header \u5c01\u88c5\u7684\u989d\u5916\u4fe1\u606f\u975e\u5e38\u7684\u5c11\uff0c\u53ea\u6709\u5fc5\u8981\u7684\u4fe1\u606f\u3002<code>src port|dst port|length|checksum</code>\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u56fe\u3002\u548c UDP \u6253\u4ea4\u9053\uff0c\u5c31\u50cf\u548c IP \u76f4\u63a5\u6253\u4ea4\u9053\u4e00\u6837\u3002</p> <p></p> <ul> <li>Checksum: \u8ba1\u7b97\u6709\u4e9b\u7279\u6b8a\u3002\u8ba1\u7b97\u4f2a\u9996\u90e8\u3001UDP \u9996\u90e8\u3001UDP Data \u7684\u68c0\u9a8c\u548c\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4f2a\u9996\u90e8\u548c\u586b\u5145\u7684 0\uff08\u5728 UDP \u7684\u957f\u5ea6\u4e0d\u662f\u5076\u6570\u4e2a\u5b57\u8282\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u586b\u5165 0\uff09\u662f\u4e0d\u4f20\u8f93\u7684\uff0c\u4ec5\u4ec5\u4f5c\u4e3a\u8ba1\u7b97 checksum \u4f7f\u7528\u3002</li> <li>length: UDP header + UDP data \u7684\u957f\u5ea6\u3002\u5355\u4f4d\u662f\u5b57\u8282\u3002</li> </ul>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/ZMQ/","title":"ZMQ","text":"<p>ZeroMQ (also known as \u00d8MQ, 0MQ, or zmq) looks like an embeddable networking library but acts like a concurrency framework. It gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast.</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","title":"index","text":""},{"location":"%E5%B7%A5%E5%85%B7/","title":"\u5de5\u5177\u548c\u6559\u7a0b","text":"<p>\u8bb0\u5f55\u4e00\u4e9b\u6709\u7528\u7684\u5c0f\u5de5\u5177\uff0c\u548c\u4e00\u4e9b\u5e38\u7528\u5927\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Docker/","title":"Docker","text":"","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Docker/#case-1","title":"Case 1: \u4ee3\u7406","text":"<p>\u56fd\u5185\u5fc5\u987b\u8981\u9762\u5bf9\u7684\u95ee\u9898\u3002\u56fd\u5185\u7684Docker Hub\u955c\u50cf\u57fa\u672c\u90fd\u88ab\u5c01\u4e86\uff0c\u800c\u76f4\u63a5\u62c9\u592a\u6162\uff0c\u6709\u65f6\u6839\u672c\u8bbf\u95ee\u4e0d\u4e0a\u3002\u5fc5\u987b\u6302\u4ee3\u7406\u3002</p> <p>\u53c2\u8003Docker\u7684\u5b98\u65b9\u94fe\u63a5\uff1ahttps://docs.docker.com/engine/cli/proxy/\u8fd9\u91cc\u7ed9\u51fa\u7684\u65b9\u6cd5\u662f\u4fee\u6539<code>~/.docker/config.json</code></p> <p>\u914d\u7f6e HTTP/HTTPS \u7f51\u7edc\u4ee3\u7406 | Docker \u2014 \u4ece\u5165\u95e8\u5230\u5b9e\u8df5 \u8fd9\u91cc\u7ed9\u51fa\u7684\u65b9\u6cd5\u662f\u4fee\u6539<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>\u3002\u90fd\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Docker/#case-2-dockerfile","title":"Case 2: Dockerfile","text":"<p>\u5982\u679c\u8981\u628a\u81ea\u5df1\u7a0b\u5e8f\u7684\u8fd0\u884c\u73af\u5883\u53d1\u5e03\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u7f16\u5199Dockerfile\u6587\u4ef6\uff0c\u968f\u6e90\u4ee3\u7801\u4e00\u8d77\u53d1\u5e03\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Docker/#case-3-docker-compose","title":"Case 3: Docker Compose","text":"<p>Compose \u662f\u7528\u4e8e\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668 Docker \u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\u3002\u901a\u8fc7 Compose\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 YML \u6587\u4ef6\u6765\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7684\u6240\u6709\u670d\u52a1\u3002\u7136\u540e\uff0c\u4f7f\u7528\u4e00\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4ece YML \u6587\u4ef6\u914d\u7f6e\u4e2d\u521b\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/","title":"Git","text":"<p>\u5728\u73b0\u5728GPT\u5982\u6b64\u725b\u903c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u4e0d\u7528\u7279\u522b\u53bb\u8bb0Git\u547d\u4ee4\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#git-in-action","title":"Git In Action","text":"","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-1","title":"Case 1 \u6682\u65f6\u5207\u6362\u5206\u652f","text":"<p>\u5982\u679c\u6211\u6b63\u5728\u4e00\u4e2a\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u7a81\u7136\u6709\u4e8b\u8981\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f\u770b\u770b\uff0c\u53ef\u4ee5\u4f7f\u7528<code>git stash</code> \u547d\u4ee4\uff0c\u5148\u6682\u5b58\u4e00\u4e0b\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002</p> <p>\u7b49\u5f85\u5207\u6362\u56de\u539f\u6765\u7684\u5206\u652f\uff0c\u7528<code>git stash pop</code>\u5c31\u53ef\u4ee5\u6062\u590d\u539f\u6765\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002</p> <p>\u8fd9\u662f\u6700\u57fa\u672c\u7684\u7528\u6cd5\u3002\u4e8b\u5b9e\u4e0a<code>git stash</code>\u53ef\u4ee5\u6682\u5b58\u5f88\u591a\u4efd\u5de5\u4f5c\u533a\uff0c\u4f7f\u7528<code>git stash list</code>\u67e5\u770b\u6682\u5b58\u60c5\u51b5\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-2","title":"Case 2 \u63d0\u4ea4\u4e86\u5783\u573e\u6587\u4ef6","text":"<p>\u4e0d\u5c0f\u5fc3\u628a\u4e0d\u8981\u7684\u6587\u4ef6commit\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u518d\u6dfb\u52a0\u5230.gitignore\u5df2\u7ecf\u6765\u4e0d\u53ca\u4e86\u3002\u53ef\u4ee5\u4eceGit\u7d22\u5f15\u4e2d\u5220\u9664\u6587\u4ef6\uff1a</p> <pre><code>git rm --cache xxx\n</code></pre> <p>\u7136\u540e\u5c06\u6587\u4ef6\u6dfb\u52a0\u5230.gitignore\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-3","title":"Case 3 \u8fdc\u7a0b\u670d\u52a1\u5668\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93","text":"<p>\u9700\u8981\u5728\u670d\u52a1\u5668\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\uff0c\u4f46\u662f\u4e0d\u60f3\u628a\u81ea\u5df1\u7684\u79c1\u94a5\u4f20\u5230\u670d\u52a1\u5668\u3002\u53ef\u4ee5\u4f7f\u7528SSH Agent Forwarding</p> <p>\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u542f\u52a8ssh-agent,\u5e76\u6dfb\u52a0\u4f60\u7684GitHub\u79c1\u94a5:</p> <pre><code>eval `ssh-agent` \nssh-add ~/.ssh/github_rsa\n</code></pre> <p>\u7136\u540e\u4f7f\u7528<code>-A</code>\u53c2\u6570\u8fde\u63a5\u5230\u670d\u52a1\u5668\u5e76\u542f\u7528Agent Forwarding:</p> <pre><code>ssh -A user@your_server\n</code></pre> <p>\u53ef\u4ee5\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u8fd0\u884c<code>ssh-add -L</code>\u67e5\u770b\u662f\u5426\u5df2\u7ecf\u6dfb\u52a0\u79c1\u94a5\u3002 </p> <p>\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u4e0a\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u4e86,\u800c\u65e0\u9700\u5c06\u79c1\u94a5\u62f7\u8d1d\u5230\u670d\u52a1\u5668\u4e0a\u3002\u53ea\u8981\u4fdd\u8bc1\u672c\u5730\u8ba1\u7b97\u673a\u7684\u5b89\u5168\u6027\u5373\u53ef\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-4-commit","title":"Case 4 Commit\u89c4\u8303","text":"<p>\u914c\u60c5\u9075\u5b88\u4e0b\u9762\u7684\u89c4\u8303\u3002\u5b8c\u6574\u7248\u53c2\u8003https://www.conventionalcommits.org/en/v1.0.0-beta.4/</p> <pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n// \u7a7a\u4e00\u884c\n&lt;body&gt;\n// \u7a7a\u4e00\u884c\n&lt;footer&gt;\n</code></pre> type \u63cf\u8ff0 feat \u65b0\u589efeature fix \u4fee\u590dbug docs \u4fee\u6539\u6587\u6863\uff0c\u5982readme.md style \u4fee\u6539\u4ee3\u7801\u683c\u5f0f\uff0c\u4e0d\u6539\u53d8\u4ee3\u7801\u903b\u8f91\uff0c\u5982\u9017\u53f7\u3001\u7f29\u8fdb\u3001\u7a7a\u683c\u7b49 refactor \u4ee3\u7801\u91cd\u6784\uff0c\u6ca1\u6709\u65b0\u589e\u529f\u80fd\u6216\u4fee\u590dbug perf \u4f18\u5316\u76f8\u5173\uff0c\u5982\u63d0\u5347\u6027\u80fd\u3001\u7528\u6237\u4f53\u9a8c\u7b49 test \u6d4b\u8bd5\u7528\u4f8b\uff0c\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5 ci \u4fee\u6539ci\u914d\u7f6e\u6587\u4ef6\u6216\u811a\u672c\uff0c\u5982jenkins fastlame chore \u4fee\u6539\u6784\u5efa\u811a\u672c\u3001\u6216\u8005\u589e\u52a0\u4f9d\u8d56\u5e93\u3001\u5de5\u5177\u7b49 revert \u56de\u6eda\u4e4b\u524d\u7684commit <p>scope\uff1acommit\u5f71\u54cd\u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u662f\u5f71\u54cd\u7684\u6587\u4ef6\u540d\u3001\u6a21\u5757\u540d\u3001\u7ec4\u4ef6\u540d\u3001\u56fd\u5bb6\u7b49\u3002 subject\uff1acommit\u7684\u7b80\u77ed\u63cf\u8ff0\u3002 body\uff1acommit\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002 footer\uff1a\u5907\u6ce8\uff0c\u901a\u5e38\u662fBreaking changes\u6216\u8005Closed issues</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-5-git","title":"Case 5 \u4fee\u6539 Git \u7684\u9ed8\u8ba4\u7f16\u8f91\u5668","text":"<pre><code>git config --global core.editor vim\n</code></pre>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Git/#case-6","title":"Case 6 \u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c","text":"<p>\u8fd9\u4e5f\u5206\u60c5\u51b5\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u6211\u53ea\u60f3\u56de\u53bb\u770b\u770b\u3002</p> <pre><code>git checkout [commit-hash]\n</code></pre> <p>\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\uff0c\u6211\u4e0d\u60f3\u8981\u4ece\u90a3\u65f6\u8d77\u7684\u6240\u6709\u4fee\u6539\u4e86\u3002\u5982\u679c\u4f60\u60f3\u8981\u5b8c\u5168\u56de\u5230\u67d0\u4e2a\u7248\u672c\uff0c\u5e76\u4e22\u5f03\u6240\u6709\u4e4b\u540e\u7684\u4fee\u6539\uff08\u5305\u62ec\u5de5\u4f5c\u76ee\u5f55\u548c\u6682\u5b58\u533a\u7684\u4fee\u6539\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u786c\u91cd\u5236\uff08\u7b2c\u4e00\u884c\uff09\uff1b\u5982\u679c\u4f60\u53ea\u60f3\u91cd\u7f6e Git \u5386\u53f2\u8bb0\u5f55\uff0c\u4f46\u4fdd\u7559\u66f4\u6539\u5728\u6682\u5b58\u533a\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u8f6f\u91cd\u5236\uff08\u7b2c\u4e8c\u884c\uff09\u3002</p> <pre><code>git reset --hard [commit-hash]\ngit reset --soft [commit-hash]\n</code></pre> <ol> <li>ww\u7684\u8d44\u6599\u4e0d\u9519 https://gitbook.tw/ </li> <li></li> </ol>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Linux/","title":"Linux","text":"<p>\u6b64\u5904\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u7684\u6307\u4ee4\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#shell-commands","title":"Shell Commands","text":""},{"location":"%E5%B7%A5%E5%85%B7/Linux/#pid-ps","title":"\u67e5\u627e\u8fdb\u7a0b pid <code>ps</code>","text":"<pre><code>ps aux | grep [name]\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#proc","title":"\u67e5\u770b\u8fdb\u7a0b\u5185\u5b58\u4f7f\u7528\u5927\u5c0f <code>/proc</code>","text":"<p>\u53ef\u4ee5\u901a\u8fc7<code>/proc</code>\u6587\u4ef6\u7cfb\u7edf\u5b8c\u6210\uff0c\u5728\u8f93\u51fa\u4e2d\u67e5\u627e <code>VmRSS</code>\uff08\u5b9e\u9645\u5185\u5b58\u4f7f\u7528\u91cf\uff09\u548c <code>VmSize</code>\uff08\u865a\u62df\u5185\u5b58\u5927\u5c0f\uff09\u3002</p> <pre><code>cat /proc/[pid]/status\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#lsofss","title":"\u67e5\u770b\u7aef\u53e3\u5360\u7528\u60c5\u51b5 <code>lsof</code>/<code>ss</code>","text":"<p><code>lsof</code>\uff08list open files\uff09\u662f\u4e00\u4e2a\u67e5\u770b\u6b63\u5728\u88ab\u8fdb\u7a0b\u4f7f\u7528\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5de5\u5177\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u7f51\u7edc\u5957\u63a5\u5b57\u3002<code>-i</code> \u9009\u9879\u7528\u6765\u663e\u793a\u7f51\u7edc\u76f8\u5173\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</p> <pre><code>lsof -i [:port]\n</code></pre> <p><code>ss</code>\uff08socket statistics\uff09\u547d\u4ee4\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u6548\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u663e\u793a\u5957\u63a5\u5b57\u4fe1\u606f\u3002\u67e5\u770b\u6240\u6709\u7aef\u53e3\u7684\u5360\u7528\u60c5\u51b5\u547d\u4ee4\u5982\u4e0b\uff0c\u60f3\u67e5\u770b\u7279\u5b9a\u7aef\u53e3\u53ef\u4ee5\u7ed3\u5408<code>grep [:port]</code>\u3002</p> <pre><code>ss -tuln\n</code></pre> <ul> <li><code>-t</code> \u663e\u793a TCP \u7aef\u53e3</li> <li><code>-u</code> \u663e\u793a UDP \u7aef\u53e3</li> <li><code>-l</code> \u5217\u51fa\u6b63\u5728\u76d1\u542c\u7684\u5957\u63a5\u5b57</li> <li><code>-n</code> \u907f\u514d\u8fdb\u884c\u670d\u52a1\u540d\u79f0\u89e3\u6790\uff08\u663e\u793a\u7aef\u53e3\u53f7\u800c\u4e0d\u662f\u670d\u52a1\u540d\uff09</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#tcp-tcpdump","title":"TCP\u8bf7\u6c42\u76d1\u63a7 <code>tcpdump</code>","text":"<p>\u4f8b\u5982\uff0c\u6211\u60f3\u76d1\u63a7\u4e3b\u673a\u5411192.168.0.52:8545\u7aef\u53e3\u53d1\u9001\u7684HTTP\u8bf7\u6c42\u3002</p> <pre><code>sudo tcpdump -i any dst 192.168.0.52 and port 8545 -w /path/to/logfile.pcap\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2apcap\u6587\u4ef6\u3002\u53ef\u4ee5\u4f7f\u7528wireshark\u5bf9\u4ed6\u8fdb\u884c\u53ef\u89c6\u5316\u5206\u6790\u3002\u6216\u8005\u7f16\u5199 Python \u811a\u672c\u6765\u5206\u6790 PCAP \u6587\u4ef6\u3002\u4f8b\u5982\uff0c\u4f7f\u7528Python\u89e3\u6790\u6240\u6709PCAP\u6587\u4ef6\u4e2d\u7684\u6240\u6709 HTTP POST \u8bf7\u6c42\uff1a</p> <pre><code>from scapy.all import *\n\ndef http_post_packets(pcap_file):\n    # \u8bfb\u53d6PCAP\u6587\u4ef6\n    count = 0\n    packets = rdpcap(pcap_file)\n\n    # \u8fc7\u6ee4\u5305\u542bHTTP POST\u8bf7\u6c42\u7684\u6570\u636e\u5305\n    for pkt in packets:\n        if pkt.haslayer(TCP) and pkt.haslayer(Raw):\n            # \u83b7\u53d6Raw\u5c42\u6570\u636e\n            payload = pkt[Raw].load.decode(errors='ignore')\n            # \u68c0\u67e5\u662f\u5426\u4e3aHTTP POST\u8bf7\u6c42\n            if \"POST\" in payload and payload.startswith(\"POST\"):\n                count += 1\n                src_ip = pkt[IP].src\n                dst_ip = pkt[IP].dst\n                src_port = pkt[TCP].sport\n                dst_port = pkt[TCP].dport\n                # \u5c1d\u8bd5\u4ece\u8bf7\u6c42\u4e2d\u83b7\u53d6\u8def\u5f84\n                path = payload.split(\" \")[1] if len(payload.split(\" \")) &gt; 1 else \"Unknown Path\"\n\n                # \u6253\u5370\u51fa\u8bf7\u6c42\u8be6\u60c5\n                print(f\"HTTP POST Request from {src_ip}:{src_port} to {dst_ip}:{dst_port}\")\n                print(f\"Path: {path}\")\n                print(f\"Payload:\\n{payload}\")  # \u6253\u5370\u90e8\u5206payload\u4ee5\u907f\u514d\u8fc7\u957f\n                print(\"-\" * 40)    \n\n    print(f\"Total HTTP POST requests: {count}\")\n\nif __name__ == \"__main__\":\n    # \u6307\u5b9aPCAP\u6587\u4ef6\u8def\u5f84\n    pcap_file_path = 'xxx.pcap'\n    http_post_packets(pcap_file_path)\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#http-curl","title":"\u6784\u9020HTTP\u8bf7\u6c42 <code>curl</code>","text":"<ul> <li><code>-X</code> \u6307\u5b9a Request Method</li> <li><code>-H</code> \u6307\u5b9a Request Head</li> <li><code>-d</code> \u6307\u5b9a Request Body</li> </ul> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"chain_id\": 1, \"attributes\": [\"Hot Wallet\"], \"limit\": 2000}' http://172.29.4.222:7001/label/address/by-attributes\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#ip","title":"\u67e5\u770b\u4e3b\u673aip\u5730\u5740","text":"<p>\u63a8\u8350\u4f7f\u7528<code>ip</code>\u547d\u4ee4\u800c\u4e0d\u662f<code>ifconfig</code>\u3002</p> <pre><code>ip addr show # or `ip a` in short\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#_1","title":"\u67e5\u627e\u6587\u4ef6","text":""},{"location":"%E5%B7%A5%E5%85%B7/Linux/#desktop-environment","title":"Desktop Environment","text":"<p>\u6211\u5e76\u4e0d\u60f3\u82b1\u5f88\u591a\u65f6\u95f4\u8ba9\u684c\u9762\u73af\u5883\u53d8\u5f97\u5f88\u6f02\u4eae\uff0c\u4f46\u662f\u4f5c\u4e3a\u65e5\u5e38\u4f7f\u7528\u7cfb\u7edf\u4e5f\u4e0d\u80fd\u592a\u4e11\u3002\u3002\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Linux/#flatpak","title":"Flatpak \u5e94\u7528\u5b57\u4f53","text":"<ul> <li>Linux \u4e0b\u7684\u5b57\u4f53\u8c03\u6821\u6307\u5357 - Leo's Field</li> <li>Flatpak \u5e94\u7528\u4e2d\u6587\u5b57\u4f53\u95ee\u9898 \u2013 Glaumar's Blog</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/","title":"Mkdocs + Obsidian + Github = Free Publish","text":"<p>Obsidian\u662f\u6211\u5f88\u559c\u6b22\u7684\u81ea\u6258\u7ba1\u7b14\u8bb0\u5de5\u5177\u3002\u4f46\u662f\u5b83\u7684Publish\u529f\u80fd\u662f\u6536\u8d39\u7684\u3002Mkdocs\u662f\u4e00\u4e2a\u5c06markdown\u53d1\u5e03\u6210\u9759\u6001\u7f51\u9875\u7684\u5f00\u6e90\u514d\u8d39\u5de5\u5177\u3002\u800cGithub Pages\u53ef\u4ee5\u514d\u8d39\u90e8\u7f72\u9759\u6001\u7ad9\u70b9\u3002\u8fd9\u4e0d\u5c31\u9f50\u6d3b\u4e86\uff01</p> <p>\u524d\u63d0\u6761\u4ef6\uff1a\u5bf9Python/Git/Github Pages\u6709\u6700\u57fa\u672c\u7684\u4e86\u89e3\u3002</p> <p>\u5982\u679c\u4f60\u4e0d\u60f3\u8bfb\u4e0b\u9762\u90a3\u4e48\u591a\u4e1c\u897f\uff0cClone GitHub - reticenceji/reticenceji.github.io: My simple blog \uff0c\u5c06<code>docs</code>\u6587\u4ef6\u5939\u4e2d\u7684<code>javascripts</code>\u548c<code>stylesheets</code>\u590d\u5236\u5230\u4f60\u7684Obsidian\u5de5\u4f5c\u76ee\u5f55\uff0c\u7136\u540e\u5c06<code>docs</code>\u6587\u4ef6\u5939\u6574\u4e2a\u66ff\u6362\u6210\u4f60\u7684Obsidian\uff0c\u6253\u5f00\u4ed3\u5e93\u7684github pages\u9009\u9879\uff0c\u4e0a\u4f20\u5373\u53ef\u3002\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u7f8e\u89c2\u5ea6\u5c1a\u53ef\uff0c\u6e32\u67d3\u6b63\u5e38\u7684\u7f51\u9875\u3002</p> <p>\u5982\u679c\u4f60\u61c2\u524d\u7aef\uff0c\u81ea\u884c\u4fee\u6539<code>javascripts</code>\u548c<code>stylesheets</code>\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#obsidian-part","title":"Obsidian Part","text":"<p>\u6211\u53ea\u662f\u5c06Obsidian\u7528\u4f5c\u7b80\u5355\u7684Markdown\u4e66\u5199\u548c\u7ba1\u7406\u5de5\u5177\uff0c\u6ca1\u6709\u4e0b\u8f7d\u5176\u4ed6\u7684\u6e32\u67d3\u5947\u602a\u8bed\u6cd5\u7684\u63d2\u4ef6\u3002\u5982\u679c\u4f60\u6709\u5947\u602a\u8bed\u6cd5\uff0c\u53ef\u80fd\u8981\u81ea\u5df1\u60f3\u529e\u6cd5\u901a\u8fc7\u7f16\u5199 javascript \u6e32\u67d3\u4e86\u3002\u8fd9\u91cc\uff0c\u5047\u8bbe\u4f60\u7684\u7b14\u8bb0\u5168\u90e8\u4fdd\u5b58\u5728<code>notes</code>\u6587\u4ef6\u5939\u4e2d\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#mkdocs-part","title":"Mkdocs Part","text":"<p>\u9996\u5148\u9700\u8981\u5b89\u88c5\u4f9d\u8d56\u3002\u8fd9\u662f\u6211\u4f7f\u7528\u7684\u73af\u5883\uff0c\u901a\u8fc7<code>poetry</code>\u6765\u7ba1\u7406\u3002</p> <pre><code>[tool.poetry.dependencies]\npython = \"^3.12\"\nmkdocs = \"^1.5.0\"\nmkdocs-material = \"^9.5.45\"\nmkdocs-glightbox = \"^0.4.0\"  \nmkdocs-meta-descriptions-plugin = \"^3.0.0\" \npillow = \"^11.0.0\"\ncairosvg = \"^2.7.1\"\n</code></pre> <p>[!NOTE] \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>pip</code>\u5b89\u88c5\u4e0b\u9762\u7684\u4f9d\u8d56\u3002\u6700\u57fa\u672c\u7684\u53ef\u4ee5\u53ea\u5b89\u88c5<code>mkdocs</code>\u548c<code>mkdocs-material</code>\u3002\u4f46\u662f\u540e\u9762\u7684github workflow\u8981\u76f8\u5e94\u7684\u4fee\u6539\u3002\u540e\u6587\u5047\u8bbe\u4f60\u7528<code>poetry</code>\u8fdb\u884c\u7ba1\u7406\u3002</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728<code>notes</code>\u6587\u4ef6\u5939\u7684\u540c\u7ea7\u76ee\u5f55\u521b\u5efa<code>mkdocs.yml</code>\uff08\u4e5f\u5c31\u662f\u8bf4\u6211\u5efa\u8bae\u521b\u5efa\u4e00\u4e2a\u7236\u76ee\u5f55\uff0c\u7ba1\u7406<code>notes</code>\u548c\u5176\u4ed6\u6587\u4ef6\uff0c\u4e4b\u540e\u7528<code>git</code>\u7ba1\u7406\u8be5\u7236\u76ee\u5f55\uff0c\u4e4b\u540e\u79f0\u7236\u76ee\u5f55\u4e3a<code>root</code>\uff09\u3002</p> <p>\u7ed9<code>mkdocs.yml</code>\u586b\u5199\u6700\u57fa\u672c\u7684\u5185\u5bb9\uff1a</p> <pre><code>site_name: My Notes\ndocs_dir: notes\ntheme:\n  name: material\nplugins:\n  - search\n</code></pre> <p>\u7136\u540e\u8fd0\u884c<code>poetry run mkdocs serve</code>\uff0c\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668<code>http://127.0.0.1:8000/</code>\u9884\u89c8\u6e32\u67d3\u51fa\u6765\u7684\u7ad9\u70b9\u4e86\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#github-part","title":"Github Part","text":"<p>\u5728<code>root</code>\u6587\u4ef6\u5939\u8fd0\u884c<code>git init</code>\uff0c\u6dfb\u52a0<code>.gitignore</code>\u6587\u4ef6\u5982\u4e0b\uff0c\u8ba9\u65e0\u5173\u6587\u4ef6\u4e0d\u8981\u4e0a\u4f20\u3002</p> <pre><code>.cache\nsite\nnotes/.obsidian\n</code></pre> <p>\u6dfb\u52a0<code>.github/workflows/deploy.yml</code>\uff0c\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e0a\u4f20\u7b14\u8bb0\u5230Github\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u6784\u5efa\u3001\u90e8\u7f72\u3002</p> <pre><code>name: Deploy MkDocs\non:\n  push:\n    branches: \n      - master  # \u6216\u8005\u662f master\uff0c\u53d6\u51b3\u4e8e\u60a8\u7684\u9ed8\u8ba4\u5206\u652f\u540d\u79f0\n  pull_request:\n    branches:\n      - master\n\npermissions:\n  contents: write\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Set up Python\n        uses: actions/setup-python@v5\n        with:\n          python-version: '3.12'\n\n      - name: Install Poetry\n        uses: snok/install-poetry@v1\n\n      - name: Install dependencies\n        run: poetry install --no-interaction --no-root\n\n      - name: Build and deploy\n        run: |\n          poetry run mkdocs gh-deploy --force \n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230Github\u4ed3\u5e93\uff08<code>username.github.io</code>\u4ed3\u5e93\uff09\u4e86\u3002\u5bf9\u4ed3\u5e93\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\u3002</p> <p></p> <p>\u8fc7\u51e0\u5206\u949f\uff0c\u5e94\u8be5\u5c31\u53ef\u4ee5\u5728Github\u7ad9\u70b9<code>https://username.github.io</code>\u770b\u5230\u4e86\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#_1","title":"\u529f\u80fd\u8865\u5168","text":""},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#404","title":"\u4e3b\u9875404","text":"<p>\u4e00\u8fdb\u53bb\u548b\u662f404 Not Found\uff1f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u53ebindex.md\u7684\u6587\u4ef6\u653e\u5728\u7b14\u8bb0\u7684\u6839\u76ee\u5f55\u4f5c\u4e3a\u4e3b\u9875\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#_2","title":"\u65e0\u6cd5\u6b63\u5e38\u6e32\u67d3\u516c\u5f0f","text":"<p>\u5728Obsidian\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>$</code>\u6765\u4e66\u5199\u516c\u5f0f\u3002\u4f46\u662fmkdocs\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u3002\u53ef\u4ee5\u901a\u8fc7\u96c6\u6210Mathjax\u6765\u652f\u6301\u3002</p> <p>\u5728<code>mkdocs.yml</code>\u4e2d\u6dfb\u52a0 </p> <pre><code>extra_javascript:\n  - https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/polyfill-io/3.111.0/polyfill.min.js\n  # MathJax \u6838\u5fc3\u6587\u4ef6\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/tex-mml-chtml.js\n  # \u989d\u5916\u7684\u5b57\u4f53\u6587\u4ef6\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Size2-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Size3-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Size4-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_AMS-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Script-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Typewriter-Regular.woff\n  - https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/mathjax/3.2.0/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Regular.woff\nextra_css:\n  - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#note","title":"NOTE \u5757","text":"<p>\u5728Obisidan\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>&gt;[!NOTE]</code>\u6765\u6e32\u67d3\u63d0\u793a\u5757\uff0cMkdocs\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u3002</p> <p>\u5728<code>mkdocs.yml</code>\u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>extra_javascript:\n- javascripts/extra.js\nextra_css:\n- stylesheets/extra.css\n</code></pre> <p>\u5728<code>javascripts/extra.js</code>\u811a\u672c\u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>// \u6e32\u67d3[!NOTE]/[!WARN]/[!ERROR]\u5757\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    document.querySelectorAll('blockquote p').forEach(function (p) {\n        if (p.textContent.startsWith('[!NOTE]')) {\n            const blockquote = p.parentNode;\n            blockquote.classList.add('note');\n            p.innerHTML = p.innerHTML.replace('[!NOTE]', '');\n        } else if (p.textContent.startsWith('[!WARN]')) {\n            const blockquote = p.parentNode;\n            blockquote.classList.add('warn');\n            p.innerHTML = p.innerHTML.replace('[!WARNING]', '');\n        } else if (p.textContent.startsWith('[!ERROR]')) {\n            const blockquote = p.parentNode;\n            blockquote.classList.add('error');\n            p.innerHTML = p.innerHTML.replace('[!ERROR]', '');\n        }\n    });\n});\n</code></pre> <p>\u5728<code>stylesheets/extra.css</code>\u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>blockquote.error {\n    border-left: 5px solid #FF0000 !important;\n    background-color: rgba(255, 0, 0, 0.15) !important;\n}\n\nblockquote.warn {\n    border-left: 5px solid #FFD700 !important;\n    background-color: rgba(255, 215, 0, 0.15) !important;\n}\n\nblockquote.note {\n    border-left: 5px solid #0078D7 !important;\n    background-color: rgba(0, 120, 215, 0.15) !important;\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#_3","title":"\u66f4\u591a\u7684\u7f8e\u5316","text":"<p>\u5982\u679c\u4f60\u61c2css\u548cjavascript\uff0c\u90a3\u81ea\u7136\u4e0d\u5fc5\u6211\u591a\u8bf4\u3002\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u662f\u524d\u7aef\u5c0f\u767d\uff0c\u90a3\u4e48\u53ef\u4ee5\u6284\u4f5c\u4e1aGitHub - reticenceji/reticenceji.github.io: My simple blog\uff0c\u590d\u5236\u5176\u4e2d\u7684docs/javascript\u548cdocs/stylesheets\u7a0d\u4f5c\u4fee\u6539\uff0c\u6216\u8005\u95ee\u95eeGPT\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/Mkdocs/#example-site","title":"Example Site","text":"<p>Reticence Ji's Notes</p>"},{"location":"%E5%B7%A5%E5%85%B7/SSH/","title":"SSH","text":"","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/SSH/#_1","title":"\u672c\u5730\u7aef\u53e3\u8f6c\u53d1","text":"<p>\u6709\u4e09\u4e2a\u673a\u5668\uff1a\u672c\u5730\u673a\u5668A\uff0c\u8df3\u677f\u673a\uff08\u53ef\u4ee5\u8bbf\u95ee\u670d\u52a1\u7684\u673a\u5668\uff09B\uff0c\u670d\u52a1\u5668C\u3002A\u53ef\u4ee5\u8bbf\u95eeB\uff0cB\u53ef\u4ee5\u8bbf\u95eeC\uff0c\u4f46\u662fA\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95eeC\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 ssh \u7684\u672c\u5730\u8f6c\u53d1<code>-L</code> \u529f\u80fd\u3002</p> <pre><code>ssh -L 8896:C:8895 user@B\n</code></pre> <p>\u5c06C\u76848895\u7aef\u53e3\uff0c\u6620\u5c04\u5230\u672c\u5730\u76848896\u7aef\u53e3\uff0c\u501f\u52a9B\u3002\u53ea\u8981B\u80fd\u6b63\u5e38\u8bbf\u95eeC\u76848895\u7aef\u53e3\u5c31\u53ef\u4ee5\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/SSH/#broken-pipe","title":"Broken Pipe","text":"<p>\u5982\u679c\u957f\u4e45\u4e0d\u548c\u8fdc\u7a0b\u673a\u5668\u4e92\u52a8\uff0c\u53ef\u80fd\u4f1a\u9047\u5230 <code>Client_loop: send disconnect: Broken pipe</code> \u7684\u62a5\u9519\uff0c\u8fde\u63a5\u65ad\u5f00\u3002</p> <p>\u5728\u5ba2\u6237\u7aef\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 <code>-o ServerAliveInterval=30 -o TCPKeepAlive=no</code> \u53c2\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6bcf 30 \u79d2\uff0cSSH \u5ba2\u6237\u7aef\u4f1a\u53d1\u9001\u4e00\u4e2a\u7a7a\u7684\u6570\u636e\u5305\u5230\u670d\u52a1\u5668\u3002\u8fd9\u4e2a\u529f\u80fd\u4e3b\u8981\u7528\u6765\u4fdd\u6301 SSH \u4f1a\u8bdd\u7684\u6d3b\u8dc3\u72b6\u6001\uff0c\u9632\u6b62\u7531\u4e8e\u957f\u65f6\u95f4\u65e0\u6d3b\u52a8\u800c\u5bfc\u81f4\u7684\u4f1a\u8bdd\u8d85\u65f6\u6216\u88ab\u7f51\u7edc\u8bbe\u5907\uff08\u5982\u9632\u706b\u5899\uff09\u65ad\u5f00\u8fde\u63a5\u3002</p> <p>\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u53ef\u4ee5\u7f16\u8f91<code>/etc/ssh/sshd_config</code>\u7684<code>ClientAliveInterval=30</code>\uff0c\u8ba9SSH \u670d\u52a1\u5668\u4f1a\u6bcf\u9694 30 \u79d2\u5411\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u7a7a\u7684\u6570\u636e\u5305\u6216\u6d88\u606f\u8bf7\u6c42\uff08 <code>ClientAliveCountMax</code> \u4e86\u5c1d\u8bd5\u7684\u6700\u5927\u6b21\u6570\uff09\uff0c\u7528\u4ee5\u68c0\u6d4b\u5ba2\u6237\u7aef\u662f\u5426\u4ecd\u7136\u8fde\u63a5\u5e76\u54cd\u5e94\u3002\u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u54cd\u5e94\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u9009\u62e9\u5173\u95ed\u8fde\u63a5\uff0c\u907f\u514d\u60ac\u6302\u7684\u4f1a\u8bdd\u5360\u7528\u8d44\u6e90\u3002</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/SSH/#proxy","title":"Proxy","text":"<p>\u6211\u60f3\u5728\u5bb6\u4e2d\uff0c\u501f\u52a9VPN\uff0c\u8bbf\u95ee\u516c\u53f8\u7684\u7535\u8111\u3002\u5982\u4f55\u7ed9SSH \u914d\u7f6e Proxy\uff1f</p> <p>\u5982\u679c\u662fMac\uff0c\u53ef\u4ee5\u501f\u52a9<code>corkscrew</code>\u3002\u5728<code>~/.ssh/config</code>\u5bf9\u5e94\u7684\u884c\u4e2d\u6dfb\u52a0<code>ProxyCommand</code>\uff0c\u5047\u8bbeProxy\u5728<code>http://127.0.0.1:7890</code>\u3002</p> <pre><code>Host company-machine\n    ProxyCommand corkscrew 127.0.0.1 7890 %h %p\n    ...\n</code></pre> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>ssh\u7684\u4e09\u79cd\u7aef\u53e3\u8f6c\u53d1 https://unix.stackexchange.com/questions/602518/ssh-connection-client-loop-send-disconnect-broken-pipe-or-connection-reset</p>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/","title":"Website","text":"","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/#online-tools","title":"Online Tools","text":"<ul> <li>Epoch Converter - Unix Timestamp Converter</li> <li>ccf-deadlines</li> <li>md5\u5728\u7ebf\u89e3\u5bc6\u7834\u89e3,md5\u89e3\u5bc6\u52a0\u5bc6</li> </ul>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/#_1","title":"\u7f16\u8bd1\u5668\uff1a","text":"<ul> <li>\u7f16\u8bd1\u5668 godbolt</li> <li>C++ Insight - \u7814\u7a76C++\u7f16\u8bd1\u5668\u884c\u4e3a</li> <li>Rust Playground</li> <li>Go Playground - The Go Programming Language</li> </ul>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/#_2","title":"\u7ed8\u56fe\uff1a","text":"<ul> <li>Graphviz</li> <li>Flowchart Maker &amp; Online Diagram Software</li> <li>Excalidraw | Hand-drawn look &amp; feel \u2022 Collaborative \u2022 Secure</li> </ul>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/#online-resource","title":"Online Resource","text":"<ul> <li>\u5f00\u653e\u7248\u6743\u7684 svg &amp; icon</li> <li>\u7535\u5b50\u4e66 - \u5b89\u5a1c\u7684\u6863\u6848</li> <li>\u8ba1\u7b97\u673a\u8bba\u6587 dblp</li> </ul>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/Website/#_3","title":"\u6807\u51c6\u5e93\u6587\u6863","text":"<ul> <li>Rust</li> <li>Python</li> <li>Souffl\u00e9 \u2022 A Datalog Synthesis Tool for Static Analysis</li> <li>Go</li> <li>cppreference</li> </ul>","tags":[]},{"location":"%E5%B7%A5%E5%85%B7/vscode/","title":"Vscode","text":""},{"location":"%E5%B7%A5%E5%85%B7/vscode/#c","title":"C++\u73af\u5883\u914d\u7f6e","text":"<p>\u4f7f\u7528clangd\uff0c\u914d\u7f6e\u6807\u51c6\u4e3aC++17\uff0c\u63d0\u793a\u5934\u6587\u4ef6\u3002</p> <pre><code>{\n    \"clangd.arguments\": [\n        \"--compile-commands-dir=&lt;path_to_compile_commands.json&gt;\",\n        \"--fallback-style=google\",\n        \"--header-insertion=iwyu\",\n        \"--suggest-missing-includes\",\n        \"-std=c++17\"\n    ]\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/","title":"Development","text":"<p>\u8fd9\u91cc\u4f1a\u603b\u7ed3\u4e00\u4e9b\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ecf\u9a8c\uff0c\u5404\u79cd\u5404\u6837\u7684\u90fd\u4f1a\u6d89\u53ca\u3002\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u7cfb\u7edf\u7f16\u7a0b\u3001\u7f51\u7edc\u7f16\u7a0b\u3001\u65e5\u5fd7\u7ba1\u7406\u3001\u4ee3\u7801\u4f18\u5316\u3001\u7a0b\u5e8f\u5206\u6790\u7b49\u3002</p> <p>\u6587\u7ae0\u4e3b\u4f53\u4f1a\u4f7f\u7528\u4e2d\u6587\u63cf\u8ff0\uff0c\u4e13\u6709\u540d\u8bcd\u53ef\u80fd\u4f1a\u4f7f\u7528\u82f1\u8bed\u6216\u8005\u4e2d\u6587\u4ea4\u66ff\u63cf\u8ff0\uff0c\u53d6\u51b3\u4e8e\u54ea\u4e00\u4e2a\u5bf9\u6211\u6765\u8bf4\u66f4\u5e38\u89c1\u3002\u6d89\u53ca\u7684\u7f16\u7a0b\u8bed\u8a00\u4e3b\u8981\u662fRust/Python/C/Golang\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/CICD/","title":"CI/CD","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/","title":"\u65e5\u5fd7","text":"<p>\u597d\u7684\u65e5\u5fd7\u662f\u8ba9\u7a0b\u5e8f\u53ef\u7ef4\u62a4\u7684\u5173\u952e\u56e0\u7d20\u3002\u5bf9\u4e8e\u5927\u578b\u7a0b\u5e8f\u6765\u8bf4\u66f4\u662f\u5982\u6b64\u3002\u65e5\u5fd7\u6709\u4ee5\u4e0b\u4f5c\u7528\uff1a</p> <ul> <li>\u6253\u5370\u8c03\u8bd5\uff1a\u7528\u65e5\u5fd7\u6765\u8bb0\u5f55\u53d8\u91cf\u6216\u8005\u67d0\u4e00\u6bb5\u903b\u8f91\uff0c\u8bb0\u5f55\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7a0b\uff0c\u5373\u7a0b\u5e8f\u8fd0\u884c\u4e86\u54ea\u4e9b\u4ee3\u7801\uff0c\u65b9\u4fbf\u6392\u67e5\u903b\u8f91\u95ee\u9898\u3002</li> <li>\u95ee\u9898\u5b9a\u4f4d\uff1a\u7a0b\u5e8f\u51fa\u5f02\u5e38\u6216\u8005\u51fa\u6545\u969c\u65f6\u5feb\u901f\u7684\u5b9a\u4f4d\u95ee\u9898\uff0c\u65b9\u4fbf\u540e\u671f\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u7ebf\u4e0a\u751f\u4ea7\u73af\u5883\u65e0\u6cd5 debug\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u53bb\u6a21\u62df\u4e00\u5957\u751f\u4ea7\u73af\u5883\u8d39\u65f6\u8d39\u529b\u3002\u6240\u4ee5\u4f9d\u9760\u65e5\u5fd7\u8bb0\u5f55\u7684\u4fe1\u606f\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd9\u70b9\u975e\u5e38\u91cd\u8981\u3002</li> <li>\u76d1\u63a7\u544a\u8b66 &amp; \u7528\u6237\u884c\u4e3a\u5ba1\u8ba1\uff1a\u683c\u5f0f\u5316\u540e\u65e5\u5fd7\u53ef\u4ee5\u901a\u8fc7\u76f8\u5173\u76d1\u63a7\u7cfb\u7edf(AntMonitor)\u914d\u7f6e\u591a\u7ef4\u5ea6\u7684\u76d1\u63a7\u89c6\u56fe\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u638c\u63e1\u7cfb\u7edf\u8fd0\u884c\u60c5\u51b5\u6216\u8005\u8bb0\u5f55\u7528\u6237\u7684\u64cd\u4f5c\u884c\u4e3a\u5e76\u5bf9\u65e5\u5fd7\u91c7\u96c6\u5206\u6790\uff0c\u7528\u4e8e\u5efa\u8bbe\u4e1a\u52a1\u5927\u76d8\u4f7f\u7528\u3002</li> </ul>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#_2","title":"\u6700\u4f73\u5b9e\u8df5","text":"<p>\u65e5\u5fd7\u7684\u5b9e\u8df5\u5305\u62ec\u4e09\u4e2a\u4e3b\u8981\u5185\u5bb9\uff1a\u65e5\u5fd7\u4ea7\u751f\uff0c\u65e5\u5fd7\u6d88\u8d39\uff0c\u65e5\u5fd7\u5206\u6790\u3002</p> <p>\u65e5\u5fd7\u5e94\u8be5\u5305\u542b\u54ea\u4e9b\u4fe1\u606f\uff1a</p> <ul> <li>Log Level<ul> <li>DEBUG: \u8be6\u7ec6\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u53d1\u5e03\u65f6\u53ef\u80fd\u9700\u8981\u5173\u95ed\u3002</li> <li>INFO: \u4e00\u822c\u4fe1\u606f\u3002</li> <li>WARNING: \u8b66\u544a\u4f46\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c\u3002</li> <li>ERROR: \u9519\u8bef\u4fe1\u606f\u3002</li> <li>CRITICAL: \u4e25\u91cd\u9519\u8bef\uff0c\u7a0b\u5e8f\u5e94\u8be5\u505c\u6b62\u8fd0\u884c\u3002</li> </ul> </li> <li>\u65e5\u5fd7\u5e94\u8be5\u8bb0\u5f55\u8db3\u591f\u7684\u4e0a\u4e0b\u6587\uff0c\u5982\u65f6\u95f4\u6233\u3001\u8fdb\u7a0bID\u3001\u7ebf\u7a0bID\u3001\u7c7b\u540d\u3001\u65b9\u6cd5\u540d\u7b49\u3002</li> </ul> <p>\u65e5\u5fd7\u4e0d\u5e94\u8be5\uff1a</p> <ul> <li>\u907f\u514d\u5728\u5173\u952e\u8def\u5f84\u4e0a\u8fc7\u591a\u65e5\u5fd7\uff0c\u8003\u8651\u5f02\u6b65\u65e5\u5fd7\u3002\u65e5\u5fd7\u4e5f\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6027\u80fd\u3002</li> <li>\u4e0d\u8981\u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u654f\u611f\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u5f97\u4e0d\u8fd9\u6837\u505a\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u65e5\u5fd7\u5f15\u5165\u52a0\u5bc6\u624b\u6bb5\u548c\u6743\u9650\u63a7\u5236\u3002</li> </ul> <p>\u5728\u54ea\u91cc\u5e94\u8be5\u6253\u65e5\u5fd7\uff1a</p> <ul> <li>\u4ee3\u7801\u521d\u59cb\u5316\u65f6\u6216\u8fdb\u5165\u903b\u8f91\u5165\u53e3\u65f6\uff1a\u7cfb\u7edf\u6216\u8005\u670d\u52a1\u7684\u542f\u52a8\u53c2\u6570\u3002\u6838\u5fc3\u6a21\u5757\u6216\u8005\u7ec4\u4ef6\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u5f80\u5f80\u4f9d\u8d56\u4e00\u4e9b\u5173\u952e\u914d\u7f6e\uff0c\u6839\u636e\u53c2\u6570\u4e0d\u540c\u4f1a\u63d0\u4f9b\u4e0d\u4e00\u6837\u7684\u670d\u52a1\u3002\u52a1\u5fc5\u5728\u8fd9\u91cc\u8bb0\u5f55 INFO \u65e5\u5fd7\uff0c\u6253\u5370\u51fa\u53c2\u6570\u4ee5\u53ca\u542f\u52a8\u5b8c\u6210\u6001\u670d\u52a1\u8868\u8ff0\u3002</li> <li>\u7f16\u7a0b\u8bed\u8a00\u63d0\u793a\u5f02\u5e38\uff1a\u8fd9\u7c7b\u6355\u83b7\u7684\u5f02\u5e38\u662f\u7cfb\u7edf\u544a\u77e5\u5f00\u53d1\u4eba\u5458\u9700\u8981\u52a0\u4ee5\u5173\u6ce8\u7684\uff0c\u662f\u8d28\u91cf\u975e\u5e38\u9ad8\u7684\u62a5\u9519\u3002\u5e94\u5f53\u9002\u5f53\u8bb0\u5f55\u65e5\u5fd7\uff0c\u6839\u636e\u5b9e\u9645\u7ed3\u5408\u4e1a\u52a1\u7684\u60c5\u51b5\u4f7f\u7528 WARN \u6216\u8005 ERROR \u7ea7\u522b\u3002</li> <li>\u4e1a\u52a1\u6d41\u7a0b\u9884\u671f\u4e0d\u7b26\uff1a\u9879\u76ee\u4ee3\u7801\u4e2d\u7ed3\u679c\u4e0e\u671f\u671b\u4e0d\u7b26\u65f6\u4e5f\u662f\u65e5\u5fd7\u573a\u666f\u4e4b\u4e00\uff0c\u7b80\u5355\u6765\u8bf4\u6240\u6709\u6d41\u7a0b\u5206\u652f\u90fd\u53ef\u4ee5\u52a0\u5165\u8003\u8651\u3002\u53d6\u51b3\u4e8e\u5f00\u53d1\u4eba\u5458\u5224\u65ad\u80fd\u5426\u5bb9\u5fcd\u60c5\u5f62\u53d1\u751f\u3002\u5e38\u89c1\u7684\u5408\u9002\u573a\u666f\u5305\u62ec\u5916\u90e8\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u6570\u636e\u5904\u7406\u95ee\u9898\u5bfc\u81f4\u8fd4\u56de\u7801\u4e0d\u5728\u5408\u7406\u8303\u56f4\u5185\u7b49\u7b49\u3002</li> <li>\u7cfb\u7edf/\u4e1a\u52a1\u6838\u5fc3\u903b\u8f91\u7684\u5173\u952e\u52a8\u4f5c\uff1a\u7cfb\u7edf\u4e2d\u6838\u5fc3\u89d2\u8272\u89e6\u53d1\u7684\u4e1a\u52a1\u52a8\u4f5c\u662f\u9700\u8981\u591a\u52a0\u5173\u6ce8\u7684\uff0c\u662f\u8861\u91cf\u7cfb\u7edf\u6b63\u5e38\u8fd0\u884c\u7684\u91cd\u8981\u6307\u6807\uff0c\u5efa\u8bae\u8bb0\u5f55 INFO \u7ea7\u522b\u65e5\u5fd7\u3002</li> <li>\u7b2c\u4e09\u65b9\u670d\u52a1\u8fdc\u7a0b\u8c03\u7528\uff1a\u5fae\u670d\u52a1\u67b6\u6784\u4f53\u7cfb\u4e2d\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u70b9\u5c31\u662f\u7b2c\u4e09\u65b9\u6c38\u8fdc\u4e0d\u53ef\u4fe1\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u670d\u52a1\u8fdc\u7a0b\u8c03\u7528\u5efa\u8bae\u6253\u5370\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u53c2\u6570\uff0c\u65b9\u4fbf\u5728\u548c\u5404\u4e2a\u7ec8\u7aef\u5b9a\u4f4d\u95ee\u9898\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u7b2c\u4e09\u65b9\u670d\u52a1\u65e5\u5fd7\u7684\u7f3a\u5931\u53d8\u5f97\u624b\u8db3\u65e0\u63aa\u3002</li> </ul>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#_3","title":"\u5e76\u53d1","text":"<p>\u5728\u7f16\u5199\u5355\u7ebf\u7a0b\u7684\u4ee3\u7801\u4e2d\uff0c\u65e5\u5fd7\u7684\u987a\u5e8f\u5c31\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u987a\u5e8f\uff0c\u987a\u7740\u770b\u4e0b\u6765\u5c31\u80fd\u7406\u6e05\u903b\u8f91\u3002</p> <p>\u5bf9\u4e8e\u5e76\u53d1\u7684\u7a0b\u5e8f\uff0c\u5982\u679c\u65e5\u5fd7\u4e2d\u4e0d\u5e26\u6709\u8fdb\u7a0bID\u3001\u7ebf\u7a0bID\uff0c\u90a3\u4e48\u65e5\u5fd7\u5bf9\u4f60\u6765\u8bf4\u5c31\u50cf\u662f\u201c\u4e71\u5e8f\u201d\u7684\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5982\u679c\u7a0b\u5e8f\u662f\u5f02\u6b65\u7684\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u4f1a\u9690\u5f0f\u7684\u521b\u9020\u65b0\u7684\u7ebf\u7a0b\u3002\u7406\u60f3\u60c5\u51b5\u7684\u5e76\u53d1\u7684\u65e5\u5fd7\u5e94\u8be5\u662f\uff1a</p> <pre><code>a1 -&gt; b1 -&gt; b2 -&gt; a2 -&gt; b3     # raw log stream\n\na1 -------------&gt; a2           # parsed log stream a\n      b1 -&gt; b2 -------&gt; b3     # parsed log stream b\n</code></pre> <p>\u90a3\u4e48\u5982\u4f55\u624d\u80fd\u77e5\u9053a1\u548ca2\u5728\u903b\u8f91\u4e0a\u662f\u8fde\u7eed\u7684\uff1f\u53ef\u4ee5\u53c2\u8003Rust - tracing\u5e93\u7684\u8bbe\u8ba1\u3002</p>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#_4","title":"\u7f16\u7a0b\u5b9e\u8df5","text":"<p>\u901a\u5e38\u6709\u4e24\u7c7b\u4e0e\u65e5\u5fd7\u76f8\u5173\u7684 crate\uff1a\u65e5\u5fd7\u63a5\u53e3\u548c\u65e5\u5fd7\u6d88\u8d39\u8005\u3002\u63a5\u53e3\u63d0\u4f9b\u4e86\u60f3\u8981\u8bb0\u5f55\u67d0\u4e9b\u4e1c\u897f\u65f6\u8c03\u7528\u7684\u51fd\u6570\uff0c\u6d88\u8d39\u8005\u5904\u7406\u5c06\u7ed3\u6784\u5316\u65e5\u5fd7\u6570\u636e\u683c\u5f0f\u5316\u5230\u67d0\u4e2a\u5730\u65b9\uff08stderr \u6216\u6587\u4ef6\uff0c\u751a\u81f3\u662f\u6d88\u606f\u961f\u5217\uff09\u3002</p> <p>\u6240\u4ee5\uff0c\u5e93\u7684\u7f16\u5199\u8005\u5e94\u8be5\u53ea\u4f7f\u7528 \u65e5\u5fd7\u63a5\u53e3 \u5e93\uff0c\u800c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u7f16\u5199\u8005\u624d\u4f1a\u540c\u65f6\u4f7f\u7528 \u65e5\u5fd7\u63a5\u53e3 \u5e93 \u548c \u65e5\u5fd7\u6d88\u8d39\u8005 \u5e93\u3002</p> <p>Rust - Log</p>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#_5","title":"\u65e5\u5fd7\u5206\u6790","text":"<p>\u6700\u7b80\u5355\u7684\u65e5\u5fd7\u5206\u6790\u4f7f\u7528<code>grep</code>\u5c31\u53ef\u4ee5\u4e86\u3002</p>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#fblog","title":"fblog","text":"<p>fblog \u662f\u4e00\u4e2a\u547d\u4ee4\u884cJSON\u65e5\u5fd7\u5206\u6790\u5de5\u5177\u3002JSON\u4f5c\u4e3a\u7ed3\u6784\u5316\u7684\u6570\u636e\uff0c\u80af\u5b9a\u66f4\u597d\u7528\u6765\u8fdb\u884c\u6761\u4ef6\u7b5b\u9009\u3002</p> <pre><code>fblog -d -f 'log_level == \"WARN\"' sample_elastic.log\n</code></pre>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E6%97%A5%E5%BF%97/#open-telemetry","title":"Open Telemetry","text":"<p>OpenTelemetry \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u89c2\u6d4b\u6846\u67b6\uff0c\u7528\u4e8e\u6536\u96c6\u548c\u5bfc\u51fa\u8ddf\u8e2a\u3001\u5ea6\u91cf\u548c\u65e5\u5fd7\u6570\u636e\u3002\u5b83\u662f\u7531 Cloud Native Computing Foundation (CNCF) \u6240\u652f\u6301\u548c\u7ef4\u62a4\u7684\uff0c\u65e8\u5728\u63d0\u4f9b\u4e00\u5957\u7edf\u4e00\u7684\u3001\u8de8\u8bed\u8a00\u7684\u5de5\u5177\u548c\u5e93\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8005\u80fd\u591f\u5728\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u66f4\u5bb9\u6613\u5730\u5b9e\u73b0\u53ef\u89c2\u6d4b\u6027\u3002</p> <p>\u53c2\u8003\u8d44\u6599\uff1a</p> <ul> <li>\u65e5\u5fd7\u6700\u4f73\u5b9e\u8df5-\u963f\u91cc\u6280\u672f https://xie.infoq.cn/article/c7e46aa4bd7de3edb855c1f29</li> </ul>","tags":[]},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/","title":"\u722c\u866b","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#_2","title":"\u722c\u866b\u57fa\u7840","text":"<p>\u6700\u57fa\u672c\u7684\u7f51\u9875\u722c\u866b\uff0c\u53ea\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff1a</p> <ol> <li>\u6a21\u62dfHTTP\u8bf7\u6c42</li> <li>\u89e3\u6790HTML\u9875\u9762  </li> </ol> <p>\u5176\u4e2d\u89e3\u6790HTML\u9875\u9762\uff0c\u7531\u4e8e\u975e\u5e38\u7684case-by-case\uff08\u9875\u9762\u7ed3\u6784/\u9700\u6c42\u90fd\u5f88\u7075\u6d3b\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u7075\u6d3b\u7684\u8bed\u8a00\uff0c\u5982Python\u8fdb\u884c\u5f00\u53d1\u3002\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u7528Python\u5b8c\u6210\u4e00\u4e2a\u57fa\u672c\u7684\u722c\u866b\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#request-http","title":"Request - \u6a21\u62dfHTTP\u8bf7\u6c42","text":"<p>request\u662f Python \u4e45\u8d1f\u76db\u540d\u7684 HTTP \u5e93\u3002\u63a5\u53e3\u8bbe\u8ba1\u975e\u5e38\u7684\u4eba\u6027\u5316\u3002\u4e0b\u9762\u662f\u4e00\u4e2aDemo\uff0c(i) \u901a\u8fc7headers\u7b80\u5355\u6a21\u62df\u6d4f\u89c8\u5668\u8bf7\u6c42\uff0c(ii) \u4f7f\u7528\u4ee3\u7406\uff0c(iii) \u7b80\u5355\u7684\u6d41\u91cf\u63a7\u5236\u3001\u91cd\u8bd5\u548c\u9519\u8bef\u5904\u7406\u3002</p> <pre><code>import requests\nfrom requests.exceptions import RequestException\nimport logging\nfrom time import sleep\nimport random\n\n# \u8bbe\u7f6e\u65e5\u5fd7\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlogger = logging.getLogger(__name__)\n\n# \u591a\u4e2a User-Agent \u9009\u9879\nUSER_AGENTS = [\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n]\n\n# \u4ee3\u7406\u8bbe\u7f6e\nPROXIES = {\n    'http': 'http://127.0.0.1:7890',\n    'https': 'http://127.0.0.1:7890',\n}\n\ndef get_random_user_agent():\n    return random.choice(USER_AGENTS)\n\ndef proxy_get(url, max_retries=5, base_delay=1, proxies=PROXIES):\n    headers = {'User-Agent': get_random_user_agent()}\n\n    for i in range(max_retries):\n        try:\n            response = requests.get(url, headers=headers, proxies=proxies, timeout=10)\n            response.raise_for_status()  # \u8fd9\u5c06\u629b\u51fa HTTPError\uff0c\u5982\u679c\u72b6\u6001\u7801\u4e0d\u662f 200\n            return response.content\n        except RequestException as e:\n            logger.error(f\"Attempt {i+1}/{max_retries} failed for {url}. Error: {str(e)}\")\n            if i &lt; max_retries - 1:  # \u4e0d\u662f\u6700\u540e\u4e00\u6b21\u5c1d\u8bd5\n                sleep_time = base_delay * (2 ** i) + random.uniform(0, 1)  # \u6307\u6570\u9000\u907f + \u968f\u673a\u5316\n                logger.info(f\"Retrying in {sleep_time:.2f} seconds...\")\n                sleep(sleep_time)\n            else:\n                logger.error(f\"All retries failed for {url}.\")\n                return None\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == \"__main__\":\n    test_url = \"https://example.com\"\n    content = proxy_get(test_url)\n    if content:\n        logger.info(f\"Successfully retrieved content from {test_url}\")\n    else:\n        logger.error(f\"Failed to retrieve content from {test_url}\")\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#lxml-html","title":"Lxml - \u89e3\u6790HTML\u9875\u9762","text":"<p>\u6211\u4e00\u822c\u4f7f\u7528 xpath \u68ad\u54c8\u6240\u6709\u7684HTML\u89e3\u6790\u5de5\u4f5c\u3002 xpath \u7684\u8bbe\u8ba1\u601d\u8def\u5c31\u662f\u628aHTML\u6b47\u606f\u6210\u4e00\u68f5\u6811\uff0c\u7136\u540e\u4ece\u6839\u5f00\u59cb\u9010\u5c42\u7b5b\u9009\u8282\u70b9\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50</p> <pre><code>from lxml import html\ntree = html.fromstring(content)\nrows = tree.xpath('//*[@id=\"ContentPlaceHolder1_tbodyTxnTable\"]//tr')\n</code></pre> <ul> <li><code>'//*[@id=\"ContentPlaceHolder1_tbodyTxnTable\"]'</code>\u7684\u610f\u601d\u662f\uff1a\uff08\u6839\u8282\u70b9\uff09\u7684\u5b50\u5b59\u8282\u70b9\u4e2d\uff0c\u4efb\u610f<code>id</code>\u5c5e\u6027\u7b49\u4e8e<code>ContentPlaceHolder1_tbodyTxnTable</code>\u7684\u8282\u70b9\u3002</li> <li><code>...//tr</code>\uff1a\uff08...\uff09\u7684\u5b50\u5b59<code>tr</code>\u8282\u70b9\u3002</li> </ul> <p>xpath \u7684\u8bed\u6cd5\u5e76\u4e0d\u590d\u6742\uff0c\u770b\u4e00\u4e0bXpath Cheatsheet\u5c31\u77e5\u9053\u4e2a\u4e03\u4e03\u516b\u516b\uff0c\u591f\u7528\u4e86\u3002\u4e00\u822c\u7528\u7684\u6700\u591a\u7684\u662f Descendant selectors \u548c Attribute selectors \u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#advanced","title":"Advanced","text":"<p>\u8003\u8651\u5230\u73b0\u5b9e\u5bf9\u6548\u7387\u7684\u8ffd\u6c42\uff0c\u4ee5\u53ca\u7f51\u9875\u7684\u53cd\u722c\u866b\u624b\u6bb5\uff0c\u5b9e\u9645\u7684\u722c\u866b\u5de5\u7a0b\u8fd8\u9700\u8981\u66f4\u591a\u7684\u5185\u5bb9</p> <ol> <li>\u591a\u7ebf\u7a0b\u5e76\u53d1\u722c\u866b\uff08\u7531\u4e8e\u662fIO bounding\uff0c\u6240\u4ee5\u4f7f\u7528\u5f02\u6b65\u53ef\u80fd\u4f1a\u6709\u66f4\u9ad8\u7684\u6548\u7387\uff09</li> <li>\u62df\u4eba\uff08\u53cd\u53cd\u722c\u866b\uff09\uff1a\u7f51\u9875\u7ec8\u5f52\u662f\u4eba\u6765\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u603b\u662f\u53ef\u4ee5\u722c\u7684<ol> <li>JavaScript\u6a21\u62df</li> <li>\u9a8c\u8bc1\u7801</li> <li>\u8eab\u4efd\u9a8c\u8bc1\uff1a\u4f8b\u5982Cookie</li> </ol> </li> </ol> <p>[!NOTE] \u6839\u636e\u6211\u4e3a\u6570\u4e0d\u591a\u7684\u7ecf\u9a8c\u6765\u770b\uff0c\u722c\u866b\u7684\u74f6\u9888\u5f80\u5f80\u4e0d\u5728\u4e8e\u5e76\u53d1\u91cf\uff0c\u800c\u5728\u4e8e\u670d\u52a1\u672c\u8eab\u5bf9\u8bbf\u95ee\u7684\u9650\u5236\u3002\u8bf7\u6c42\u7684\u901f\u5ea6\u592a\u5feb\u4e0d\u4e00\u5b9a\u662f\u597d\u4e8b\u3002 </p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#_3","title":"\u5f02\u6b65\u5e76\u53d1","text":"<p>httpx \u53ef\u4ee5\u8bf4\u662f requests \u7684\u589e\u5f3a\u590d\u6742\u7248\u672c\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u5305\u62ec\u5f02\u6b65\u5728\u5185\u7684\u5f88\u591a\u7279\u6027\u652f\u6301\uff0c\u5e76\u4e14\u501f\u9274\u4e86 requests \u7684\u63a5\u53e3\u8bbe\u8ba1\u3002\u7ed9\u4e00\u4e2ademo\uff0c\u57fa\u4e8e\u4e0a\u9762 request demo\u7684\u4fee\u6539\u7248\u3002</p> <pre><code>import httpx\nimport random\nimport logging\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\nimport time\n\n# \u8bbe\u7f6e\u65e5\u5fd7\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlogger = logging.getLogger(__name__)\n\n# User-Agent \u5217\u8868\nUSER_AGENTS = [\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n]\n\n# \u4ee3\u7406\u8bbe\u7f6e\nPROXIES = {\n    'http://': 'http://127.0.0.1:7890',\n    'https://': 'http://127.0.0.1:7890',\n}\n\ndef get_random_user_agent():\n    return random.choice(USER_AGENTS)\n\ndef fetch_url(url, max_retries=3):\n    headers = {'User-Agent': get_random_user_agent()}\n\n    for attempt in range(max_retries):\n        try:\n            with httpx.Client(proxies=PROXIES, timeout=10) as client:\n                response = client.get(url, headers=headers)\n                response.raise_for_status()\n                return response.content\n        except httpx.HTTPError as e:\n            logger.error(f\"Attempt {attempt + 1}/{max_retries} failed for {url}. Error: {str(e)}\")\n            if attempt == max_retries - 1:\n                logger.error(f\"All retries failed for {url}.\")\n                return None\n\ndef fetch_all_urls(urls, max_workers=10):\n    results = {}\n    with ThreadPoolExecutor(max_workers=max_workers) as executor:\n        future_to_url = {executor.submit(fetch_url, url): url for url in urls}\n        for future in as_completed(future_to_url):\n            url = future_to_url[future]\n            try:\n                data = future.result()\n                results[url] = data\n                if data:\n                    logger.info(f\"Successfully retrieved content from {url}\")\n                else:\n                    logger.error(f\"Failed to retrieve content from {url}\")\n            except Exception as exc:\n                logger.error(f'{url} generated an exception: {exc}')\n    return results\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == \"__main__\":\n    test_urls = [\n        \"https://example.com\",\n        \"https://example.org\",\n        \"https://example.net\"\n    ]\n\n    start_time = time.time()\n    results = fetch_all_urls(test_urls)\n    end_time = time.time()\n\n    logger.info(f\"Total time taken: {end_time - start_time:.2f} seconds\")\n    logger.info(f\"Number of successful requests: {sum(1 for content in results.values() if content is not None)}\")\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#javascript","title":"JavaScript \u6a21\u62df","text":"<p>\u5206\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u6570\u636e\u662f\u901a\u8fc7JavaScript\u5728\u524d\u7aef\u6e32\u67d3\u51fa\u6765\u7684\uff1a\u8fd9\u4e2a\u6ca1\u6709\u4ec0\u4e48\u597d\u529e\u6cd5\uff0c\u4e00\u822c\u4f7f\u7528\u65e0\u5934\u6d4f\u89c8\u5668\u5bf9\u7f51\u9875\u8fdb\u884c\u8bf7\u6c42\uff0c\u518d\u4f5c\u8fdb\u4e00\u6b65\u5206\u6790\u3002</li> <li>\u6570\u636e\u662f\u901a\u8fc7JavaScript\uff0c\u901a\u8fc7AJAX\u83b7\u53d6\u7684\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u627e\u5230\u540e\u7aef\u5bf9\u5e94\u7684API\uff0cAPI\u8fd4\u56de\u6570\u636e\u4e00\u822c\u662f\u7ed3\u6784\u6027\u7684\uff0c\u53cd\u800c\u7701\u7565\u4e86\u89e3\u6790HTML\u9875\u9762\u7684\u6b65\u9aa4\u3002\u5bfb\u627eAPI\u6709\u4e24\u79cd\u529e\u6cd5\uff0c\u4e00\u79cd\u662f\u6293\u5305\uff0c\u53e6\u4e00\u79cd\u662f\u770bJavaScript\u6e90\u7801\u3002</li> </ol> <p>Selenium \u662f\u6a21\u62df\u6d4f\u89c8\u5668\u7684\u5e38\u7528\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u8fc7\u8981\u6a21\u62df\u6d4f\u89c8\u5668\u7684\u8bdd\uff0c\u6548\u7387\u5c31\u4e0d\u4f1a\u592a\u9ad8\u4e86\u3002\u4e00\u822c\u662f\u7528\u6765\u8fdb\u884c\u6d4b\u8bd5\u800c\u4e0d\u662f\u722c\u866b\u7684\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#_4","title":"\u9a8c\u8bc1\u7801","text":"<p>\u9a8c\u8bc1\u7801\u672c\u6765\u5c31\u662f\u8981\u9a8c\u8bc1\u4f60\u662f\u4e0d\u662f\u4eba\u7684\uff0c\u81ea\u7136\u662f\u6ca1\u90a3\u4e48\u597d\u7ed5\u8fc7\u7684\u3002\u6700\u7ba1\u7528\u7684\u65b9\u6cd5\u662f\u4e70\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u81ea\u5df1\u70b9\u9a8c\u8bc1\u7801\uff08\u3002</p> <p>\u4e0d\u8fc7\u6709\u7684\u65f6\u5019\uff0c\u670d\u52a1\u5668\u53ea\u6709\u5728\u68c0\u6d4b\u5230\u5f02\u5e38\u6d41\u91cf\u624d\u4f1a\u8981\u6c42\u8f93\u5165\u9a8c\u8bc1\u7801\u3002\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u3001IP\u6c60\u3001\u4e91\u670d\u52a1\u7b49\u65b9\u6cd5\uff0c\u9632\u6b62\u5355\u4e2aIP\u5feb\u901f\u53d1\u9001\u8bf7\u6c42\uff0c\u88ab\u670d\u52a1\u5668\u53d1\u73b0\u5f02\u5e38\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%88%AC%E8%99%AB/#_5","title":"\u8eab\u4efd\u9a8c\u8bc1","text":"<p>Cookie: \u4e34\u65f6\u5e94\u4ed8\u4e00\u4e0b\u7684\u8bdd\uff0c\u76f4\u63a5\u628a\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684Cookie\u5b57\u6bb5\u62c9\u8fc7\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u770b\u4e00\u4e0b\u8bf7\u6c42\u5934\u4e00\u822c\u5c31\u80fd\u627e\u5230\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/","title":"Message Queue","text":"<p>\u6d88\u606f\u961f\u5217\u4e2d\u95f4\u4ef6 (Message Queue Middleware \uff0c\u7b80\u79f0\u4e3a MQ) \u662f\u6307\u5229\u7528\u9ad8\u6548\u53ef\u9760\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236\u8fdb\u884c\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u6570\u636e\u4ea4\u6d41\uff0c\u5e76\u57fa\u4e8e\u6570\u636e\u901a\u4fe1\u6765\u8fdb\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u96c6\u6210\u3002\u901a\u8fc7\u63d0\u4f9b\u6d88\u606f\u4f20\u9012 \u548c\u6d88\u606f\u6392\u961f\u6a21\u578b\uff0c\u5b83\u53ef\u4ee5\u5728 \u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u6269\u5c55\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002 \u5bf9\u4e8e\u7f16\u7a0b\u4eba\u5458\u6765\u8bf4\uff0c\u5f15\u5165\u6d88\u606f\u4e2d\u95f4\u4ef6\u8fd8\u6709\u5229\u4e8e\u7a0b\u5e8f\u7684\u89e3\u8026\u3002</p> <p>\u5f00\u6e90\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6\u6709\u5f88\u591a\uff0c\u6bd4\u8f83\u4e3b\u6d41\u7684\u6709 RabbitMQ \u3001 Kafka \u3001 Acti veMQ \u3001 RocketMQ\u7b49\u3002RabbitMQ \u662f\u91c7\u7528 Erlang \u8bed\u8a00\u5b9e\u73b0 AMQP \uff08Advanced Message Queuing Protocol \uff0c\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff09\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002RabbitMQ \u9664\u4e86\u539f\u751f\u652f\u6301 AMQP \u534f\u8bae\uff0c\u8fd8\u652f\u6301 STOMP \uff0c MQTT \u7b49\u591a\u79cd\u6d88\u606f\u4e2d\u95f4\u4ef6\u534f\u8bae\u3002</p> <p>RabbitMQ is a reliable and mature messaging and streaming broker, which is easy to deploy on cloud environments, on-premises, and on your local machine. It is currently used by millions worldwide.</p>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#rabbitmq","title":"RabbitMQ","text":"<p>RabbitMQ \u6574\u4f53\u4e0a\u662f \u4e00\u4e2a\u751f\u4ea7\u8005\uff08producer\uff09\u4e0e\u6d88\u8d39\u8005\uff08consumer\uff09\u6a21\u578b\uff0c\u4e3b\u8981\u8d1f\u8d23\u63a5\u6536\u3001\u5b58\u50a8\u548c\u8f6c\u53d1\u6d88\u606f\u3002\u9664\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u8fd9\u4e9b\u901a\u7528\u6982\u5ff5\uff0c\u8fd8\u9700\u8981\u77e5\u9053\u4ee5\u4e0b\u672f\u8bed\uff1a</p> <ul> <li>Broker\uff08\u63ae\u5ba2\uff09\uff1a\u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u670d\u52a1\u8282\u70b9\u3002\u4e00\u822c\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2aRabbitMQ\u670d\u52a1\u5668\u3002</li> <li>Channel\uff1aRabbitMQ \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u4fe1\u9053\u3002</li> <li>Queue\uff1aRabbitMQ \u7684\u5185\u90e8\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u6d88\u606f\u3002</li> <li>Exchange\u3001RoutingKey\u3001Binding\uff1a\u4ece\u76f4\u89c9\u51fa\u53d1\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a RabbitMQ \u5c31\u662f Producer \u5c06\u6d88\u606f \u653e\u5230\u6307\u5b9a\u7684 Queue\uff0c\u7136\u540e Consumer \u4ece\u6307\u5b9a\u7684\u961f\u5217\u62ff\u51fa\u6d88\u606f\u3002 \u4f46\u662f\u5b9e\u9645\u4e0a\u662f Producer \u5c06\u6d88\u606f\u53d1\u9001\u7ed9 Exchange\uff0c Exchange \u518d\u6839\u636e <code>RoutingKey</code> \u5c06\u6d88\u606f\u8def\u7531\u7ed9\u6307\u5b9a\u7684 Queue\u3002\u5e38\u7528\u7684Exchange\u6709\u4e0b\u9762\u4e09\u79cd<ul> <li>fanout: \u5c06\u53d1\u9001\u7ed9 Exchange \u7684\u6d88\u606f\u8def\u7531\u5230\u6240\u6709\u548c\u5b83\u7ed1\u5b9a\u7684 Queue\u3002</li> <li>direct: \u5c06\u53d1\u9001\u7ed9 Exchange \u7684\u6d88\u606f\u8def\u7531\u5230\u548c RoutingKey \u5b8c\u5168\u5339\u914d\u7684 Queue\u3002</li> <li>topic: \u5c06\u53d1\u9001\u7ed9 Exchange \u7684\u6d88\u606f\u8def\u7531\u5230\u548c RoutingKey \u6a21\u7cca\u5339\u914d\u7684 Queue\u3002\uff08\u6709\u70b9\u7c7b\u4f3c\u6b63\u5219\u7684\u611f\u89c9\uff0c\u4f46\u662f\u5339\u914d\u89c4\u5219\u4e0d\u80fd\u5199\u7684\u50cf\u6b63\u5219\u90a3\u4e48\u590d\u6742\uff09</li> </ul> </li> </ul> <p></p> <p>\u5982\u56fe\u6240\u793a\u3002\u603b\u7ed3\u4e00\u4e0b\uff0cRabbitMQ\u7684\u5de5\u4f5c\u89c4\u5219\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff1a</p> <ol> <li>producer \u5c06\u6d88\u606f\u53d1\u9001\u7ed9 Exchange</li> <li>Exchange \u6839\u636e\u6d88\u606f\u7684 <code>RoutingKey</code> \u505a\u5339\u914d\uff0c\u5c06\u6d88\u606f\u653e\u5230 N \u4e2a\u961f\u5217\u4e2d\uff08\u5982\u679c<code>RoutingKey</code>\u5339\u914d\u4e0d\u4e0a\u4efb\u4f55\u961f\u5217\uff0c\u90a3\u4e48\u9ed8\u8ba4\u4f1a\u88ab\u4e22\u5f03\uff09\u3002</li> <li>consumer \u4ece Queue\u4e2d\u83b7\u53d6\u6d88\u606f\u3002</li> </ol>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#amqp","title":"AMQP","text":"<p>AMQP \u53ef\u4ee5\u7406\u89e3\u4e3a\u548c HTTP \u7c7b\u4f3c\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002AMQP \u534f\u8bae\u672c\u8eab\u5305\u62ec \u4e09\u5c42\u3002</p> <ul> <li>Module Layer: \u4f4d \u4e8e\u534f\u8bae\u6700\u9ad8\u5c42\uff0c\u4e3b\u8981\u5b9a\u4e49\u4e86\u4e00\u4e9b\u4f9b\u5ba2\u6237\u7aef\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u547d\u4ee4\u5b9e\u73b0\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u4f8b\u5982\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528 Queue.Declare \u547d\u4ee4\u58f0\u660e\u4e00\u4e2a\u961f\u5217\u6216\u8005\u4f7f\u7528 Basic.Consume \u8ba2\u9605\u6d88\u8d39\u4e00\u4e2a\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002</li> <li>Session Layer: \u4f4d\u4e8e\u4e2d\u95f4\u5c42\uff0c\u4e3b\u8981\u8d1f\u8d23\u5c06\u5ba2\u6237\u7aef\u7684\u547d\u4ee4\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u518d\u5c06\u670d\u52a1\u7aef\u7684\u5e94\u7b54\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4e3b\u8981\u4e3a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u63d0\u4f9b\u53ef\u9760\u6027\u540c\u6b65\u673a\u5236\u548c\u9519\u8bef\u5904\u7406\u3002</li> <li>Transport Layer: \u4f4d\u4e8e\u6700\u5e95\u5c42\uff0c\u4e3b\u8981\u4f20\u8f93\u4e8c\u8fdb\u5236\u6570\u636e\u6d41 \uff0c\u63d0\u4f9b\u5e27\u7684\u5904\u7406\u3001\u4fe1\u9053\u590d\u7528\u3001\u9519\u8bef\u68c0\u6d4b\u548c\u6570\u636e\u8868\u793a\u7b49\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#_1","title":"\u96c6\u7fa4","text":"<p>RabbitMQ\u672c\u8eab\u4e5f\u53ef\u4ee5\u88ab\u5206\u5e03\u5f0f\u90e8\u7f72\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#demo","title":"Demo","text":"<p>\u5728\u672c\u5730\u5f00\u4e00\u4e2aRabbitMQ\u670d\u52a1\u7aef\uff0cDocker\u80af\u5b9a\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u3002</p> <pre><code>docker run -d \\\n  --name esimmq \\\n  -e RABBITMQ_DEFAULT_USER=&lt; user &gt; \\\n  -e RABBITMQ_DEFAULT_PASS=&lt; secret &gt; \\\n  --hostname rabbitmq \\\n  --publish 15672:15672 \\\n  --publish 5672:5672 \\\n  --volume `pwd`/mqdata:/var/lib/rabbitmq \\\n  rabbitmq:3-management\n</code></pre> <p>\u5bf9\u4e8e\u7f16\u7a0b\u4eba\u5458\u6765\u8bf4\uff0cRabbitMQ\u4eba\u6027\u5316\u7684\u5730\u65b9\u5728\u4e8e\u4ed6\u63d0\u4f9b\u4e86\u5f88\u591a\u8bed\u8a00\u7684\u63a5\u53e3\uff0c\u622a\u6b622024-3-30\uff0c\u6211\u5728\u5b98\u7f51\u4e0a\u770b\u5230\u4e86Python, Java, Ruby, PHP, .NET, JavaScript, Go, Elixir, Objective-C, Swift, Spring AMQP\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u81eatutorials\uff0c\u5b9e\u73b0work queue\u6a21\u578b\uff1a</p> <pre><code>#!/usr/bin/env python  \nimport pika  \nimport sys  \n\ncredentials = pika.PlainCredentials(\"jigaoqiang\", \"jigaoqiang\")\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters(\"127.0.0.1\", 5672, '/', credentials)\n)\nchannel = connection.channel() \n\nchannel.queue_declare(queue='task_queue', durable=True)  \n\nmessage = ' '.join(sys.argv[1:]) or \"Hello World!\"  \nchannel.basic_publish(  \n    exchange='',  \n    routing_key='task_queue',  \n    body=message,  \n    properties=pika.BasicProperties(  \n    delivery_mode=pika.DeliveryMode.Persistent  \n))  \nprint(f\" [x] Sent {message}\")  \nconnection.close()\n</code></pre> <pre><code>#!/usr/bin/env python\nimport pika\nimport time\n\ncredentials = pika.PlainCredentials(\"jigaoqiang\", \"jigaoqiang\")\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters(\"127.0.0.1\", 5672, '/', credentials)\n)\nchannel = connection.channel()\n\nchannel.queue_declare(queue='task_queue', durable=True)\nprint(' [*] Waiting for messages. To exit press CTRL+C')\n\n\ndef callback(ch, method, properties, body):\n    print(f\" [x] Received {body.decode()}\")\n    time.sleep(body.count(b'.'))\n    print(\" [x] Done\")\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\n\nchannel.basic_qos(prefetch_count=1)\nchannel.basic_consume(queue='task_queue', on_message_callback=callback)\n\nchannel.start_consuming()\n</code></pre> <p>\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee<code>localhost:15672</code> \u53ef\u4ee5\u67e5\u770b\u63a7\u5236\u53f0\u3002</p> <p>RabbitMQ\u8fd8\u652f\u6301\u591a\u79cd\u6a21\u5f0f\uff0ctutorials \u91cc\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002\u6709\u8da3\u7684\u662f\u5b83\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0RPC\u3002\u601d\u8def\u5f88\u7b80\u5355\uff0c\u518d caller \u548c callee \u4e4b\u95f4\u5efa\u7acb\u4e24\u4e2a\u53cd\u5411\u7684queue\uff0c\u4e00\u4e2a\u7528\u6765\u8c03\u7528\uff0c\u4e00\u4e2a\u7528\u6765\u8fd4\u56de\u3002\u4e0d\u8fc7\u5728\u5b9e\u8df5\u4e0a\uff0c\u4e00\u822c\u662f\u8fd9\u6837\uff1a</p> <ul> <li>callee \u4f5c\u4e3a consumer\uff0c\u7b49\u5f85\u4e00\u4e2a queue\uff08\u8bb0\u505a <code>callqueue</code>\uff09 \u53d1\u6765\u6d88\u606f\u8fdb\u884c\u8c03\u7528\u3002</li> <li>caller \u5148\u4f5c\u4e3a producer\uff0c\u5411 <code>callqueue</code> \u53d1\u9001\u6d88\u606f\uff08\u8bb0\u505a <code>callmsg</code>\uff09\uff0c\u540c\u65f6\u5e26\u4e0a\u8fd4\u56de\u6d88\u606f\u5e94\u8be5\u53d1\u9001\u5728\u54ea\u4e2aqueue\uff08\u8bb0\u505a<code>returnqueue</code>\uff09\u7684 RoutingKey\u3002\u4e00\u822c\u6211\u4eec\u4e0d\u5c06\u8fd9\u4e2a RoutingKey \u7f16\u7801\u5728 <code>callmsg</code> \u4e2d\uff0c\u800c\u662f\u7f16\u7801\u5728 properties \u7684 <code>reply_to</code> \u5b57\u6bb5\u3002\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u662f\u7528\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\u7684\uff0c\u7b97\u662f\u7ea6\u5b9a\u4fd7\u6210\u3002</li> <li>callee \u6536\u5230\u6d88\u606f\uff0c\u6267\u884c\u51fd\u6570\uff0c\u4ece<code>reply_to</code>\u5b57\u6bb5\u62ff\u51fa RoutingKey\uff0c\u5c31\u53ef\u4ee5\u5c06\u7ed3\u679c\u6d88\u606f\uff08\u8bb0\u505a<code>returnmsg</code>\uff09\u901a\u8fc7 <code>returnqueue</code>\u8fd4\u56de\u4e86\u3002</li> <li>\u6240\u4ee5 caller \u540c\u65f6\u4e5f\u8981\u4f5c\u4e3a consumer\uff0c\u7b49\u5f85 <code>returnqueue</code> \u7684<code>returnmsg</code>\u3002</li> </ul> <p>\u654f\u9510\u7684\u4eba\u53ef\u80fd\u53d1\u73b0\u4e00\u4e2a\u7ec6\u8282\uff0c\u5982\u679ccaller\u540c\u65f6\u5411callee\u53d1\u9001\u597d\u51e0\u4e2a\u6d88\u606f\uff0ccallee\u6ca1\u6709\u6309\u7167\u987a\u5e8f\u8fd4\u56de\u600e\u4e48\u529e\uff1f\u96be\u9053\u8fd9\u4e2a\u8fc7\u7a0b\u8981\u963b\u585e\u7684\u5b8c\u6210\uff1f\u5f53\u7136\u4e0d\u9700\u8981\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e2a <code>callmsg</code> \u7f16\u4e0a\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u53f7\uff0c\u518d\u5728 <code>returnmsg</code> \u4e2d\u5e26\u4e0a\u8fd9\u4e2a\u7f16\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002\u540c\u6837\u7684\u7ea6\u5b9a\u4fd7\u79f0\uff0c\u8fd9\u4e2a\u7f16\u53f7\u4e00\u822c\u901a\u8fc7 properties \u7684 <code>correlation_id</code> \u53d1\u9001\u3002\u518d\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u4f20\u9012\u53c2\u6570\u7684\u7f16\u7801\u5982\u679c\u4f7f\u7528json\u7684\u8bdd\uff0c\u9700\u8981\u6ce8\u610fjson\u4e2d\u6570\u5b57\u5927\u5c0f\u7684\u8303\u56f4\u9650\u5236\uff01\u4ee3\u7801\u89c1 tutorials\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#kafka","title":"Kafka","text":"<p>\u6d88\u606f\uff1aKafka \u4e2d\u7684\u6570\u636e\u5355\u5143\u88ab\u79f0\u4e3a<code>\u6d88\u606f</code>\uff0c\u4e5f\u88ab\u79f0\u4e3a\u8bb0\u5f55\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u6570\u636e\u5e93\u8868\u4e2d\u67d0\u4e00\u884c\u7684\u8bb0\u5f55\u3002</p> <p>\u6279\u6b21\uff1a\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c \u6d88\u606f\u4f1a<code>\u5206\u6279\u6b21</code>\u5199\u5165 Kafka\uff0c\u6279\u6b21\u5c31\u4ee3\u6307\u7684\u662f\u4e00\u7ec4\u6d88\u606f\u3002</p> <p>\u4e3b\u9898\uff1a\u6d88\u606f\u7684\u79cd\u7c7b\u79f0\u4e3a <code>\u4e3b\u9898</code>\uff08Topic\uff09,\u53ef\u4ee5\u8bf4\u4e00\u4e2a\u4e3b\u9898\u4ee3\u8868\u4e86\u4e00\u7c7b\u6d88\u606f\u3002\u76f8\u5f53\u4e8e\u662f\u5bf9\u6d88\u606f\u8fdb\u884c\u5206\u7c7b\u3002\u4e3b\u9898\u5c31\u50cf\u662f\u6570\u636e\u5e93\u4e2d\u7684\u8868\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/RabbitMQ/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>https://juejin.cn/post/6844903495670169607 </li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Distribute/_Index/","title":"_Index","text":"<p>\u4f60\u53ef\u80fd\u4f1a\u51fa\u4e8e\u5404\u79cd\u5404\u6837\u7684\u539f\u56e0\uff0c\u5e0c\u671b\u5c06\u6570\u636e\u5e93\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff1a</p> <ul> <li>\u53ef\u4f38\u7f29\u6027\uff1a\u5982\u679c\u4f60\u7684\u6570\u636e\u91cf\u3001\u8bfb\u53d6\u8d1f\u8f7d\u3001\u5199\u5165\u8d1f\u8f7d\u8d85\u51fa\u5355\u53f0\u673a\u5668\u7684\u5904\u7406\u80fd\u529b\uff0c\u53ef\u4ee5\u5c06\u8d1f\u8f7d\u5206\u6563\u5230\u591a\u53f0\u8ba1\u7b97\u673a\u4e0a\u3002</li> <li>\u5bb9\u9519 / \u9ad8\u53ef\u7528\u6027\uff1a\u5982\u679c\u4f60\u7684\u5e94\u7528\u9700\u8981\u5728\u5355\u53f0\u673a\u5668\uff08\u6216\u591a\u53f0\u673a\u5668\uff0c\u7f51\u7edc\u6216\u6574\u4e2a\u6570\u636e\u4e2d\u5fc3\uff09\u51fa\u73b0\u6545\u969c\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u80fd\u7ee7\u7eed\u5de5\u4f5c\uff0c\u5219\u53ef\u4f7f\u7528\u591a\u53f0\u673a\u5668\uff0c\u4ee5\u63d0\u4f9b\u5197\u4f59\u3002\u4e00\u53f0\u6545\u969c\u65f6\uff0c\u53e6\u4e00\u53f0\u53ef\u4ee5\u63a5\u7ba1\u3002</li> <li>\u5ef6\u8fdf\uff1a\u5982\u679c\u5728\u4e16\u754c\u5404\u5730\u90fd\u6709\u7528\u6237\uff0c\u4f60\u4e5f\u8bb8\u4f1a\u8003\u8651\u5728\u5168\u7403\u8303\u56f4\u90e8\u7f72\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u4ece\u800c\u6bcf\u4e2a\u7528\u6237\u53ef\u4ee5\u4ece\u5730\u7406\u4e0a\u6700\u8fd1\u7684\u6570\u636e\u4e2d\u5fc3\u83b7\u53d6\u670d\u52a1\uff0c\u907f\u514d\u4e86\u7b49\u5f85\u7f51\u7edc\u6570\u636e\u5305\u7a7f\u8d8a\u534a\u4e2a\u4e16\u754c\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/","title":"Basic","text":"<p>\u8fd9\u91cc\u90fd\u662f\u901a\u7528\u7684\u6027\u80fd\u4f18\u5316\u6cd5\u5219\u3002\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\uff0c\u4e00\u4e9b\u7279\u5b9a\u573a\u666f\u7684\u529e\u6cd5\u90fd\u4e0d\u4f1a\u4ecb\u7ecd\u5230\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#_1","title":"\u7d22\u5f15\u2014\u2014\u7a7a\u95f4\u6362\u65f6\u95f4","text":"<p>\u7d22\u5f15\u7684\u539f\u7406\u662f\u62ff\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\u6362\u53d6\u67e5\u8be2\u65f6\u95f4\uff0c\u589e\u52a0\u4e86\u5199\u5165\u6570\u636e\u7684\u5f00\u9500\uff0c\u4f46\u4f7f\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u4ece O(n) \u964d\u4f4e\u5230 O(logn) \u751a\u81f3 O(1)\u3002</p> <p>\u5982\u679c\u6211\u4eec\u60f3\u5728\u7a0b\u5e8f\u4e2d\u5b58\u50a8\u4e00\u7cfb\u5217\u6570\u636e\uff0c\u9664\u4e86\u57fa\u672c\u7684\u6570\u7ec4\u548c Vector\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u4e9b\u5e26\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ul> <li>Hash Table \u7684 \u589e\u5220\u6539\u67e5 \u7b97\u6cd5\u590d\u6742\u5ea6 \u662f O(1)\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7528 Hash \u503c\u4f5c\u4e3a\u7d22\u5f15\u3002</li> <li>\u7ea2\u9ed1\u6811/AVL \u6811/B Tree\uff1a\u4e5f\u53ef\u4ee5\u5f53\u4f5c\u7d22\u5f15\u3002\u7531\u4e8e\u4ed6\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u8ba9\u6211\u4eec\u4e0d\u9700\u8981\u7528\u904d\u5386\u7684\u65b9\u5f0f\u67e5\u627e\u5185\u5bb9\u3002</li> <li>Trie\uff1a\u8fd9\u79cd\u7ed3\u6784\u80fd\u975e\u5e38\u65b9\u4fbf\u7684\u505a\u524d\u7f00\u67e5\u627e\u6216\u8bcd\u9891\u7edf\u8ba1</li> <li>\u5012\u6392\u7d22\u5f15\uff1a\u641c\u7d22\u5f15\u64ce\u4f7f\u7528\u7684\u6280\u672f\uff0c\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5728\u5168\u6587\u641c\u7d22\u5173\u952e\u8bcd\u3002</li> </ul> <p>\u6570\u636e\u5e93\u7684\u7d22\u5f15\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#cache-buffer","title":"\u7f13\u5b58\u548c\u9884\u53d6 (Cache &amp; Buffer)","text":""},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#_2","title":"\u538b\u7f29\u2014\u2014\u65f6\u95f4\u6362\u7a7a\u95f4","text":"<p>\u5728\u7f51\u7edc\u4f20\u8f93\u4e2d\u7528\u5230\u538b\u7f29\u7b97\u6cd5\u5c24\u5176\u591a</p> <ul> <li>\u6211\u4eec\u7ecf\u5e38\u770b\u5230 HTTP \u7684\u8bf7\u6c42\u5934\u91cc\u5934\u6709 <code>Accept-Encoding: Gzip/deflate</code>\uff0c\u5c31\u662f\u7528\u65e0\u635f\u538b\u7f29\u7b97\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u538b\u7f29</li> <li>\u6211\u4eec\u7f51\u4e0a\u770b\u5230\u7684\u56fe\u7247\u548c\u89c6\u9891\u53ef\u80fd\u662f\u6709\u635f\u538b\u7f29\u540e\u7684\u7ed3\u679c\uff0c\u6bd4\u5982 jpg</li> <li>JVM \u7684\u5bf9\u8c61\u6307\u9488\u538b\u7f29\uff0cJVM \u5728 32G \u4ee5\u4e0b\u7684\u5806\u5185\u5b58\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u5f00\u542f\u201cUseCompressedOops\u201d\uff0c\u7528 4 \u4e2a byte \u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u4e5f\u662f JVM \u5c3d\u91cf\u4e0d\u8981\u628a\u5806\u5185\u5b58\u8bbe\u7f6e\u5230 32G \u4ee5\u4e0a\u7684\u539f\u56e0</li> <li>\u5e03\u9686\u8fc7\u6ee4\u5668\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7b97\uff1f</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#_3","title":"\u524a\u5cf0\u586b\u8c37","text":"<p>\u8bb0\u5f97\u5728\u5b57\u8282\u7684\u65f6\u5019\u6709\u4eba\u4e13\u95e8\u7814\u7a76\u8fd9\u73a9\u610f\u513f\u3002</p> <ul> <li>\u4ee3\u7801\u548c\u6570\u636e\u7b49\u8d44\u6e90\u7684 \u5ef6\u65f6\u52a0\u8f7d\u3001\u5206\u6279\u52a0\u8f7d\u3001\u540e\u53f0\u5f02\u6b65\u52a0\u8f7d\u3001\u6216\u6309\u9700\u61d2\u52a0\u8f7d \u7b49\u7b49\u3002</li> <li>\u6211\u4eec\u5728\u4f7f\u7528\u5e93\u51fd\u6570\u5bf9\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u5148\u5199\u5230 buffer \u91cc\u9762\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#_4","title":"\u5e76\u884c\u548c\u5f02\u6b65","text":"<p>\u8fd9\u91cc\u5176\u5b9e\u6709\u5f88\u591a\u53ef\u8bf4\u7684\uff0c\u53ea\u662f\u6211\u624d\u758f\u5b66\u6d45</p> <ul> <li>\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u7a0b\u5e8f\uff0c\u5c3d\u91cf\u4ee5 CPU \u7684\u4e2a\u6570\u8fdb\u884c\u591a\u8fdb\u7a0b\u5904\u7406\uff0c\u591a\u7ebf\u7a0b\uff08Python \u9664\u5916\uff0c\u4ed6\u6709 GIL\uff09\u4e5f\u5dee\u4e0d\u591a\u3002</li> <li>\u5bf9\u4e8e IO \u5bc6\u96c6\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528\u534f\u7a0b\uff0c\u591a\u7ebf\u7a0b\u3002</li> <li>\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u51cf\u5c11\u5185\u6838\u5207\u6362\u7684\u5f00\u9500\u3002</li> <li>\u4f7f\u7528\u65e0\u9501\u7ed3\u6784\uff0c\u6211\u53ea\u662f\u542c\u8bf4\u8fc7\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5e76\u4e0d\u592a\u6e05\u695a\u5177\u4f53\u662f\u4ec0\u4e48\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#linux","title":"Linux \u6027\u80fd\u5206\u6790","text":"<p>\u5927\u4f6c Brendan\u2019 \u4ecb\u7ecd\u4e86\u5f88\u591a\u5728 Linux \u4e0a\u8fdb\u884c\u6027\u80fd\u5206\u6790\u7684\u65b9\u6cd5\u3002\u4ed6\u7ed8\u5236\u4e86\u4e00\u5f20\u56fe\uff0c\u5206\u6790\u7a0b\u5e8f\u5404\u4e2a\u90e8\u5206\u7684\u60c5\u51b5\u3002\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662f <code>perf</code>\u3002</p> <p></p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Basic/#_5","title":"\u57fa\u7840\u5206\u6790\u5de5\u5177","text":"<p>\u8fd9\u4e9b\u5de5\u5177\u80fd\u8ba9\u6211\u4eec\u5bf9\u7a0b\u5e8f\u7684\u8d44\u6e90\u5360\u7528\u60c5\u51b5\u6709\u57fa\u672c\u8ba4\u8bc6\u3002</p> <p>\u5e95\u5c42\u5de5\u5177</p> \u5de5\u5177\u540d\u79f0 \u4f5c\u7528 uptime uptime \u547d\u4ee4\u663e\u793a\u7684\u4fe1\u606f\u663e\u793a\u4f9d\u6b21\u4e3a\uff1a\u73b0\u5728\u65f6\u95f4\u3001\u7cfb\u7edf\u5df2\u7ecf\u8fd0\u884c\u4e86\u591a\u957f\u65f6\u95f4\u3001\u76ee\u524d\u6709\u591a\u5c11\u767b\u9646\u7528\u6237\u3001\u7cfb\u7edf\u5728\u8fc7\u53bb\u7684 1 \u5206\u949f\u30015 \u5206\u949f\u548c 15 \u5206\u949f\u5185\u7684\u5e73\u5747\u8d1f\u8f7d\u3002 top \u67e5\u770b CPU \u5360\u7528\u60c5\u51b5 vmstat \u67e5\u770b\u865a\u62df\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 iostat \u67e5\u770b IO \u4f7f\u7528\u60c5\u51b5 mpstat \u67e5\u770b\u6bcf\u4e2a CPU \u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u9002\u7528\u591a\u6838 free \u5185\u5b58\u4f7f\u7528\u60c5\u51b5 <p>\u4e2d\u95f4\u5c42\u5de5\u5177</p> \u5de5\u5177\u540d\u79f0 \u4f5c\u7528 strace \u67e5\u770b\u7cfb\u7edf\u8c03\u7528\u4f7f\u7528\u60c5\u51b5\uff0c\u4f46\u662f\u975e\u5e38\u6d88\u8017\u6027\u80fd tcpdump \u6293\u5305 netstat \u7f51\u7edc\u72b6\u6001 pidstat \u9488\u5bf9\u67d0\u4e2a\u8fdb\u7a0b\u7684 CPU \u76d1\u63a7\uff0c\u53ef\u53d6\u4ee3 top swapon \u67e5\u770b swap \u5206\u533a\u7684\u4f7f\u7528\u60c5\u51b5 sar system activity reporter, \u53ef\u4ee5\u76d1\u63a7\u5f88\u591a\u60c5\u51b5 collectl <p>\u8fd9\u90fd\u662f\u6700\u57fa\u672c\u7684\u5de5\u5177\u3002\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/","title":"Cache and Buffer","text":"<p>\u8fd9\u91cc\u7684Cache\u5e76\u4e0d\u662f\u6307\u8ba1\u7b97\u673a\u4e2d\u7684\u786c\u4ef6Cache\uff0c\u6307\u7684\u662f\u7f13\u5b58\u3002Cache \u7684\u601d\u60f3\u88ab\u7528\u5728\u5f88\u591a\u7684\u5730\u65b9\u2014\u2014\u2014\u2014\u7528\u4e00\u4e2a\u66f4\u5feb\u7684\u4e1c\u897f\uff0c\u5c06\u9891\u7e41\u4f7f\u7528\u7684\u4e1c\u897f\u7f13\u5b58\u6765\u52a0\u901f\u3002\u7f13\u5b58\u4e0d\u5f97\u4e0d\u9762\u5bf9\u7684\u56f0\u96be\u2014\u2014\u7f13\u5b58\u5931\u6548\u3002\u7f13\u5b58\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u529e\u6cd5\u3002</p> <ol> <li>\u5bc4\u5b58\u5668\u4e4b\u4e8e\u6808\u3001\u5806\uff1a\u7f16\u8bd1\u5668\u4f18\u5316\u5df2\u7ecf\u5f88\u6210\u719f\u4e86\u3002</li> <li>\u786c\u4ef6Cache \u4e4b\u4e8e\u5185\u5b58\uff1a\u4e00\u822c\u6765\u8bf4\u53ea\u6709\u91cf\u5316\uff0c\u8d85\u7b97\u7b49\u7279\u5b9a\u9886\u57df\u5173\u6ce8\u3002</li> <li>\u5185\u5b58\u4e4b\u4e8e\u786c\u76d8/\u6570\u636e\u5e93\uff1a\u6bd4\u5982 Redis\u3002</li> <li>\u786c\u76d8\u4e4b\u4e8e\u7f51\u7edc\uff1a\u6bd4\u5982\u5f88\u591a APP \u90fd\u4f1a\u7f13\u5b58\u6570\u636e\u3002\u5ba2\u6237\u7aef\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528SQLite\u3002</li> <li>CDN \u4e4b\u4e8e\u670d\u52a1\u5668\uff1a\u8282\u70b9\u66f4\u8fd1\uff0c\u901f\u5ea6\u66f4\u5feb\u3002</li> <li>DNS \u6d4f\u89c8\u5668\u7f13\u5b58\uff0cOS \u7f13\u5b58\uff0c\u670d\u52a1\u5668\u7f13\u5b58\u3002</li> <li>\u5982\u679c\u4e00\u4e9b\u8fd0\u7b97\u8fc7\u4e8e\u590d\u6742\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fd0\u7b97\u7684\u7ed3\u679c\u4fdd\u5b58\u3002</li> </ol> <p>\u7f13\u5b58\u662f\u628a\u8bfb\u7684\u7ed3\u679c\u5b58\u5728\u66f4\u5feb\u7684\u5730\u65b9\uff0c\u9884\u53d6\u662f\u731c\u6d4b\u4e4b\u540e\u8981\u8bfb\u7684\u5185\u5bb9\u5148\u628a\u5b83\u5b58\u5728\u66f4\u5feb\u7684\u5730\u65b9\u3002</p> <ul> <li>\u6211\u4eec\u5728\u4f7f\u7528\u5e93\u51fd\u6570\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u771f\u6b63\u8bfb\u7684\u5185\u5bb9\u8981\u6bd4\u6211\u4eec\u6307\u5b9a\u7684\u66f4\u591a\u3002\u9884\u5148\u8bfb\u4e00\u70b9\u653e\u5728 Buffer \u91cc\u3002</li> <li>\u89c6\u9891\u7684\u7f13\u51b2\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/#_1","title":"\u66ff\u6362\u7b56\u7565","text":"<p>\u5728\u7f13\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6709\u65b0\u7684\u6570\u636e\u9700\u8981\u52a0\u8f7d\u8fdb\u7f13\u5b58\uff0c\u5219\u9700\u8981\u5c06\u6700\u4e0d\u53ef\u80fd\u88ab\u7ee7\u7eed\u8bbf\u95ee\u7684\u7f13\u5b58\u5254\u9664\u6389\u3002 \u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6307\u5b9a\u54ea\u4e00\u4e2a\u6570\u636e\u662f\u6700\u4e0d\u53ef\u80fd\u88ab\u7ee7\u7eed\u8bbf\u95ee\u7684\u5462\uff1f\u5f53\u7136\u53ea\u80fd\u731c\uff0c\u57fa\u4e8e\u5047\u8bbe \u4e00\u4e2akey\u8fc7\u53bb\u7ecf\u5e38\u88ab\u8bbf\u95ee\uff0c\u90a3\u4e48\u8be5key\u4e4b\u540e\u4e5f\u4f1a\u88ab\u7ecf\u5e38\u8bbf\u95ee\uff0c\u6211\u4eec\u6709LRU\uff08least recently used\uff09\u7b56\u7565\uff0c\u987e\u540d\u601d\u4e49\u662f\u5254\u9664\u4e0a\u4e00\u6b21\u8bbf\u95ee\u65f6\u95f4\u6700\u4e45\u7684\u6570\u636e\u3002</p> <p>LRU\u7684\u5b9e\u73b0\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868+\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u5b8c\u6210\u3002</p> <ul> <li>\u54c8\u5e0c\u8868\uff1a\u7528\u4e8e\u4fdd\u8bc1\u7f13\u5b58\u7684\u67e5\u627e\u65f6\u95f4\u4e3a O(1)O(1)\u3002\u54c8\u5e0c\u8868\u5b58\u50a8\u952e\u548c\u6307\u5411\u94fe\u8868\u8282\u70b9\u7684\u6307\u9488\u3002</li> <li>\u53cc\u5411\u94fe\u8868\uff1a\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u952e\u503c\u5bf9\uff0c\u94fe\u8868\u6309\u7167\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u6392\u5e8f\uff0c\u6700\u8fd1\u8bbf\u95ee\u7684\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8\uff0c\u6700\u4e45\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u5728\u94fe\u8868\u5c3e\u90e8\u3002</li> <li>\u8bbf\u95ee\u6570\u636e\uff1a<ul> <li>\u5982\u679c\u6570\u636e\u5728\u7f13\u5b58\u4e2d\uff08\u54c8\u5e0c\u8868\u80fd\u627e\u5230\uff09\uff0c\u5219\u5c06\u6570\u636e\u5bf9\u5e94\u7684\u8282\u70b9\u79fb\u52a8\u5230\u94fe\u8868\u5934\u90e8\u3002</li> <li>\u5982\u679c\u6570\u636e\u4e0d\u5728\u7f13\u5b58\u4e2d\uff0c\u7ee7\u7eed\u4e0b\u9762\u7684\u6b65\u9aa4\u3002</li> </ul> </li> <li>\u63d2\u5165\u6570\u636e\uff1a<ul> <li>\u5982\u679c\u7f13\u5b58\u672a\u6ee1\uff0c\u76f4\u63a5\u5728\u94fe\u8868\u5934\u90e8\u6dfb\u52a0\u8282\u70b9\uff0c\u5e76\u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u548c\u6307\u9488\u3002</li> <li>\u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5220\u9664\u94fe\u8868\u5c3e\u90e8\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u5bf9\u5e94\u7684\u952e\uff0c\u7136\u540e\u5728\u94fe\u8868\u5934\u90e8\u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u54c8\u5e0c\u8868\u4e2d\u4e5f\u6dfb\u52a0\u65b0\u7684\u952e\u548c\u6307\u9488\u3002</li> </ul> </li> </ul> <p>LRU\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u7ed3\u6784-LRU\u8fd9\u7bc7\u6587\u7ae0\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/#_2","title":"\u7f16\u7a0b\u5b9e\u8df5","text":"<p>\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b\u5e93\u6216\u8005\u4ee3\u7801\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/#example-of-read-buffer","title":"Example Of Read Buffer","text":"<p>\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e0d\u8fc7\u5728\u7cfb\u7edf\u5185\u6838\u4e2d read \u7cfb\u7edf\u8c03\u7528\u6709\u6ca1\u6709\u505a\u4e00\u5b9a\u7684\u7f13\u5b58\u5462\uff1f\u6211\u4e0d\u6e05\u695a\u3002\u5373\u4f7f\u6709\uff0c\u7cfb\u7edf\u8c03\u7528\u7684\u901f\u5ea6\u4e5f\u662f\u7a0d\u6162\u7684\uff0c\u56e0\u4e3a\u6d89\u53ca\u7279\u6743\u7ea7\u7684\u8f6c\u6362\uff0c\u6211\u4eec\u505a\u7684 buffer \u80af\u5b9a\u4e5f\u8fd8\u662f\u6709\u7528\u7684\u3002\u7a0b\u5e8f\u662f\u8ba1\u7b97\u4e00\u4e2a 4G \u6587\u4ef6\u7684 checksum\uff0c\u5f53\u7136\u4e0b\u9762\u8ba1\u7b97\u7684\u65f6\u5019\u5728\u4e0d\u662f 8 \u5b57\u8282\u5bf9\u9f50\u6ca1\u6709\u8865\u96f6\u662f\u4e0d\u5bf9\u7684\u3002\u4e0b\u9762\u7684\u7a0b\u5e8f\u4e3a\u4e86\u66f4\u8d34\u8fd1\u5e95\u5c42\u4e5f\u662f\u76f4\u63a5\u7528\u7cfb\u7edf\u8c03\u7528\u505a\u4e86\u3002</p> <p>\u65e0 buffer \u7248</p> <pre><code>#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    char buffer[8];\n    long checksum = 0;\n\n    int fd = open(\"disk.dd\", O_RDONLY);\n    while (1) {\n        int b = read(fd, buffer, 8);\n        if (b != 8)\n            break;\n        checksum ^= *(long *)buffer;\n    }\n    printf(\"checksum = 0x%lx\\n\", checksum);\n    close(fd);\n}\n// checksum = 0xdcce4fdc7fd2151d\n// real    6m13.657s\n// user    0m40.016s\n// sys     5m33.439s\n</code></pre> <p>\u6709 buffer \u7248</p> <pre><code>#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    char buffer[4096];\n    long checksum = 0;\n\n    int fd = open(\"disk.dd\", O_RDONLY);\n    while (1) {\n        int b = read(fd, buffer, 4096);\n        for (int i = 0; i &lt; (b &gt;&gt; 3); i++) {\n            checksum ^= *((long *)buffer + i);\n        }\n        if (b &lt;= 8)\n            break;\n    }\n    printf(\"checksum = 0x%lx\\n\", checksum);\n    close(fd);\n}\n// checksum = 0xdcce4fdc7fd2151d\n// real    0m5.857s\n// user    0m3.187s\n// sys     0m2.550s\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u7684\u901f\u5ea6\u5dee\u7684\u4e0d\u662f\u4e00\u70b9\u534a\u70b9\u3002\u6211\u4e5f\u7528\u4e86 <code>fread</code> \u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5373\u4f7f\u4e00\u6b21\u8bfb 8 \u5b57\u8282 <code>fread</code> \u7684\u6548\u7387\u4e5f\u4e0d\u4f1a\u592a\u5dee\u3002<code>fread</code> \u662f\u81ea\u5e26\u7f13\u5b58\u7684\u3002\u6211\u53c8\u53bb\u67e5\u4e86\u4e00\u4e0b\uff0c\u5728 stackoverflow \u4e0a\u770b\u5230\u4e86\uff0c\u4e5f\u662f\u9a8c\u8bc1\u4e86\u6211\u7684\u731c\u60f3\u3002</p> <p><code>read()</code> is a low level, unbuffered read. It makes a direct system call on UNIX. \u5176\u5b9e\u4e5f\u5e76\u4e0d\u662f\u5b8c\u5168\u6ca1\u6709\u7f13\u5b58\uff0c\u5185\u6838\u8fd8\u662f\u6709\u505a\u7684\u3002</p> <p><code>fread()</code> is part of the C library, and provides buffered reads. It is usually implemented by calling <code>read()</code> in order to fill its buffer.</p> <p>\u987a\u4fbf\u6765\u4e00\u4e2a Rust \u7248\u672c\u7684\uff0c\u548c C \u8bed\u8a00\u7684\u8bed\u4e49\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u3002Rust \u4e2d\u53ef\u4ee5\u7528 <code>BufReader</code> \u53bb\u5957\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Read</code> trait \u7684\u7ed3\u6784\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u7684\u5b9e\u73b0 buffer \u7684\u529f\u80fd\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002</p> <p>\u4e0d\u8fc7\u6709\u610f\u601d\u7684\u662f\u5982\u679c\u7528 debug \u6a21\u5f0f\u6267\u884c\u4f1a\u975e\u5e38\u7684\u6162\uff0c\u800c\u4e14\u662f\u6162\u5728\u4e86 user \u90e8\u5206\uff0c\u6211\u731c\u6d4b\u53ef\u80fd\u662f\u8fd9\u4e2a transmute_copy \u8001\u8001\u5b9e\u5b9e\u7684\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u4e86\uff0c\u6ca1\u6709\u505a\u76f8\u5e94\u7684\u4f18\u5316\uff0cRust \u7684\u6c47\u7f16\u592a\u590d\u6742\u4e86\uff0c\u4ee5\u540e\u6709\u7a7a\u5728\u6df1\u7a76\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>Rust \u4f7f\u7528 BufReader</p> <pre><code>use std::{\n    fs::File,\n    io::{BufReader, Read},\n};\n\nfn main() {\n    let mut buffer = [0u8; 8];\n    let buffer = &amp;mut buffer;\n\n    let f = File::open(\"disk.dd\").unwrap();\n    let mut f = BufReader::with_capacity(4096, f);\n\n    let mut checksum: u64 = 0;\n    loop {\n        let b = f.read(buffer).unwrap();\n        if b == 8 {\n            unsafe {\n                checksum = std::mem::transmute_copy::&lt;[u8; 8], u64&gt;(buffer) ^ checksum;\n            }\n        } else {\n            break;\n        }\n    }\n    println!(\"checksum = 0x{:x}\", checksum);\n}\n// debug\u6a21\u5f0f\u4e0b\uff0c\u6ce8\u610f\u8fd9\u91cc\u8017\u65f6\u7684\u662fuser\u90e8\u5206\n// checksum = 0xdcce4fdc7fd2151d\n// real    4m13.759s\n// user    4m11.227s\n// sys     0m2.464s\n\n// release\u6a21\u5f0f\u4e0b\n// checksum = 0xdcce4fdc7fd2151d\n// real    0m9.864s\n// user    0m7.135s\n// sys     0m2.678s\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/#rust-cached","title":"Rust - cached","text":"<p>\u4f7f\u7528\u5185\u5b58\u5bf9\u6570\u636e\u8fdb\u884c\u7f13\u5b58\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u3002\u5982\u679c\u53ef\u4ee5\u5c06\u7f13\u5b58\u62bd\u8c61\u4e3a\u4f7f\u7528Key-Value\u7684\u65b9\u5f0f\u5b58\u50a8\uff1a</p> <ul> <li>Redis\uff1aRedis\u670d\u52a1\u5668\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u4e0d\u4f1a\u968f\u4e3b\u7a0b\u5e8f\u5173\u95ed\u800c\u4e22\u5931\u3002\u529f\u80fd\u4e30\u5bcc\u3002</li> <li>\u6700\u7b80\u5355\u76f4\u767d\uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\uff0c<code>HashMap</code>\u3002</li> <li>...</li> </ul> <p>\u4f46\u662f\u8fd9\u4e9b\u65b9\u6cd5\u6216\u591a\u6216\u5c11\u90fd\u9700\u8981\u4f60\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u539f\u672c\u7a0b\u5e8f\u7684\u903b\u8f91\uff1a</p> <ol> <li>\u9996\u5148\u8981\u53bb\u9700\u6c42\uff0c\u751f\u6210key\uff0c\u5bf9\u7f13\u5b58\u8fdb\u884c\u8bfb\u53d6<ol> <li>\u5982\u679c\u547d\u4e2d\uff08\u53ef\u80fd\u8fd8\u8981\u5224\u5b9a\u7f13\u5b58\u662f\u5426\u8fd8\u5408\u6cd5\uff09\uff0c\u8fd4\u56de\u7f13\u5b58\u6570\u636e\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u547d\u4e2d\uff0c\u4f7f\u7528\u539f\u672c\u7a0b\u5e8f\u903b\u8f91\u83b7\u53d6\u6570\u636e\uff0c\u4fdd\u5b58\u5230\u7f13\u5b58\u4e2d\uff0c\u8fd4\u56de\u3002</li> </ol> </li> </ol> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u903b\u8f91\u5b9e\u9645\u4e0a\u662f\u901a\u7528\u7684\u3002\u53ef\u4ee5\u5c06\u5b83\u62bd\u8c61\u51fa\u6765\u3002\u5728Rust\u4e2d\uff0c\u4f7f\u7528\u5b8f\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\u662f\u6bd4\u8f83\u5408\u9002\u7684\u3002cached \u8fd9\u4e2a\u5e93\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u62bd\u8c61\u3002</p> <p>\u4f7f\u7528\u8fd9\u4e2a\u5e93\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06 \u539f\u672c\u7a0b\u5e8f\u7684\u903b\u8f91\uff08\u53ef\u80fd\u662f\u8017\u65f6\u4e45\u7684I/O\uff0c\u53ef\u80fd\u662f\u8017\u65f6\u4e45\u7684\u8ba1\u7b97\uff1fanything\uff09 \u63d0\u53d6\u6210\u4e00\u4e2a\u4e0d\u4f7f\u7528<code>self</code>\u7684\u51fd\u6570\uff0c<code>f(x,x,x) -&gt; y</code>\u3002\u7136\u540e\u4f7f\u7528<code>#[cached]</code>\u5b8f\u4fee\u9970\u51fd\u6570\u3002</p> <ol> <li>\u81ea\u5b9a\u4e49\u4f7f\u7528\u201cKV\u6570\u636e\u5e93\u201d\u7c7b\u578b\uff0c\u5b83\u73b0\u5728\u652f\u6301<code>RedisCache</code>\uff08\u5982\u679c\u8981\u4f7f\u7528Redis\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff09\u3001<code>TimedCache</code>\uff08\u5982\u679c\u89c9\u5f97\u6570\u636e\u4f1a\u8fc7\u671f\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff09\uff0c<code>SizedCache</code>\uff08\u5982\u679c\u89c9\u5f97\u9700\u8981\u9650\u5236\u7f13\u5b58\u5927\u5c0f\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff09\uff0c<code>DiskCache</code>\uff08\u5982\u679c\u89c9\u5f97\u7f13\u5b58\u6570\u636e\u9700\u8981\u6301\u4e45\u5316\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff0c\u5728\u80cc\u540e\u4f7f\u7528\u4e86 sled \u6570\u636e\u5e93\uff0c\u7c7b\u4f3cKV\u7248\u7684SQLite\uff09\u3002</li> <li>\u81ea\u5b9a\u4e49\u4f7f\u7528\u7684Key\u3002<ol> <li>\u5982\u679c\u4e0d\u5b9a\u4e49\u7684\u8bdd\uff0c\u4f1a\u4f7f\u7528\u51fd\u6570\u6240\u6709\u7684\u53c2\u6570\u7b97Hash\u4f5c\u4e3aKey\uff08\u9664\u4e86Redis\u548cDisk\uff09\uff0cRedis\u548cDisk\u9ed8\u8ba4\u7528Display\u65b9\u6cd5\u7684\u7ed3\u679c\u4f5c\u4e3aKey\u3002</li> <li>\u4f7f\u7528<code>convert</code>\u4fee\u6539Key\u3002</li> </ol> </li> <li>Value\u5c31\u662f\u8fd4\u56de\u503c\u3002\u9700\u8981\u5b9e\u73b0<code>Clone</code>\uff08\u9664\u4e86 Redis\u548cDisk\uff09\uff0cRedis\u548cDisk\u9700\u8981\u5b9e\u73b0<code>Serialize</code>\u548c<code>DeserializeOwned</code>\u3002</li> </ol> <p>Redis \u6bd5\u7adf\u6ca1\u6cd5\u76f4\u63a5\u5b58\u50a8Rust\u4e2d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u5408\u7406\u3002\u90a3\u96be\u9053Sled\u53ef\u4ee5\u76f4\u63a5\u5b58\u50a8Rust\u4e2d\u7684\u6570\u636e\u7ed3\u6784\uff1f\u8fd8\u662f\u4ed6\u7684\u6587\u6863\u6ca1\u6709\u5199\u6e05\u695a\uff1f</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Cache%20and%20Buffer/#rust-lru","title":"Rust - LRU","text":"<p>lru-rs\u8fd9\u4e2a\u5e93\u5b9e\u73b0\u4e86LRU\uff0c\u601d\u8def\u548c\u4e0a\u8ff0\u76f8\u540c\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Optimize/Optimize/","title":"\u7a0b\u5e8f\u4f18\u5316","text":"<p>\u514b\u52aa\u7279\u4f18\u5316\u539f\u5219\uff1aWe should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e0d\u8981\u8fc7\u65e9\u7684\u4f18\u5316\u7a0b\u5e8f\uff0c\u4e0d\u8981\u8fc7\u5ea6\u8bbe\u8ba1\u3002</p> <p>Amdahl \u5b9a\u5f8b\uff0c\u5982\u679c\u6211\u4eec\u5c06\u7a0b\u5e8f\u4e2d \u6027\u80fd\u6d88\u8017\u5360\u6bd4\u4e3a a \u7684\u90e8\u5206\u4f18\u5316\u4e86 n \u500d\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6548\u679c\u662f \\(\\(S=\\frac1{(1\u2212a)+a/n}\u200b\\)\\) \u4ed6\u544a\u8bc9\u6211\u4eec\uff0c\u8981\u4f18\u5316\u7a0b\u5e8f\uff0c\u8981\u6293\u4f4f\u7a0b\u5e8f\u7684\u6027\u80fd\u74f6\u9888\u6240\u5728\uff0c\u624d\u80fd\u505a\u5230\u6709\u6548\u4f18\u5316\u3002</p> OP(io) cost\uff081s= 10^9ns) L1 cache reference \u8bfb\u53d6CPU\u7684\u4e00\u7ea7\u7f13\u5b58 0.5 ns Branch mispredict(\u8f6c\u79fb\u3001\u5206\u652f\u9884\u6d4b) 5 ns L2 cache reference \u8bfb\u53d6CPU\u7684\u4e8c\u7ea7\u7f13\u5b58 7 ns Mutex lock/unlock \u4e92\u65a5\u9501\\\u89e3\u9501 100 ns Main memory reference \u8bfb\u53d6\u5185\u5b58\u6570\u636e 100 ns Compress 1K bytes with Zippy 1k\u5b57\u8282\u538b\u7f29 10,000 ns Send 2K bytes over 1 Gbps network \u57281Gbps\u7684\u7f51\u7edc\u4e0a\u53d1\u90012k\u5b57\u8282 20,000 ns Read 1 MB sequentially from memory \u4ece\u5185\u5b58\u987a\u5e8f\u8bfb\u53d61MB 250,000 ns Round trip within same datacenter \u4ece\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u5f80\u8fd4\u4e00\u6b21\uff0cping\u4e00\u4e0b 500,000 ns Disk seek \u78c1\u76d8\u641c\u7d22 10,000,000 ns Read 1 MB sequentially from network \u4ece\u7f51\u7edc\u4e0a\u987a\u5e8f\u8bfb\u53d61\u5146\u7684\u6570\u636e 10,000,000 ns Read 1 MB sequentially from disk \u4ece\u78c1\u76d8\u91cc\u9762\u8bfb\u51fa1MB 30,000,000 ns Send packet CA-&gt;Netherlands-&gt;CA \u4e00\u4e2a\u5305\u7684\u4e00\u6b21\u8fdc\u7a0b\u8bbf\u95ee 150,000,000 ns"},{"location":"%E5%BC%80%E5%8F%91/PL/LLVM/","title":"LLVM","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/CRUD/","title":"Database CRUD","text":"<p>\u8fd9\u7bc7\u5c5e\u4e8eWeb\u5f00\u53d1\u7684Database\u4ecb\u7ecd\u6587\u7ae0\uff0c\u5e76\u4e0d\u662f\u60f3\u4ecb\u7ecdDatabase\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u4e5f\u4e0d\u662f\u4ecb\u7ecdSQL\u8bed\u53e5\u3002\u800c\u662f\u4ecb\u7ecd\u5728Web\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u8fde\u63a5\u3001\u4f7f\u7528\u6570\u636e\u5e93\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/CRUD/#connection","title":"Connection","text":"<p>\u7a0b\u5e8f\u4e0ePostgreSQL\u6570\u636e\u5e93\u901a\u8fc7 TCP/IP \u6216 Unix-domain sockets \u5efa\u7acb\u8fde\u63a5\uff0c\u4f7f\u7528PostgreSQL\u81ea\u5df1\u6307\u5b9a\u7684\u5e94\u7528\u5c42\u4f20\u8f93\u534f\u8bae\uff0c\u4e00\u822c\u57285432\u7aef\u53e3\u8fd0\u884c\u3002</p> <p>\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u7a0b\u5e8f\u53d1\u9001\u7684\u8bf7\u6c42\u662f\u4f7f\u7528\u6587\u672c\u7f16\u7801\u7684SQL\u8bed\u53e5\uff0c\u8fd4\u56de\u7684\u7c7b\u578b\u6709PostgreSQL\u81ea\u5df1\u7684\u7f16\u7801\u89c4\u8303\u3002\u5ba2\u6237\u7aef\u7a0b\u5e8f\u9700\u8981\u6839\u636e\u89c4\u8303\u89e3\u7801\u3002</p> <p>\u5e38\u7528\u7684\u5ba2\u6237\u7aef\u7a0b\u5e8f\u6709Python\u7684<code>psycopg2</code>\uff0cC\u8bed\u8a00\u7684<code>libpq</code>\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/CRUD/#orm","title":"ORM \u6846\u67b6","text":"<p>ORM\u6846\u67b6\u5927\u90fd\u633a\u96be\u7528\u7684\uff0c\u6709\u65f6\u5019\u4f60\u4f1a\u89c9\u5f97\u8fd8\u4e0d\u5982\u76f4\u63a5\u7528Raw SQL\u3002\u3002\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/CRUD/#python-sqlalchemy","title":"Python - SQLAlchemy","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/CRUD/#rust-seaorm","title":"Rust - SeaORM","text":"<p>https://www.sea-ql.org/SeaORM/</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/Index/","title":"Index","text":"<p>\u4e00\u822c\u8ba4\u4e3aWeb\u670d\u52a1\u5668\u7a0b\u5e8f\u662f\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u5373\u6240\u8c13\u7684\u5b88\u62a4\u7a0b\u5e8f\uff0cdaemon\uff09\uff0c\u5b83\u53ea\u5728\u54cd\u5e94\u6765\u81ea\u7f51\u7edc\u7684\u8bf7\u6c42\u65f6\u624d\u53d1\u9001\u7f51\u7edc\u6d88\u606f\u3002\u534f\u8bae\u7684\u53e6\u4e00\u7aef\u662fWeb\u5ba2\u6237\u7a0b\u5e8f\uff0c\u5982\u67d0\u79cd\u6d4f\u89c8\u5668\uff0c\u4e0e\u670d\u52a1\u5668\u8fdb\u7a0b\u7684\u901a\u4fe1\u603b\u662f\u7531\u5ba2\u6237\u8fdb\u7a0b\u53d1\u8d77\u3002</p> <p>\u8fd9\u91cc\u7684Web\u6307\u7684\u662f\u670d\u52a1\u5668\u540e\u7aef\u3002\u5e94\u8be5\u662f\u4e2d\u56fd\u9700\u6c42\u6700\u5927\u7684\u7a0b\u5e8f\u5458\u79cd\u7c7b\u4e86\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/RPC/","title":"RPC","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/RPC/#grpc","title":"GRPC","text":"<p>gRPC \u4e00\u5f00\u59cb\u7531 google \u5f00\u53d1\uff0c\u662f\u4e00\u6b3e\u8bed\u8a00\u4e2d\u7acb\u3001\u5e73\u53f0\u4e2d\u7acb\u3001\u5f00\u6e90\u7684\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528(RPC)\u7cfb\u7edf\u3002</p> <p>gRPC\u662f\u4e00\u6574\u5957RPC\u65b9\u6848\uff0c\u5b83\u5305\u62ec\uff1a</p> <ul> <li>Protobuf(Protocol Buffers)\u4f5c\u4e3a\u63a5\u53e3\u5b9a\u4e49\u8bed\u8a00\uff08IDL\uff09\u548c\u6d88\u606f\u4ea4\u6362\u683c\u5f0f\uff0c\u5173\u4e8eProtobuf\u5728Serde \u6587\u7ae0\u4e2d\u6709\u4ecb\u7ecd\u3002Protobuf \u63d0\u4f9b\u4e86\u5f88\u591a\u8bed\u8a00\u7684\u652f\u6301\u3002</li> <li>\u57fa\u4e8eHTTP/2 \u901a\u4fe1\u534f\u8bae\uff0c\u5141\u8bb8\u5728\u5355\u4e2aTCP\u8fde\u63a5\u4e0a\u540c\u65f6\u53d1\u9001\u591a\u4e2a\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u4e8c\u8fdb\u5236\u5206\u5e27\u548c\u5934\u90e8\u538b\u7f29\u5927\u5927\u63d0\u9ad8\u4e86\u6570\u636e\u4f20\u8f93\u7684\u6548\u7387\uff0c\u5141\u8bb8\u670d\u52a1\u5668\u63a8\u9001\uff08\u4f46\u4e0d\u7b49\u4e8e\u5168\u53cc\u5de5\uff09</li> </ul> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528Protobuf\u800c\u4f7f\u7528\u5176\u4ed6\u7684\u5e8f\u5217\u5316\u65b9\u6848\uff0c\u4f7f\u7528\u5176\u4ed6\u7684\u901a\u4fe1\u534f\u8bae\u3002\u4f46\u662f\u9ed8\u8ba4\u60c5\u51b5\u90fd\u662f\u5982\u6b64\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e5f\u8db3\u591f\u597d\uff0c\u4e0b\u9762\u4e5f\u4e0d\u4f1a\u6d89\u53ca\u5176\u4ed6\u65b9\u6cd5\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/RPC/#usage","title":"Usage","text":"<p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd gRPC \u548c Protocol Buffers \u5de5\u5177\u94fe\u5df2\u7ecf\u5b89\u88c5\u3002\u4ee5 Go \u8bed\u8a00\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u8fd9\u6837\u5b89\u88c5\uff1a</p> <pre><code>go install google.golang.org/grpc@latest\ngo install google.golang.org/protobuf/cmd/protoc-gen-go@latest\ngo install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\n</code></pre> <p>\u63a5\u7740\u5173\u952e\u90e8\u5206\u662f\u5b9a\u4e49\u670d\u52a1\u548c\u6d88\u606f\u683c\u5f0f\uff0c\u4f7f\u7528<code>proto3</code>\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5b9a\u4e49\u4e86Greeter\u670d\u52a1\uff0c\u63d0\u4f9bSayHello\u8fdc\u7a0b\u8c03\u7528\u3002</p> <pre><code>syntax = \"proto3\";\n\npackage helloworld;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloResponse);\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloResponse {\n  string message = 1;\n}\n</code></pre> <p>\u4f7f\u7528 <code>protoc</code> \u547d\u4ee4\u884c\u5de5\u5177\u751f\u6210\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4ee3\u7801\uff1a</p> <pre><code>protoc --go_out=. --go-grpc_out=. helloworld.proto\n</code></pre> <p>\u5728\u670d\u52a1\u7aef\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u5728 <code>.proto</code> \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u7136\u540e\u5f00\u59cblisten TCP\u8bf7\u6c42\u3002\u5ba2\u6237\u7aef\u5c06\u5efa\u7acb\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u7136\u540e\u8c03\u7528\u670d\u52a1\u7aef\u7684\u65b9\u6cd5\u3002\u53c2\u8003grpc helloworld\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/","title":"Server","text":"<p>Web Server\u7684\u529f\u80fd\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u63a5\u53d7HTTP Request\uff0c\u6839\u636e\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u8fd4\u56de\u76f8\u5e94\u7684Response\u3002\u4f46\u662f\u5728\u5b9e\u9645\u7684\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u8981\u8003\u8651\u7684\u95ee\u9898\u5f88\u591a\u3002\u6bd4\u5982\u7f51\u7edc\u3001\u6570\u636e\u5b58\u50a8\u3001\u6d41\u91cf\u63a7\u5236\u3001\u4f1a\u8bdd\u7ba1\u7406\u3001\u5b89\u5168\u7b49\u7b49\u95ee\u9898\u3002\u8fd8\u597d\uff0c\u6211\u4eec\u6709\u8bb8\u591a\u73b0\u6210\u7684Web Server\u6846\u67b6\u5728\u4e0d\u540c\u7a0b\u5ea6\u4e0a\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u95ee\u9898\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#introduction","title":"Introduction","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#request","title":"Request \u53c2\u6570","text":"<p>\u867d\u7136HTTP\u534f\u8bae\u89c4\u5b9a\u4e866\u4e2d\u8bf7\u6c42\u65b9\u6cd5\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u6700\u5e38\u7528\u7684\u53ea\u6709GET\u548cPOST\u3002</p> <p>\u6839\u636eRFC2612\u7684\u89c4\u5b9a\uff0cGET\u65b9\u6cd5\u7684\u8bf7\u6c42\u5185\u5bb9\u5e94\u8be5\u5b8c\u5168\u7531 Request URI \u51b3\u5b9a\uff08\u4e5f\u5c31\u662f\u8bf4\u867d\u7136\u7528\u6237\u53ef\u4ee5\u5728\u4f7f\u7528GET\u65b9\u6cd5\u65f6\u5e26\u4e0aRequest Body\uff0c\u4f46\u662f\u670d\u52a1\u5668\u5ffd\u7565\u5b83\u662f\u5b8c\u5168\u5408\u7406\u7684\uff0c\u5229\u7528\u5b83\u7684\u503c\u53cd\u800c\u662f\u4e0d\u7b26\u5408\u89c4\u8303\u7684\uff09\u3002</p> <p>\u6839\u636e[RFC3986] \u7684\u89c4\u5b9a\uff0cRequest URI \u53ea\u80fd\u5305\u542b ASCII \u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7279\u6b8a\u5b57\u7b26\u4ee5\u53ca\u4e00\u4e9b\u4fdd\u7559\u5b57\u7b26\u3002\u5982\u679c\u60f3\u8981\u4f20\u9012\u7279\u6b8a\u5b57\u7b26\uff0c\u9700\u8981\u8fdb\u884c\u767e\u5206\u6bd4\u7f16\u7801\uff08Percent-encoding\uff09\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u9009\u62e9base64\u7b49\u65b9\u6cd5\uff0c\u5c06\u4e8c\u8fdb\u5236\u7f16\u7801\u6210ASCII\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5e38\u7528<code>?param1=a&amp;param2=b</code>\u7684\u65b9\u5f0f\u5bf9GET\u53c2\u6570\u8fdb\u884c\u7f16\u7801\uff0c\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u89c4\u8303\u89c4\u5b9a\u7684\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u53c2\u6570\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u53ef\u4ee5\uff0c\u4f46\u6ca1\u5fc5\u8981\uff09\u3002</p> <p>POST\u7684\u53c2\u6570\u4e3b\u8981\u901a\u8fc7Request Body\u8fdb\u884c\u4f20\u9012\uff0c\u5176\u4e2d\u53ef\u4ee5\u5305\u542b\u4e8c\u8fdb\u5236\u5185\u5bb9\u3002\u4f5c\u4e3aServer\u7684\u7f16\u5199\u8005\uff0c\u6211\u4eec\u9700\u8981\u6839\u636eRequest Header\u7684<code>Content-Type</code> \u548c <code>Content-Length</code>\u6765\u6b63\u786e\u89e3\u6790\u6570\u636e\u3002\u4f8b\u5982\uff1a</p> <pre><code>POST /upload HTTP/1.1\nHost: example.com\nContent-Type: image/jpeg\nContent-Length: 12345\n\n[...JPEG\u6570\u636e\u7684\u4e8c\u8fdb\u5236\u5185\u5bb9...]\n</code></pre> <p>\u8fd9\u662f\u6700\u57fa\u7840\u7684\u3002\u5982\u679c\u6570\u636e\u91cf\u5927\uff0c\u8fd8\u4f1a\u6d89\u53ca\u5206\u5757\u4f20\u8f93\u3001\u6570\u636e\u538b\u7f29\u3002\u4f8b\u5982\u5904\u7406<code>Transfer-Encoding: chunked</code>\u548c<code>Content-Encoding: gzip</code>\u3002\u4e0d\u8fc7\u66f4\u591a\u65f6\u5019\u53ef\u80fd\u7528\u6237\u63d0\u4ea4\u7684\u5c31\u662f\u4e00\u4e2a\u8868\u5355\uff0c\u6216\u8005\u662f\u4e00\u4e2aJSON\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#cookie","title":"Cookie","text":"<p>\u7531\u4e8e HTTP is stateless\uff0c\u6240\u4ee5\u5982\u679c\u7528\u6237\u9700\u8981\u7ef4\u62a4\u4e0eHTTP\u7684\u72b6\u6001\uff0c\u9700\u8981\u5728 HTTP \u534f\u8bae\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u4e1c\u897f\u3002\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f Cookie\u3002</p> <p>\u5e38\u89c1\u7684\u5b89\u5168\u95ee\u9898\uff1a</p> <ol> <li>Attack against authentication</li> <li>Injection &amp; Inclusion attack</li> <li>Unauthorized read of client information</li> <li>Unexpected overwrite of client information</li> <li>Overuse of web application resources</li> </ol>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#frameworks","title":"Frameworks","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#rocket","title":"Rocket","text":"<p>Rocket\u662f\u4f7f\u7528Rust\u7f16\u5199\u7684Web\u6846\u67b6\uff0c\u4e3b\u6253\u5b89\u5168\u548c\u9ad8\u6548\uff08\u4f30\u8ba1\u5728\u56fd\u5185\u662f\u6ca1\u6709\u516c\u53f8\u4f7f\u7528\u4e86\uff09\u3002\u5b83\u7684\u8bbe\u8ba1\u8fd8\u662f\u633a\u76f4\u63a5\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6765\u81ea\u7528\u6237\u7684Request\uff0c\u52064\u6b65\u8fdb\u884c\u5904\u7406\uff0c\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u751f\u547d\u5468\u671f\uff1a</p> <ol> <li>Routing\uff08\u8def\u7531\uff09\uff1aRocket\u5c06\u53d1\u6765\u7684HTTP\u8bf7\u6c42\u89e3\u6790\u4e3a\u539f\u751f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u6839\u636e\u4ee3\u7801\u4e2d\u58f0\u660e\u7684 \u8def\u7531\u5c5e\u6027 \u8fdb\u884c\u5339\u914d\uff0c\u5c06\u8bf7\u6c42\u8def\u7531\u5230 handler\uff08\u5904\u7406\u5668\uff09\u3002</li> <li>Validation\uff08\u6821\u9a8c\uff09\uff1aRocket\u6821\u9a8c\u8bf7\u6c42\u662f\u5426\u6ee1\u8db3\u4ee3\u7801\u4e2d\u7684 \u7c7b\u578b\u58f0\u660e \u548c guard \u3002\u5982\u679c\u6821\u9a8c\u5931\u8d25\uff0cRocket\u4f1a\u5c06\u8bf7\u6c42 \u8f6c\u53d1 \u5230\u4e0b\u4e00\u4e2a\u6ee1\u8db3\u5339\u914d\u7684\u8def\u7531\uff0c\u6216\u8005\u8c03\u7528 \u9519\u8bef\u5904\u7406\u5668\u3002</li> <li>Processing\uff08\u5904\u7406\uff09\uff1a\u63a5\u7740 \u5904\u7406\u5668\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u4f20\u5165\u6821\u9a8c\u8fc7\u7684\u53c2\u6570\u3002\u8fd9\u662f\u7a0b\u5e8f\u7684\u4e3b\u8981\u4e1a\u52a1\u903b\u8f91\u3002\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u5fc5\u987b\u8981\u8fd4\u56de <code>Response</code> \uff08\u8fd9\u662f\u4e00\u4e2atrait\uff0c\u770b\u8d77\u6765\u5e38\u89c1\u7684\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\uff0c\u6bd4\u5982String, Json, Result...\uff09\u3002</li> <li>Response\uff08\u54cd\u5e94\uff09\uff1aRocket\u4f1a\u5bf9 <code>Response</code> \u8fdb\u884c\u5904\u7406\uff0c\u751f\u6210\u5bf9\u5e94\u7684HTTP\u54cd\u5e94\uff0c\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002</li> </ol> <p>\u4e00\u4e2a\u7b80\u5355\u7684Hello World\u7a0b\u5e8f\u5982\u4e0b\u6240\u793a\u3002btw\uff0c\u867d\u7136\u4f60\u770b\u5230\u8fd9\u91cc\u5b9a\u4e49\u7684\u597d\u50cf\u90fd\u662f\u666e\u901a\u51fd\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u4e0arocket\u80cc\u540e\u4f7f\u7528\u4e86tokio\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u662f\u5f02\u6b65\u6267\u884c\u7684\u3002\u6211\u89c9\u5f97\u8bbe\u8ba1\u7684\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u9002\u5408\u5f00\u53d1API\u3002</p> <pre><code>#[macro_use] extern crate rocket;\n\n#[get(\"/world\")]\nfn world() -&gt; &amp;'static str {\n    \"Hello, world!\"\n}\n\n#[launch]\nfn rocket() -&gt; _ {\n    rocket::build().mount(\"/hello\", routes![world])\n}\n</code></pre> <ul> <li>Rocket Guide</li> <li>Rocket Documents</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#fastapi","title":"fastapi","text":"<p>FastAPI \u662f\u4e00\u4e2aPython\u7684Web\u6846\u67b6\uff0c\u4e3b\u6253\u4e00\u4e2a\u5feb\uff0c\u8fd0\u884c\u5feb\u5f00\u53d1\u5feb\uff0c\u5199\u8d77\u6765\u5f88\u8212\u670d\u3002\u4e0b\u9762\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u4e86\u4e09\u4e2a\u5e93\uff1a<code>fastapi</code>\u5e93\uff0c\u7528\u4e8e\u521b\u5efaWeb API\uff1b<code>pydantic</code>\u7528\u6765\u8bbe\u7f6e\u548c\u9a8c\u8bc1\u6570\u636e\u6a21\u578b\uff1b<code>uvicorn</code>\u662f\u4e00\u4e2a\u5feb\u901f\u7684ASGI (Asynchronous Server Gateway Interface)\u5b9e\u73b0\u3002</p> <pre><code>from fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\nclass TextInput(BaseModel):\n    text: str\n\n@app.post(\"/check\")\nasync def check_text(input_data: TextInput):\n    # \u83b7\u53d6\u6587\u672c\u957f\u5ea6\n    text_length = len(input_data.text)\n\n    # \u5224\u65ad\u6587\u672c\u957f\u5ea6\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\n    if text_length % 2 == 0:\n        return {\"result\": \"good\"}\n    else:\n        return {\"result\": \"bad\"}\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/Web/Server/#api","title":"API","text":"<p>\u63d0\u4f9b API \u662f\u5e38\u89c1\u7684\u540e\u7aef\u670d\u52a1\u3002\u5176\u4e2dRESTful API\u53c8\u662f\u6700\u4e3a\u7b80\u5355\u5e38\u89c1\u7684\u3002</p> <p>\u7f16\u5199RESTful API\u670d\u52a1\u672c\u8eab\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4e0d\u8fc7\u7f16\u5199API\u6587\u6863\u5012\u662f\u633a\u9ebb\u70e6\u7684\u5de5\u4f5c\uff0c\u5c24\u5176\u662f\u4e07\u4e00API\u7ecf\u5e38\u53d8\u52a8\uff0c\u5982\u4f55\u4fdd\u8bc1\u6587\u6863\u548c\u4ee3\u7801\u7684\u4e00\u81f4\u6027\uff1f\u8fd9\u79cd\u81ea\u52a8\u5316\u7684\u5de5\u4f5c\u81ea\u7136\u6709\u81ea\u52a8\u5316\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982OpenAPI\u3002</p> <p>Rust\u4e0eOpenAPI\u96c6\u6210\u65b9\u6848\u6709utoipa\uff0c\u4ed6\u53ef\u4ee5\u901a\u8fc7\u5b8f\u6765\u5bf9\u5916\u90e8\u63a5\u53e3\u8fdb\u884c\u6ce8\u91ca\uff0c\u8fdb\u800c\u81ea\u52a8\u751f\u6210 API Doc\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u66b4\u9732API Doc\u7ed9\u7528\u6237\u3002\u8fd9\u4e2a\u5e93\u76ee\u524d\u8fd8\u4e0d\u662f\u5f88\u6210\u719f\uff0c\u6587\u6863\u4e5f\u6bd4\u8f83\u6df7\u4e71\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/Web/actix-web/","title":"Actix-Web","text":""},{"location":"%E5%BC%80%E5%8F%91/Web/actix-web/#_1","title":"\u91cd\u8981\u6982\u5ff5","text":"<ul> <li><code>App</code>\uff1a\u662f\u4e00\u4e2astruct\uff0c\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u5e94\u7740\u4e00\u4e2a\u5e94\u7528\u3002\u5728\u5e94\u7528\u4e0a\u53ef\u4ee5\u7ba1\u7406\u72b6\u6001\u3001\u914d\u7f6e\u8def\u7531\u3002</li> <li><code>Service</code>\uff1a\u662f\u4e00\u4e2atrait\uff0c\u89c4\u5b9a\u4e86<code>Request</code>\u662f\u5982\u4f55\u5f02\u6b65\u7684\u8f6c\u5316\u6210<code>Response</code>\u3002</li> <li><code>Transform</code>\uff1a\u662f\u4e00\u4e2atrait\uff0c\u53ef\u4ee5\u7528\u6765\u5305\u88c5\u4e00\u4e2a<code>Service</code>\uff0c\u6dfb\u52a0\u989d\u5916\u529f\u80fd\u3002\u5e38\u7528\u4e8e\u5b9e\u73b0\u4e2d\u95f4\u4ef6\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/","title":"API","text":"<p>API\u662fApplication Programming Interface(\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3)\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u5957\u5b9a\u4e49\u4e86\u4e0d\u540c\u8f6f\u4ef6\u7ec4\u4ef6\u4e4b\u95f4\u5982\u4f55\u4ea4\u4e92\u7684\u89c4\u5219\u548c\u534f\u8bae\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u7a0b\u5e8f\uff08\u51e0\u4e4e\uff09\u603b\u662f\u9700\u8981\u548c\u5176\u4ed6\u7a0b\u5e8f\u8fdb\u884c\u4ea4\u4e92\u3002</p> <ul> <li>Web API: \u901a\u8fc7HTTP\u534f\u8bae\u5728\u7f51\u7edc\u4e0a\u8bbf\u95ee\u7684API,\u6700\u5e38\u89c1\u7684\u662fRESTful API\u3002\u5728\u56fd\u5185\u8bba\u575b\u4e0a\uff0cAPI\u5f88\u53ef\u80fd\u4e13\u6307\u8fd9\u4e2a\u3002</li> <li>\u6807\u51c6\u5e93API: \u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u7684\u5185\u7f6e\u51fd\u6570\u548c\u7c7b\u3002</li> <li>\u64cd\u4f5c\u7cfb\u7edfAPI: \u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u63a5\u53e3\u3002</li> <li>SDK API\uff1a\u5382\u5546\u4f1a\u901a\u8fc7\u63d0\u4f9bSDK\uff0c\u6765\u63d0\u4f9b\u4e00\u4e2a\u529f\u80fd\u5b9e\u73b0\u7684\u6807\u51c6\u63a5\u53e3\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/#web-api","title":"Web API","text":"<p>\u5982\u679c\u5ba2\u6237\u7aef\u7a0b\u5e8f\u9700\u8981\u548c\u670d\u52a1\u7aef\u7a0b\u5e8f\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e00\u822c\u4f7f\u7528Web API\u3002\u6709\u5f88\u591a\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u662f\u672c\u8d28\u4e0a\uff0c\u65e0\u975e\u662f\u4e24\u70b9\uff0c\u6570\u636e\u4f20\u8f93\u65b9\u5f0f\u548c\u6570\u636e\u7f16\u7801\u65b9\u5f0f\u3002</p> \u65b9\u6848 \u4f20\u8f93\u65b9\u5f0f \u7f16\u7801\u65b9\u5f0f \u5176\u4ed6 REST HTTP \u4e00\u822c\u662fJSON/XML \u65e0\u72b6\u6001 WebSocket \u652f\u6301\u4e8c\u8fdb\u5236 \u5168\u53cc\u5de5 gRPC HTTP/2 Protobuf GraphQL HTTP Query\u8bed\u8a00"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/#restful-api-http","title":"RESTful API (HTTP)","text":"<p>\u611f\u89c9\u5c31\u662f\u628aAPI\u5f53\u4f5c\u4e00\u4e2a\u8d44\u6e90\uff0c\u901a\u8fc7URL\u8def\u5f84\u8bbf\u95ee\u3002\u975e\u5e38\u7684\u7b80\u5355\u76f4\u63a5\u3002\u5ba2\u6237\u7aef\u8c03\u7528HTTP\u5e93\u5c31\u53ef\u4ee5\u5411\u670d\u52a1\u5668\u8c03\u7528API\uff0c\u9002\u5408\u8fdb\u884c \u65e0\u72b6\u6001CRUD \u64cd\u4f5c\uff1a</p> <ul> <li>GET\uff1a\u8bfb\u53d6\uff08Read\uff09\u3002\u5e42\u7b49</li> <li>POST\uff1a\u521b\u5efa\uff08Create\uff09\u3002\u4e0d\u5e42\u7b49</li> <li>PUT/PATCH\uff1a\u66f4\u65b0\uff08Update\uff09\u3002\u5e42\u7b49</li> <li>DELETE\uff1a\u5220\u9664\uff08Delete\uff09\u3002\u5e42\u7b49</li> </ul> <p>\u65e0\u72b6\u6001\u662f REST \u67b6\u6784\u7684\u4e00\u4e2a\u5173\u952e\u7279\u70b9\uff0c\u5b83\u6307\u7684\u662f\u5728\u8bf7\u6c42\u548c\u54cd\u5e94\u4e4b\u95f4\u4e0d\u4fdd\u7559\u4efb\u4f55\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u670d\u52a1\u5668\u4e0d\u4f1a\u5728\u591a\u4e2a\u8bf7\u6c42\u4e4b\u95f4\u4fdd\u5b58\u4efb\u4f55\u72b6\u6001\u4fe1\u606f\u3002\u8fd9\u53ef\u4ee5\u65b9\u4fbf\u670d\u52a1\u7aef\u7684\u6269\u5c55\uff0c\u7b80\u5316\u903b\u8f91\uff0c\u65b9\u4fbf\u7f13\u5b58\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/#websocket","title":"WebSocket","text":"<p>\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5b9e\u65f6\u3001\u53cc\u5411\u3001\u4f4e\u5ef6\u65f6\u901a\u4fe1\u65f6\uff0cWebSocket\u662f\u6b63\u786e\u7684\u9009\u62e9\u3002\u6bcf\u4e2aREST\u8bf7\u6c42\u90fd\u9700\u8981\u4e00\u4e2a\u65b0\u7684HTTP\u8fde\u63a5\uff0c\u7531\u4e8eHTTP\u63e1\u624b\u7684\u5f00\u9500\uff0c\u8fd9\u4f1a\u589e\u52a0\u5ef6\u65f6\u3002WebSocket\u6253\u5f00\u4e00\u6b21\u8fde\u63a5\uff0c\u7136\u540e\u5728\u9700\u8981\u65f6\u4fdd\u6301\u6253\u5f00\u72b6\u6001\uff0c\u51cf\u5c11\u53d1\u9001\u6d88\u606f\u6240\u9700\u7684\u65f6\u95f4\u3002</p> <p>\u5176\u5b9eWebSocket \u5e94\u8be5\u7b97\u662f\u4e00\u4e2a\u7f51\u7edc\u5e94\u7528\u5c42\u7684\u534f\u8bae\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/#grpc-http2","title":"gRPC (HTTP/2)","text":""},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/API/#graphql","title":"GraphQL","text":"<p>GraphQL\u7279\u522b\u9002\u5408\u9700\u8981\u7075\u6d3b\u6570\u636e\u83b7\u53d6\u7684\u590d\u6742\u524d\u7aef\u5e94\u7528\uff0c\u5982\u5355\u9875\u5e94\u7528\uff08SPA\uff09\u6216\u79fb\u52a8\u5e94\u7528\u3002\u5b83\u4e5f\u975e\u5e38\u9002\u5408\u9700\u8981\u6574\u5408\u591a\u4e2a\u6570\u636e\u6e90\u7684\u573a\u666f\u3002</p> <p>\u4f8b\u5982\uff0c\u670d\u52a1\u5668\u5b58\u4e86Account\u548cTx\uff0c\u91cc\u9762\u6709Account\u548cTx\u5404\u79cd\u5404\u6837\u7684\u5c5e\u6027\u3002\u670d\u52a1\u5668\u53ef\u80fd\u66b4\u9732\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f8b\u5982<code>http://example.com/get_account(tx)/&lt;id&gt;</code> \u6765\u8ba9\u7528\u6237\u83b7\u53d6 Account/Tx \u4fe1\u606f\uff0c\u4f46\u662f\u5982\u679c\u6211\u53ea\u9700\u8981Account \u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\uff0c\u53e0\u52a0\u4e0aTx\u7684\u67d0\u4e2a\u5c5e\u6027\uff0c\u5c31\u9700\u8981\u7528\u6237\u83b7\u53d6Account\u548cTx\u5168\u90e8\u4fe1\u606f\u4e4b\u540e\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u800cGraphQL \u5219\u53ef\u4ee5\u6307\u5b9a\u6211\u9700\u8981\u4ec0\u4e48\u4fe1\u606f\u3002</p> <p>\u5177\u4f53\u7684\u5b9e\u73b0\u4e0a\uff0cGraphQL \u89c4\u5b9a\u4e86\u81ea\u5df1\u7684\u67e5\u8be2\u8bed\u8a00\u3002\u6211\u4e0d\u751a\u4e86\u89e3\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/","title":"CLI","text":"<p>\u4e00\u822c\u6765\u8bf4\u7528\u6237\u754c\u9762\u53ef\u4ee5\u5206\u62103\u79cd\uff0cGUI/TUI/CLI\uff0c\u8868\u793a\u56fe\u5f62\u754c\u9762\uff0c\u6587\u5b57\u754c\u9762\uff0c\u547d\u4ee4\u884c\u754c\u9762\u3002CLI\u663e\u7136\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\uff0c\u7b80\u5355\u7684\u8bf4\uff0cCLI\u552f\u4e00\u7684\u4efb\u52a1\u5c31\u662f\u89e3\u6790\u7528\u6237\u4f20\u5165\u7684\u53c2\u6570\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u8bb8\u591a\u6846\u67b6\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u53c2\u6570\u89e3\u6790\u7684\u95ee\u9898\u3002\u53ea\u8981\u5b66\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u6846\u67b6\uff0c\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u7f16\u5199\u547d\u4ee4\u884c\u754c\u9762\u3002</p> <p>\u4e0b\u9762\u5206\u4e3a\u4e24\u4e2a\u7ae0\u8282\uff0c\u7b2c\u4e00\u7ae0\u4f7f\u7528\u7b80\u5355\u7684\u4f8b\u5b50\u89e3\u91ca\u547d\u4ee4\u884c\u53c2\u6570\u7684\u57fa\u672c\u539f\u7406\uff0c\u968f\u540e\u6211\u4eec\u4f1a\u4ecb\u7ecdRust\u4e2d\u6d41\u884c\u7684\u6846\u67b6\u548cPython\u4e2d\u6d41\u884c\u7684\u6846\u67b6\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#basic","title":"Basic","text":"<p>\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aCLI\u7a0b\u5e8f\u662f\u8fd0\u884c\u5728\u7ec8\u7aef\u754c\u9762\u4e0a\u7684\u7a0b\u5e8f\u3002\u7ec8\u7aef\uff08Terminal\uff09 \u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>\u7269\u7406\u7ec8\u7aef\uff1a\u76f4\u63a5\u8fde\u63a5\u5728\u4e3b\u673a\u4e0a\u7684\u663e\u793a\u5668\u3001\u952e\u76d8\u9f20\u6807\u7edf\u79f0\u3002\u5728\u5b9e\u9645\u673a\u67b6\u5f0f\u670d\u52a1\u5668\u90e8\u7f72\u4e2d\uff0c\u4e00\u822c\u662f\u591a\u53f0\u670d\u52a1\u5668\u5171\u4eab\u4e00\u5957\u7ec8\u7aef\uff0c\u7b80\u79f0KVM\uff08Keyboard\u952e\u76d8\uff0cvideo\u663e\u793a\u5668\uff0cmouse\u9f20\u6807\uff09</li> <li>\u865a\u62df\u7ec8\u7aef\uff08tty\uff09\uff1a\u9644\u52a0\u5728\u7269\u7406\u7ec8\u7aef\u4e4b\u4e0a\uff0c\u7528\u8f6f\u4ef6\u65b9\u5f0f\u865a\u62df\u5b9e\u73b0\uff0cCentOS\u9ed8\u8ba4\u542f\u75286\u4e2a\u865a\u62df\u7ec8\u7aef\uff0c\u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e\u6765\u5207\u6362\uff0c\u5207\u6362\u65b9\u5f0f:Ctrl-Alt-F[1--6], \u5bf9\u5e94\u7684\u6587\u4ef6\u662f/dev/tty#\u3002\u53ef\u4ee5\u540c\u8fc7tty\u547d\u4ee4\u6765\u67e5\u770b\u5f53\u524d\u7684\u865a\u62df\u7ec8\u7aef\u53f7\u3002tty\u662fteletypewriter\u7684\u7b80\u79f0\u3002</li> <li>\u4f2a\u7ec8\u7aef(pty)\uff1a\u4e24\u79cd\u5e94\u7528\u573a\u666f\uff0c\u7b2c\u4e00\u5728\u56fe\u5f62\u754c\u9762\u4e0b\u6253\u5f00\u7684\u547d\u4ee4\u884c\u63a5\u53e3\uff0c\u7b2c\u4e8c\u57fa\u4e8essh\u534f\u8bae\u6216telnet\u534f\u8bae\u7b49\u8fdc\u7a0b\u6253\u5f00\u7684\u547d\u4ee4\u884c\u754c\u9762\uff0c\u662f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u7528\u7684\u6700\u591a\u7684\u4e00\u79cd\u8fde\u63a5\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u3002pts(pseudo-terminal slave)\u662fpty\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002</li> <li>\u63a7\u5236\u7ec8\u7aef\uff08/dev/tty\uff09 \u8fd9\u662f\u4e2a\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u524d\u53f0\u8fdb\u7a0b\u6709\u4e2a\u63a7\u5236\u7ec8\u7aef\uff0c\u5c31\u5bf9\u5e94\u8fd9\u4e2a\u3002\u4e0d\u8fc7\u5b83\u5e76\u4e0d\u6307\u4efb\u4f55\u7269\u7406\u610f\u4e49\u4e0a\u7684\u7ec8\u7aef\uff0c\u5176\u5b9e/dev/tty\u4f1a\u6620\u5c04\u5230\u5f53\u524d\u7684\u8bbe\u5907\uff08\u901a\u8fc7tty\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\uff09\uff0c\u6bd4\u5982\u4f60\u5982\u679c\u5728\u63a7\u5236\u53f0\u754c\u9762\u4e0b(\u5373\u5b57\u7b26\u754c\u9762\u4e0b\uff09\u90a3\u4e48dev/tty\u5c31\u662f\u6620\u5c04\u5230dev/tty1-6\u4e4b\u95f4\u7684\u4e00\u4e2a\uff08\u53d6\u51b3\u4e8e\u4f60\u5f53\u524d\u7684\u63a7\u5236\u53f0\u53f7\uff09\uff0c\u4f46\u662f\u5982\u679c\u4f60\u73b0\u5728\u662f\u5728\u56fe\u5f62\u754c\u9762\uff08Xwindows\uff09\uff0c\u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0\u73b0\u5728\u7684/dev/tty\u6620\u5c04\u5230\u7684\u662f/dev/pts\u7684\u4f2a\u7ec8\u7aef\u4e0a\u3002\u6bd4\u5982\u4f60\u53ef\u4ee5\u8f93\u5165\u547d\u4ee4 <code>#tty</code> \u90a3\u4e48\u5c06\u663e\u793a\u5f53\u524d\u6620\u5c04\u7ec8\u7aef\u5982\uff1a/dev/tty1\u6216\u8005/dev/pts/0\u7b49\u3002</li> </ul> <p>Terminal\u548cShell\u662f\u5f88\u5bb9\u6613\u6df7\u6dc6\u7684\u6982\u5ff5\u3002\u7ec8\u7aef\u672c\u8eab\u5e76\u4e0d\u4f1a\u89e3\u6790\u547d\u4ee4\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u754c\u9762\uff0c\u8d1f\u8d23\u4eba\u673a\u4ea4\u4e92\u7684\u4e00\u4e2a\u63a5\u53e3\u800c\u5df2\uff0c\u771f\u6b63\u5904\u7406\u547d\u4ee4\u7684\u662fshell\u3002\u7ec8\u7aef\u53ea\u8d1f\u8d23\u63d0\u4f9b\u4e00\u4e2a\u8f93\u5165\u547d\u4ee4\u7684\u4ea4\u4e92\u754c\u9762\u800c\u5df2\uff0c\u5728\u91cc\u9762\u8fd0\u884c\u7684\u547d\u4ee4\u662f\u4e13\u95e8\u7684\u547d\u4ee4\u6267\u884c\u7a0b\u5e8fshell\u6765\u5b8c\u6210\u7684\u3002\u7ec8\u7aef\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u63a5\u6536\u7528\u6237\u8f93\u5165\u7684\u547d\u4ee4\u548c\u5b57\u7b26\uff0c\u7136\u540e\u63d0\u4ea4\u7ed9shell\uff0c\u5e76\u4e14\u5c06\u547d\u4ee4\u6267\u884c\u5b8c\u7684\u7ed3\u679c\u53cd\u9988\u7ed9\u7528\u6237\u3002shell\u8d1f\u8d23\u5c06\u547d\u4ee4\u7ffb\u8bd1\uff0c\u5728\u7cfb\u7edf\u6267\u884c\u5b8c\u4e4b\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7ec8\u7aef\u3002</p> <p>\u4e0d\u8fc7\uff0c\u5bf9\u4e8eCLI\u7a0b\u5e8f\u7684\u7f16\u5199\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e86\u89e3\u57fa\u672c\u6982\u5ff5\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e95\u5c42\u7684\u89c4\u5219\u662f\u65e0\u8da3\u7684\uff0c\u4ea4\u7ed9\u5e93\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#frameworks","title":"Frameworks","text":""},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#clap-for-rust","title":"Clap for Rust","text":"<p>Document: https://docs.rs/clap/latest/clap/, https://docs.rs/clap/latest/clap/_derive/_tutorial/index.html</p> <p>\u4e2a\u4eba\u611f\u89c9\uff0cRust\u88ab\u5e7f\u6cdb\u7684\u7528\u5728\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u7f16\u5199\u4e2d\uff0cclap\u6846\u67b6\u7684\u4f18\u79c0\u8bbe\u8ba1\u5360\u6709\u90e8\u5206\u529f\u52b3\u3002</p> <p>Clap\u6846\u67b6\u6709\u4e24\u79cd\u98ce\u683c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e2a\u4eba\u504f\u5411\u4f7f\u7528\u5b8f\u3002\u4e00\u822c\u6211\u4eec\u4f1a\u5b9a\u4e49\u4e00\u4e2a<code>struct Arg</code>\uff0c\u4f7f\u7528<code>Parser</code>\u8fc7\u7a0b\u5b8f\u6765\u4fee\u9970\u5b83\u3002\u7136\u540e\u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u9650\u5236\u90fd\u901a\u8fc7\u8fc7\u7a0b\u5b8f\u7684\u88c5\u9970\u51b3\u5b9a\uff0c\u5e76\u4e14\u6ce8\u91ca\u4f1a\u88ab\u52a0\u5165\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684<code>help</code>\u8bf4\u660e\u3002</p> <pre><code>cargo add clap --features derive\n</code></pre> <pre><code>use clap::Parser;\n\n/// Simple program to greet a person\n#[derive(Parser, Debug)]\n#[command(version, about, long_about = None)]\nstruct Args {\n    /// Name of the person to greet\n    #[arg(short, long)]\n    name: String,\n\n    /// Number of times to greet\n    #[arg(short, long, default_value_t = 1)]\n    count: u8,\n}\n\nfn main() {\n    let args = Args::parse();\n\n    for _ in 0..args.count {\n        println!(\"Hello {}!\", args.name)\n    }\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#dialoguer-for-rust","title":"Dialoguer for Rust","text":"<p>dialoguer \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u98ce\u683c\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6846\u67b6\u3002\u5b83\u6709\u70b9\u50cf\u5927\u5bb6\u521a\u5165\u95e8C\u8bed\u8a00\u5199\u7a0b\u5e8f\u4e00\u6837\uff0cprintf - scanf \u8fd9\u6837\u901a\u8fc7\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u8fdb\u884c\u4ea4\u4e92\u7684\u98ce\u683c\u3002\u4e00\u4e2a\u7b80\u5355\u7684Demo\u5982\u4e0b</p> <pre><code>use dialoguer::{Confirm, Input, Select};\n\nfn main() {\n    // Get user name\n    let name: String = Input::new()\n        .with_prompt(\"What is your name?\")\n        .interact_text()\n        .unwrap();\n\n    // Get user age\n    let age: u32 = Input::new()\n        .with_prompt(\"What is your age?\")\n        .interact_text()\n        .unwrap();\n\n    // Select favorite color\n    let colors = vec![\"Red\", \"Green\", \"Blue\", \"Yellow\"];\n    let favorite_color = Select::new()\n        .with_prompt(\"What is your favorite color?\")\n        .items(&amp;colors)\n        .interact()\n        .unwrap();\n\n    // Confirm if user wants to proceed\n    let proceed = Confirm::new()\n        .with_prompt(&amp;format!(\"Hello, {} (age {}). Your favorite color is {}. Proceed?\", name, age, colors[favorite_color]))\n        .interact()\n        .unwrap();\n\n    if proceed {\n        println!(\"Proceeding with the program...\");\n    } else {\n        println!(\"Exiting the program.\");\n    }\n}\n</code></pre> <p>Dialoguer\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u7ec4\u4ef6\uff1a</p> <ul> <li>Confirm\uff1a\u8ba9\u7528\u6237\u8f93\u5165 y/n</li> <li>Input\uff1a\u8ba9\u7528\u6237\u8f93\u5165\u4e00\u884c\u6587\u5b57<ul> <li>Editor\uff1a\u6253\u5f00\u9ed8\u8ba4\u7684\u7f16\u8f91\u5668\uff0c\u8ba9\u7528\u6237\u8f93\u5165\u591a\u884c\u6587\u5b57\u3002</li> <li>Password\uff1a\u8f93\u5165\u5bc6\u7801\uff0c\u6ca1\u6709\u56de\u663e\u3002</li> </ul> </li> <li>Select\uff1a\u8ba9\u7528\u6237\u9009\u62e9\u4e00\u4e2a\u9009\u9879<ul> <li>MultiSelect\uff1a\u8ba9\u7528\u6237\u9009\u62e9\u591a\u4e2a\u9009\u9879\uff0c\u7a7a\u683c\u9009\u62e9\u56de\u8f66\u786e\u8ba4\u3002</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u98ce\u683c\uff0c\u524d\u4e00\u79cd\u5bf9\u7528\u6237\u53cb\u597d\u5bf9\u673a\u5668\u4e5f\u53cb\u597d\uff0c\u540e\u4e00\u79cd\u5bf9\u7528\u6237\u66f4\u53cb\u597d\uff0c\u4f46\u662f\u5bf9\u673a\u5668\u975e\u5e38\u4e0d\u53cb\u597d\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#click-for-python","title":"Click for Python","text":"<p>Document: https://click.palletsprojects.com/en/8.1.x/</p> <p>click\u6846\u67b6\u4f7f\u7528\u88c5\u9970\u5668\u6765\u89c4\u5b9a\u53c2\u6570\uff0c\u4e00\u822c\u6211\u4eec\u4f7f\u7528 <code>@click.command()</code> \u4fee\u9970\u5165\u53e3\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528<code>@click.option</code>\u89c4\u5b9a\u5b83\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</p> <p>\u8fd0\u884c\u65f6\uff0cclick\u4f1a\u81ea\u52a8\u89e3\u6790\u7528\u6237\u4f20\u5165\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u53c2\u6570\u7684\u7c7b\u578bby default\u90fd\u662f\u5b57\u7b26\u4e32\u3002Demo\u5982\u4e0b\u3002</p> <pre><code>import click\n\n@click.command()\n@click.option('--count', default=1, help='Number of greetings.')\n@click.option('--name', prompt='Your name',\n              help='The person to greet.')\ndef main(count, name):\n    \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\"\n    for x in range(count):\n        click.echo(f\"Hello {name}!\")\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u603b\u7684\u6765\u8bf4\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97click\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5efa\u7acb\u4e00\u4e2a\u8fd8\u4e0d\u9519\u7684CLI\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u7279\u522b\u4e25\u8c28\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#cli-for-go","title":"cli for Go","text":"<p>urfave/cli is a declarative, simple, fast, and fun package for building command line tools in Go</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#advanced-topic","title":"Advanced Topic","text":"<p>\u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u7a0d\u5fae\u9ad8\u7ea7\u4e00\u70b9\u7684\u4e3b\u9898\uff0c\u5305\u62ecSignal\u5904\u7406\uff0c\u7f8e\u5316\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#signal-handling","title":"Signal Handling","text":"<p>\u8bf4\u8d77Signal\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u4f1a\u60f3\u8d77\u4f7f\u7528Ctrl+C\u5173\u95ed\u547d\u4ee4\u884c\u7a0b\u5e8f\u3002\u8fd9\u5c31\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u64cd\u4f5c\u7cfb\u7edf\u5bf9<code>SIGINT</code>\u4fe1\u53f7\u5bf9\u5904\u7406\u65b9\u5f0f\u3002\u4e0d\u8fc7\u5b9e\u9645\u4e0a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u67d0\u4e9b\u4fe1\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u7684\u3002\u5173\u4e8e\u5b83\u7684\u5177\u4f53\u539f\u7406\uff0c\u6211\u4eec\u5728Linux-Signal \u4e2d\u4ecb\u7ecd\u3002\u6211\u4eec\u4e0d\u9700\u8981\u901a\u8fc7\u5e95\u5c42\u7684\u65b9\u5f0f\u6ce8\u518c\u5904\u7406\u51fd\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u5e93\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5728Python\u4e2d\uff0c\u6807\u51c6\u5e93\u6709<code>signal</code>\u6a21\u5757\u3002\u4ed6\u53ef\u4ee5\u4e3a\u4fe1\u53f7\u6ce8\u518c\u5904\u7406\u51fd\u6570\u3002Python \u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u4f4e\u7ea7\uff08 C \uff09\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u4e2d\u6267\u884c\u3002\u76f8\u53cd\uff0c\u4f4e\u7ea7\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7\uff0c\u544a\u8bc9 virtual machine \u7a0d\u540e\u6267\u884c\u76f8\u5e94\u7684 Python \u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u3002Python \u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u603b\u662f\u4f1a\u5728\u4e3b Python \u4e3b\u89e3\u91ca\u5668\u7684\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u5373\u4f7f\u4fe1\u53f7\u662f\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u63a5\u6536\u7684\u3002 \u8fd9\u610f\u5473\u7740\u4fe1\u53f7\u4e0d\u80fd\u88ab\u7528\u4f5c\u7ebf\u7a0b\u95f4\u901a\u4fe1\u7684\u624b\u6bb5\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e<code>SIGINT</code>\u7684\u5904\u7406\u53ef\u4ee5\u76f4\u63a5\u5bf9<code>KeyBoardInterrupt</code>\u5f02\u5e38\u8fdb\u884c\u5904\u7406\u3002</p> <pre><code>import signal\nimport sys\n\ndef signal_handler(signal, frame):\n    print('You pressed Ctrl+C!')\n    sys.exit(0)\n\n# Set the signal handler for SIGINT (Ctrl+C)\nsignal.signal(signal.SIGINT, signal_handler)\n\nprint('Press Ctrl+C to exit...')\n\n# Keep the program running until a signal is received\nwhile True:\n    pass\n</code></pre> <p>\u4f8b\u5982\uff0c\u5728Rust\u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528signal-hook\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5e93\u3002\u4ed6\u7684\u5b9e\u73b0\u611f\u89c9\u548cPython\u662f\u7c7b\u4f3c\u7684\uff0c\u90fd\u662f\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6536\u5230<code>SIGINT</code>\u4fe1\u53f7\uff0c\u4f1a\u628aterm\u8bbe\u7f6e\u4e3a<code>true</code>\u3002\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u53ef\u4ee5\u5355\u5f00\u4e00\u4e2a\u7ebf\u7a0b\u3002</p> <pre><code>use std::sync::Arc;\nuse std::sync::atomic::AtomicBool;\n\nfn main() {\n    let term = Arc::new(AtomicBool::new(false));\n\n    let _ = signal_hook::flag::register(signal_hook::consts::SIGINT, Arc::clone(&amp;term));\n}\n</code></pre> <p>[signal-hook]\u662f\u4e00\u4e2a\u91cd\u91cf\u7ea7\u7684\u5e93\uff0c\u5982\u679c\u53ea\u9700\u8981\u5904\u7406SIGINT\uff0c\u53ef\u4ee5\u4f7f\u7528ctrlc\u3002\u5728\u5b9e\u9645\u7684\u7f16\u7a0b\u4e2d\uff0c\u5bf9\u4fe1\u53f7\u8fdb\u884c\u592a\u591a\u7684\u5904\u7406\u662f\u5371\u9669\u7684\u884c\u4e3a\uff0c\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#beautify","title":"Beautify","text":"<p>\u5728 Linux \u4e0a\uff0c\u7ec8\u7aef\u5b57\u7b26\u989c\u8272\u7684\u63a7\u5236\u4e3b\u8981\u57fa\u4e8e ANSI \u8f6c\u4e49\u5e8f\u5217\u3002ANSI \u8f6c\u4e49\u5e8f\u5217\u662f\u4e00\u7ec4\u7279\u6b8a\u7684\u5b57\u7b26\u5e8f\u5217,\u7528\u4e8e\u63a7\u5236\u7ec8\u7aef\u8f93\u51fa\u7684\u5404\u79cd\u5c5e\u6027,\u5305\u62ec\u989c\u8272\u3001\u6837\u5f0f\u3001\u5149\u6807\u4f4d\u7f6e\u7b49\u3002ANSI\u5168\u79f0\u662fANSI X3.64 \u6807\u51c6\uff0c\u662f\u4e00\u4e2a\u5f00\u653e\u6807\u51c6,\u4e0d\u53d7\u4efb\u4f55\u5355\u4e00\u516c\u53f8\u6216\u7ec4\u7ec7\u7684\u63a7\u5236\u3002\u9664\u4e86\u5728Linux\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0cWindows\u4e0a\u7684xterm\u3001PuTTY\u4e5f\u4f7f\u7528\u3002Windows \u63a7\u5236\u53f0\u4f7f\u7528\u4e86\u81ea\u5df1\u7684\u4e00\u5957 API \u6765\u5b9e\u73b0\u5bf9\u7ec8\u7aef\u8f93\u51fa\u7684\u63a7\u5236\uff0c\u4e0d\u8fc7Powershell\u4e5f\u652f\u6301 ANSI\u3002</p> <p>\u8fd8\u597d\uff0c\u8fd9\u4e9b\u7ec6\u8282\u4e0d\u9700\u8981\u4e86\u89e3\uff0c\u6709\u5e93\u5df2\u7ecf\u5e2e\u6211\u4eec\u505a\u597d\u4e86\u8de8\u5e73\u53f0\u7684\u5c01\u88c5\u3002\u4e0d\u8fc7\u5982\u679c\u611f\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u53bb\u9605\u8bfbANSI X3.64 Standard\u3002</p> <ul> <li>console for Rust: \u770b\u8d77\u6765\u8fd9\u4e2a\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u5e93\uff0c\u63d0\u4f9b\u7684\u529f\u80fd\u4e3b\u8981\u662f\u4fee\u6539\u989c\u8272\u3002</li> <li>crossterm for Rust: \u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u5bf9\u7ec8\u7aef\u8fdb\u884c\u64cd\u4f5c\u7684\u5e93\u3002</li> <li>rich for Python: </li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/CLI/#progress-bar","title":"Progress Bar","text":"<p>\u8fdb\u5ea6\u6761\u662f\u8ba9\u8f6f\u4ef6\u7b26\u5408\u4eba\u4f53\u5de5\u5b66\u7684\u4e0d\u53ef\u6216\u7f3a\u7684\u90e8\u5206\u3002\u5982\u679c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\uff0c\u8de8\u5e73\u53f0\u548c\u5404\u79cd\u7ec8\u7aef\u6807\u51c6\u90fd\u5f88\u9ebb\u70e6\u3002\u8fd8\u597d\uff0c\u6709\u5404\u79cd\u5e93\u63d0\u4f9b\u4e86\u652f\u6301\u3002</p> <ul> <li>indicatif for Rust</li> <li>tqdm for Python</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/","title":"GUI","text":""},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/#design-pattern","title":"Design Pattern","text":"<p>\u4e86\u89e3GUI\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u53ef\u4ee5\u6307\u5bfc\u6211\u4eec\u4f7f\u7528GUI Framework\uff0c\u7f16\u5199GUI \u7a0b\u5e8f\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/#mvc-model-view-controller","title":"MVC (Model-View-Controller)","text":"<ul> <li>Model\uff08\u6a21\u578b\uff09\u00a0- \u6a21\u578b\u4ee3\u8868\u4e00\u4e2a\u5b58\u53d6\u6570\u636e\u7684\u5bf9\u8c61\u3002\u5b83\u4e5f\u53ef\u4ee5\u5e26\u6709\u903b\u8f91\uff0c\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u63a7\u5236\u5668\u3002</li> <li>View\uff08\u89c6\u56fe\uff09\u00a0- \u89c6\u56fe\u4ee3\u8868\u6a21\u578b\u5305\u542b\u7684\u6570\u636e\u7684\u53ef\u89c6\u5316\u3002</li> <li>Controller\uff08\u63a7\u5236\u5668\uff09\u00a0- \u63a7\u5236\u5668\u4f5c\u7528\u4e8e\u6a21\u578b\u548c\u89c6\u56fe\u4e0a\u3002\u5b83\u63a7\u5236\u6570\u636e\u6d41\u5411\u6a21\u578b\u5bf9\u8c61\uff0c\u5e76\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u89c6\u56fe\u3002\u5b83\u4f7f\u89c6\u56fe\u4e0e\u6a21\u578b\u5206\u79bb\u5f00\u3002</li> </ul> <p>MVC\u6a21\u5f0f\u7684\u5177\u4f53\u89e3\u91ca\u5404\u79cd\u5404\u6837\u3002\u5176\u4e2d\u4e00\u4e2a\u89e3\u91ca\u662f\uff1a</p> <ol> <li>Controller \u8d1f\u8d23\u7ba1\u7406 View \u548c Model\uff1b \uff08Controller write View &amp; Model\uff09</li> <li>View \u8d1f\u8d23\u5c55\u793a Model \u4e2d\u7684\u5185\u5bb9\uff1b \uff08View read Model\uff09</li> </ol> <p>\u8fd9\u5176\u4e2d\u9690\u542b\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u5982\u679cModel\u6539\u53d8\u4e86\uff0c \u5982\u4f55\u901a\u77e5View\u76f8\u5e94\u7684\u66f4\u65b0\uff1fView\u4e0d\u65ad\u7684\u8f6e\u8be2Model\u80af\u5b9a\u662f\u4e00\u79cd\u6700\u76f4\u63a5\u7684\u529e\u6cd5\uff0c\u53e6\u4e00\u79cd\u529e\u6cd5\u662f\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u8ba9\u89c2\u5bdf\u8005\u6539\u53d8\u63a8\u9001\u7ed9View\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/#mvp-model-view-presenter","title":"MVP (Model-View-Presenter)","text":"<p>MVP \u67b6\u6784\u6a21\u5f0f\u662f MVC \u7684\u4e00\u4e2a\u53d8\u79cd\u3002Presenter \u53ef\u4ee5\u7406\u89e3\u4e3a\u677e\u6563\u7684\u63a7\u5236\u5668\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u89c6\u56fe\u7684 UI \u4e1a\u52a1\u903b\u8f91\uff0c\u6240\u6709\u4ece\u89c6\u56fe\u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c\u90fd\u4f1a\u901a\u8fc7\u4ee3\u7406\u7ed9 Presenter \u8fdb\u884c\u5904\u7406\uff1b\u540c\u65f6\uff0cPresenter \u4e5f\u901a\u8fc7\u89c6\u56fe\u66b4\u9732\u7684\u63a5\u53e3\u4e0e\u5176\u8fdb\u884c\u901a\u4fe1\u3002</p> <p></p> <ol> <li>\u5f53\u89c6\u56fe\u63a5\u6536\u5230\u6765\u81ea\u7528\u6237\u7684\u4e8b\u4ef6\u65f6\uff0c\u4f1a\u5c06\u4e8b\u4ef6\u8f6c\u4ea4\u7ed9 Presenter \u8fdb\u884c\u5904\u7406\uff1b</li> <li>\u88ab\u52a8\u7684\u89c6\u56fe\u5411\u5916\u754c\u66b4\u9732\u63a5\u53e3\uff0c\u5f53\u9700\u8981\u66f4\u65b0\u89c6\u56fe\u65f6 Presenter \u901a\u8fc7\u89c6\u56fe\u66b4\u9732\u7684\u63a5\u53e3\u66f4\u65b0\u89c6\u56fe\u7684\u5185\u5bb9\uff1b</li> <li>Presenter \u8d1f\u8d23\u5bf9\u6a21\u578b\u8fdb\u884c\u64cd\u4f5c\u548c\u66f4\u65b0\uff0c\u5728\u9700\u8981\u65f6\u53d6\u51fa\u5176\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\uff1b</li> <li>\u5f53\u6a21\u578b\u5c42\u6539\u53d8\u65f6\uff0c\u53ef\u4ee5\u5c06\u6539\u53d8\u7684\u4fe1\u606f\u53d1\u9001\u7ed9\u89c2\u5bdf\u8005\u00a0Presenter\uff1b</li> </ol>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/#mvvm-model-view-viewmodel","title":"MVVM (Model-View-ViewModel) \ud83c\udf1f","text":"<p>\u5728\u8f83\u9ad8\u7ea7\u522b\u4e0a\uff0cView \u201c\u77e5\u9053\u201d ViewModel\uff0cViewModel \u201c\u77e5\u9053\u201d Model\uff0c\u4f46 Model \u4e0d\u77e5\u9053 ViewModel\uff0cViewModel \u4e0d\u77e5\u9053 View\u3002\u56e0\u6b64\uff0cViewModel \u5c06 View \u4e0e Model \u9694\u79bb\u5f00\u6765\uff0c\u5e76\u5141\u8bb8 Model \u72ec\u7acb\u4e8e View \u800c\u6f14\u5316\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/GUI/#practice","title":"Practice","text":"<p>\u4ecb\u7ecd\u4e00\u4e2a\u7b80\u5355\uff0c\u6709\u53ef\u89c6\u5316\u754c\u9762\u7ed8\u5236\u5de5\u5177\uff0c\u8de8\u5e73\u53f0\uff0c\u6253\u5305\u65b9\u4fbf\u7684GUI\u6846\u67b6FLTK\uff0cFLUID\u662f\u5b83\u7684\u524d\u7aef\u8bbe\u8ba1\u5de5\u5177\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/Package/","title":"Package","text":"<p>\u5982\u4f55\u5c06\u7a0b\u5e8f\u6253\u5305\u53d1\u5e03\uff0c\u4e5f\u662f\u4e00\u4e2a\u86ee\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/SQLite/","title":"SQLite","text":"<p>SQLite \u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u5b83\u662f\u7528 C \u8bed\u8a00\u7f16\u5199\u7684\uff0c\u63d0\u4f9b\u4e86\u81ea\u7ed9\u81ea\u8db3\u3001\u65e0\u9700\u914d\u7f6e\u3001\u65e0\u9700\u670d\u52a1\u5668\u548c\u4e8b\u52a1\u6027\u7684 SQL \u6570\u636e\u5e93\u5f15\u64ce\u3002SQLite \u4e0e\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u517c\u5bb9\uff0c\u5e76\u4e14\u5df2\u7ecf\u88ab\u6574\u5408\u5230\u5404\u79cd\u79fb\u52a8\u548c\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u6d4f\u89c8\u5668\u4e2d\u3002SQLite \u652f\u6301\u5b8c\u5168\u7684 ACID \u4e8b\u52a1\u3002</p> <p>SQLite \u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u975e\u5e38\u9ad8\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u8bb8\u591a\u5546\u4e1a\u8f6f\u4ef6\u4ea7\u54c1\u3002\u6839\u636e\u5b98\u65b9\u6570\u636e\uff0cSQLite \u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u63a5\u8fd1 100%\uff0c\u8fd9\u610f\u5473\u7740\u51e0\u4e4e\u6bcf\u4e00\u884c\u4ee3\u7801\u90fd\u88ab\u6d4b\u8bd5\u7528\u4f8b\u8986\u76d6\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/SQLite/#usage","title":"Usage","text":""},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/TUI/","title":"TUI","text":"<p>\u5728CLI \u4e2d\u4ecb\u7ecd\u4e86\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u4e24\u79cd\u5f62\u6001\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0a\u7f16\u5199\u7c7b\u4f3cGUI\u7684\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u7a0b\u5e8f\u88ab\u79f0\u4e3a TUI\u3002\u4e0d\u8fc7\u8fd9\u6837\u7684\u7a0b\u5e8f\u53ef\u80fd\u662f\u6700\u4e0d\u53d7\u6b22\u8fce\u7684\u4e86\u2014\u2014\u5bf9\u4eba\u53cb\u597d\u4e0d\u5982GUI\uff0c\u5bf9\u673a\u5668\u53cb\u597d\u4e0d\u5982CLI\uff0c\u957f\u5f97\u4e0d\u53ef\u80fd\u597d\u770b\u5230\u54ea\u91cc\u53bb\uff0c\u5206\u8fa8\u7387\u4e0d\u53ef\u80fd\u592a\u9ad8\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u4e1c\u897f\u80af\u5b9a\u53ea\u662f\u7528\u6765\u7ed9\u4eba\u7528\u7684\uff0c\u5e76\u4e14\u4f7f\u7528\u8005\u53ef\u80fd\u6ca1\u6709\u6761\u4ef6\u4f7f\u7528GUI\u7a0b\u5e8f\uff0c\u90a3\u4e48\u7f16\u5199\u4e00\u4e2aTUI\u7a0b\u5e8f\u4f1a\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u662f menuconfig</p> <p></p> <p>\u6709\u5f88\u591a\u4f18\u79c0\u7684TUI\u6846\u67b6\u5e2e\u6211\u4eec\u5c01\u88c5\u4e86\u548c\u7ec8\u7aef\u4ea4\u4e92\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u9f20\u6807\u4e8b\u4ef6\u3001\u952e\u76d8\u4e8b\u4ef6\u8fdb\u884c\u7f16\u7a0b\uff0c\u5bf9\u754c\u9762\u8fdb\u884c\u8bbe\u8ba1\u3002</p> <p>TUI\u53ef\u4ee5\u5f53\u4f5c\u662f\u4e00\u4e2a\u7b80\u5355\u7684GUI\u7a0b\u5e8f\uff0c\u5b9e\u9645\u4e0a\u5b83\u7684\u7f16\u7a0b\u65b9\u6cd5\u548c\u7b80\u5355\u7684GUI\u7a0b\u5e8f\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u65e0\u975e\u662f\u8c03\u7528\u7684\u7ed8\u56feAPI\u4e0d\u540c\uff0c\u5904\u7406\u7684\u4e8b\u4ef6\u4e0d\u540c\uff0c\u603b\u4f53\u601d\u8def\u662f\u4e00\u6837\u7684\u3002\u4e00\u822c\u8fc7\u7a0b\u90fd\u662f</p> <ol> <li>\u8bbe\u8ba1\u754c\u9762\u5916\u89c2\uff1a\u8fd9\u5305\u62ec\u521b\u5efa\u7a97\u53e3\u548c\u5176\u4ed6\u5404\u79cd\u6784\u4ef6\uff0c\u5e76\u8fdb\u884c\u5408\u9002\u7684\u5e03\u5c40\u3002TUI\u7684\u5916\u89c2\u4e0d\u4f1a\u592a\u590d\u6742\u3002</li> <li>\u4e3a\u6bcf\u4e2a\u6784\u4ef6\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\uff1a\u8fd9\u4e00\u6b65\u662f TUI/GUI \u5f00\u53d1\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u51b3\u5b9a\u7740\u7a0b\u5e8f\u7684\u529f\u80fd \u548c\u4e0e\u7528\u6237\u4ea4\u4e92\u65f6\u7684\u884c\u4e3a\u3002</li> </ol>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/TUI/#frameworks","title":"Frameworks","text":""},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/TUI/#textual-for-python","title":"Textual for Python","text":"<p>https://github.com/Textualize/textual</p>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/TUI/#ratatui-for-rust","title":"Ratatui for Rust","text":"<p>https://crates.io/crates/ratatui</p> <p>\u793a\u4f8b\u4ee3\u7801\u3001\u66f4\u89c4\u8303\u7684\u793a\u4f8b\u4ee3\u7801 \u663e\u793a\u4e86\u4f7f\u7528Ratatui\u6846\u67b6\u7f16\u5199TUI\u7a0b\u5e8f\u7684\u4e00\u822c\u8fc7\u7a0b\uff1a</p> <ol> <li>Initialize the terminal</li> <li>Run the application in a loop until the user exits the app<ol> <li>draw widgets</li> <li>handle events</li> </ol> </li> <li>Restore the terminal back to its original state</li> </ol> <p>\u4ee5\u53ca\u6ca1\u6709\u63d0\u5230\u7684\uff0c\u4f46\u662f\u5e94\u8be5\u5b8c\u6210\u7684\u4efb\u52a1\uff1a</p> <ol> <li>Set panic hook to restore the terminal back to its original state.</li> </ol> <p>\u8fd9\u662f\u4e00\u4e2a\u4e0d\u592a\u5b8c\u6574\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5b8c\u6574\u7684\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u4ed3\u5e93</p> <pre><code>mod tui {\n    pub type Tui = Terminal&lt;CrosstermBackend&lt;Stdout&gt;&gt;;\n    pub fn init() -&gt; io::Result&lt;Tui&gt; {\n        execute!(stdout(), EnterAlternateScreen)?;\n        enable_raw_mode()?;\n        Terminal::new(CrosstermBackend::new(stdout()))\n    }\n    pub fn restore() -&gt; io::Result&lt;()&gt; {\n        execute!(stdout(), LeaveAlternateScreen)?;\n        disable_raw_mode()?;\n        Ok(())\n    }\n}\n#[derive(Default)]\nstruct App;\n\nimpl App {\n    pub fn run(&amp;mut self, terminal: &amp;mut tui::Tui) -&gt; Result&lt;()&gt; {\n        while !self.exit {\n            terminal.draw(|f| self.render_frame(f))?;\n            self.handle_events()?;\n        }\n        Ok(())\n    }\n}\nfn main() -&gt; Result&lt;()&gt; {\n    std::panic::set_hook(Box::new(move |panic_info| {\n        tui::restore().unwrap();\n        eprintln!(\"{}\", panic_info);\n    }));\n\n    let mut terminal = tui::init()?;\n    App::default().run(&amp;mut terminal)?;\n    tui::restore()?;\n\n    Ok(())\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E5%AE%A2%E6%88%B7%E7%AB%AF/TUI/#r3bl-for-rust","title":"R3bl for Rust","text":"<p>\u8fd9\u4e2a\u5e93\u7528Web\u524d\u7aef\u7684\u601d\u7ef4\u6765\u505aTUI\uff0c\u86ee\u6709\u610f\u601d\u3002\u4ed6\u662f\u5f02\u6b65\u7684\u3002</p> <p>https://github.com/r3bl-org/r3bl-open-core</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u5904\u7406","text":"<p>\u7531\u4e8e\u672c\u4eba\u80fd\u529b\u6709\u9650\uff0c\u8fd9\u91cc\u53ea\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u636e\u5e93\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u57fa\u672c\u4e0d\u4f1a\u6d89\u53ca\u539f\u7406\u3002</p> <p>\u8bbe\u8ba1\u6570\u636e\u5bc6\u96c6\u578b\u5e94\u7528 \u662f\u4e00\u672c\u88ab\u5e7f\u6cdb\u63a8\u8350\u7684\u6570\u636e\u5904\u7406\u4e66\u7c4d\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Neo4j/","title":"\u56fe\u6570\u636e\u5e93 Neo4j","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Neo4j/#_1","title":"\u73af\u5883\u642d\u5efa","text":"<p>\u73af\u5883\u642d\u5efa\u8fd8\u662f\u4f7f\u7528neo4j - Official Image | Docker Hub\u6700\u65b9\u4fbf\u3002\u4e0b\u9762\u7684\u547d\u4ee4\u9ed8\u8ba4\u5b89\u88c5\u4e86graph data science\u63d2\u4ef6\uff08\u56fd\u5185\u7f51\u7edc\u53ef\u80fd\u9700\u8981\u82b1\u8f83\u957f\u7684\u65f6\u95f4\u4e0b\u8f7d\u63d2\u4ef6\uff09</p> <pre><code>docker run \\\n    --publish=7474:7474 --publish=7687:7687 \\\n    --volume=$HOME/data/cashflow:/data \\\n    --env NEO4J_PLUGINS='[\"graph-data-science\"]' \\\n    -d --name cashflow neo4j\n</code></pre> <p>\u7136\u540e\u53ef\u4ee5\u5728<code>http://localhost:7474/browser/</code>\u8bbf\u95ee\u63a7\u5236\u53f0\u3002\u9ed8\u8ba4\u7684\u8d26\u53f7\u5bc6\u7801\u4e3a<code>neo4j</code>/<code>neo4j</code>\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Neo4j/#cypher-query-language","title":"Cypher Query Language","text":"<p>Cypher \u662f Neo4j \u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u4e8e\u521b\u5efa\u3001\u4fee\u6539\u3001\u67e5\u8be2\u56fe\u5f62\u6570\u636e\u3002\u5b83\u7684\u8bed\u6cd5\u7c7b\u4f3c\u4e8e SQL \u4f46\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u3002\u4ee5\u4e0b\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u533a\u5757\u94fe\u8d44\u91d1\u6d41\u56fe\u4e3a\u4f8b\uff0c\u8bf4\u660eCypher\u7684\u57fa\u672c\u8bed\u6cd5\uff1a</p> <p>\u521b\u5efa\u8282\u70b9\u3002\u8d44\u91d1\u6d41\u56fe\u7684\u8282\u70b9\u5c31\u662f\u8d26\u6237\uff0c\u6dfb\u52a0\u6807\u7b7e<code>account</code>\uff0c\u6dfb\u52a0\u5c5e\u6027<code>address</code>\u3002\u6682\u65f6\u6ca1\u6709\u5176\u4ed6\u7684\u5c5e\u6027\u3002</p> <pre><code>CREATE (a:account {address: \"0x654321\"});\nCREATE (a:account {address: \"0x123456\"});\n</code></pre> <p>[!WARN] \u5982\u679c\u91cd\u590d\u6267\u884c<code>CREATE (a:account {address: \"0x123456\"});</code>\u8bed\u53e5\u4e24\u6b21\uff0c\u4f60\u4f1a\u53d1\u73b0\u521b\u5efa\u4e86\u4e24\u4e2a\u5730\u5740\u4e3a<code>0x123456</code>\u7684\u8282\u70b9\u3002\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u9884\u671f\u7684\u884c\u4e3a\u3002\u5982\u679c\u5e0c\u671b\u907f\u514d\u521b\u5efa\u91cd\u590d\u7684\u8282\u70b9\uff0c\u5e94\u8be5\u4f7f\u7528 <code>MERGE</code> \u547d\u4ee4\u800c\u4e0d\u662f <code>CREATE</code>\u3002\u7528\u6cd5\u76f8\u540c\u3002</p> <p>\u6211\u4eec\u540e\u7eed\u9700\u8981\u6839\u636e\u5730\u5740\u6765\u67e5\u627e\u8282\u70b9\uff0c\u6240\u4ee5\u7ed9<code>address</code>\u6dfb\u52a0\u7d22\u5f15\u3002</p> <pre><code>CREATE INDEX FOR (a:account) ON (a.address);\n</code></pre> <p>\u6dfb\u52a0\u4e00\u6761\u4ece<code>0x123456</code>\u5230<code>0x234567</code>\u7684\u8fb9\uff08\u5173\u7cfb\uff09\uff0c\u7c7b\u578b\u4e3a<code>transfer</code>\u3002\u5c5e\u6027\u4e3atoken, amount, number\u3002</p> <pre><code>MERGE (source:account {address: '0x123456'})\nMERGE (target:account {address: '0x234567'})\n\nMERGE\u00a0(source)-[:transfer\u00a0{token:\u00a0\"usdt\",\u00a0amount:\u00a0\"100000000000000000000\",\u00a0number:\u00a022110000}]-&gt;(target)\n</code></pre> <p>\u67e5\u8be2\u8d26\u6237<code>0x123456</code>\u8fde\u63a5\u7684\u6240\u6709\u8fb9\uff0c\u67e5\u8be2\u8981\u4f7f\u7528<code>MATCH</code>\u8bed\u53e5\u3002</p> <pre><code>// \u5165\u8fb9\nMATCH\u00a0(a:account\u00a0{address:\u00a0\"0x654321\"})&lt;-[r:transfer]-() RETURN\u00a0r;\n// \u51fa\u8fb9\nMATCH\u00a0(a:account\u00a0{address:\u00a0\"0x654321\"})-[r:transfer]-&gt;() RETURN\u00a0r;\n// \u5165\u8fb9&amp;\u51fa\u8fb9\nMATCH\u00a0(a:account\u00a0{address:\u00a0\"0x654321\"})-[r:transfer]-() RETURN\u00a0r;\n// \u5165\u8fb9&amp;\u51fa\u8fb9\uff0c\u540c\u65f6\u5173\u7cfb\u8282\u70b9\nMATCH\u00a0(a:account\u00a0{address:\u00a0\"0x654321\"})-[r:transfer]-(b:account) RETURN\u00a0r,b;\n</code></pre> <p>\u6e05\u7a7a\u6574\u4e2a\u56fe\uff08\u5220\u9664\u6240\u6709\u7684\u70b9\u548c\u8fb9\uff09</p> <pre><code>MATCH (n:account)\nDETACH DELETE n\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Open%20Search/","title":"Open Search","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Open%20Search/#basic-usage","title":"Basic Usage","text":"<p>\u67e5\u770b\u6240\u6709\u7684\u7d22\u5f15\uff0c\u8fd9\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e2a\u5173\u4e8e\u54ea\u4e9b\u6570\u636e\u88ab\u5b58\u50a8\u7684\u521d\u6b65\u5370\u8c61\u3002</p> <pre><code>curl -X GET \"localhost:9200/_cat/indices?v\"\n</code></pre> <p>\u7d22\u5f15\u7684\u6620\u5c04\uff08Mapping\uff09\u5b9a\u4e49\u4e86\u7d22\u5f15\u4e2d\u6587\u6863\u7684\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u7c7b\u578b\u3002\u67e5\u770b\u6620\u5c04\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u5b58\u50a8\u5728\u7279\u5b9a\u7d22\u5f15\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <pre><code>curl -X GET \"localhost:9200/my-index/_mapping?pretty\"\n</code></pre> <p>\u6279\u91cf\u83b7\u53d6\u6570\u636e\uff0c\u5b9e\u7528Scroll API</p> <pre><code>GET xxx_index/_search?scroll=1m\n{\n  \"query\": {\n    \"range\": {\n      \"_id\": {\n        \"gte\": \"20000000\",\n        \"lte\": \"21000000\"\n      }\n    }\n  },\n  \"size\": 1000\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Queue/","title":"\u6d88\u606f\u961f\u5217","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Queue/#kafka","title":"Kafka","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Redis/","title":"\u5185\u5b58\u6570\u636e\u5e93 - Redis","text":"<p>\u7b80\u5355\u7684\u8bf4\uff0cRedis \u8ba4\u4e3a\u662f\u4e00\u4e2a\u8de8\u8fdb\u7a0b\u7684HashMap\u3002\u5e38\u7528\u4e8e\u5c06\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\u3002</p> <p>Redis\u5168\u79f0\u4e3a\uff1aRemote Dictionary Server\uff08\u8fdc\u7a0b\u6570\u636e\u670d\u52a1\uff09\uff0c\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\uff0cRedis\u662f\u4e00\u4e2akey-value\u5b58\u50a8\u7cfb\u7edf\uff08\u952e\u503c\u5b58\u50a8\u7cfb\u7edf\uff09\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\uff1aString\u3001list\u3001set\u3001zset\u3001hash\u3002\u968f\u7740\u7a0b\u5e8f\u7684\u4e0d\u65ad\u66f4\u65b0\uff0cRedis\u63d0\u4f9b\u7684\u529f\u80fd\u4e5f\u8d8a\u6765\u8d8a\u591a\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Redis/#_1","title":"\u73af\u5883\u642d\u5efa","text":"<p>Docker\u662f\u6700\u65b9\u4fbf\u7684</p> <pre><code>docker run \\\n    --publish=6379:6379 \\\n    --volume=$HOME/data/tokeninfo:/data \\\n    -d --name tokeninfo redis \\\n    redis-server --save 60 1 --loglevel warning\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Redis/#_2","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u5bf9Redis\u6765\u8bf4\uff0c\u6240\u6709\u7684key\u90fd\u662f\u5b57\u7b26\u4e32\u3002value\u67095\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5206\u522b\u662f\uff1aString\u3001List\u3001Set\u3001Zset\u3001Hash\u3002</p> <p>String\u5176\u5b9e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b57\u7b26\u5e8f\u5217\uff0c\u5982\u679c\u5b58\u50a8\u5bf9\u8c61\u7684\u8bdd\uff0c\u53ef\u4ee5\u5e8f\u5217\u5316\u4e4b\u540e\u7528String\u5b58\u50a8\u3002</p> <p>Hash\u5c31\u662f\u952e\u503c\u5bf9\u96c6\u5408\u3002Set\u662f\u65e0\u5e8f\u96c6\u5408\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/SQL/","title":"SQL\u6570\u636e\u5e93","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/SQLite/","title":"\u5d4c\u5165\u5f0f\u6570\u636e\u5e93","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/SQLite/#sqlite","title":"SQLite","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/SQLite/#leveldb","title":"LevelDB","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/","title":"\u5e8f\u5217\u5316","text":"<p>\u7a0b\u5e8f\u901a\u5e38\uff08\u81f3\u5c11\uff09\u4f7f\u7528\u4e24\u79cd\u5f62\u5f0f\u7684\u6570\u636e\uff1a</p> <ol> <li>\u5728\u5185\u5b58\u4e2d\uff0c\u6570\u636e\u4fdd\u5b58\u5728\u5bf9\u8c61\u3001\u7ed3\u6784\u4f53\u3001\u5217\u8868\u3001\u6570\u7ec4\u3001\u6563\u5217\u8868\u3001\u6811\u7b49\u4e2d\u3002 \u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u9488\u5bf9 CPU \u7684\u9ad8\u6548\u8bbf\u95ee\u548c\u64cd\u4f5c\u8fdb\u884c\u4e86\u4f18\u5316\uff08\u901a\u5e38\u4f7f\u7528\u6307\u9488\uff09\u3002</li> <li>\u5982\u679c\u8981\u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\uff0c\u5219\u5fc5\u987b\u5c06\u5176 \u7f16\u7801\uff08encode\uff09/ \u5e8f\u5217\u5316\uff08serialization\uff09 / \u7f16\u7ec4\uff08marshalling\uff09 \u4e3a\u67d0\u79cd\u81ea\u5305\u542b\u7684\u5b57\u8282\u5e8f\u5217\uff08\u4f8b\u5982\uff0cJSON \u6587\u6863\uff09\u3002 \u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6307\u9488\u5bf9\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5b57\u8282\u5e8f\u5217\u8868\u793a\u4f1a\u4e0e\u901a\u5e38\u5728\u5185\u5b58\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u5b8c\u5168\u4e0d\u540c\u3002</li> </ol> <p>Serialization\u6307\u7684\u662f\u4e3a\u4e86\u8ba9\u6570\u636e\u4fbf\u4e8e\u4f20\u8f93\u548c\u5b58\u50a8\uff0c\u5c06\u5bf9\u8c61\u8f6c\u5316\u6210\u7279\u5b9a\u683c\u5f0f\u7684\u6570\u636e\u3002Encoding\u662f\u4e00\u4e2a\u66f4\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u5c06\u6570\u636e\u4ece\u4e00\u79cd\u683c\u5f0f\u8f6c\u5316\u6210\u53e6\u4e00\u79cd\u683c\u5f0f\u90fd\u53ef\u4ee5\u53eb\u505aEncoding\u3002Marshal \u4e0d\u4ec5\u4f20\u8f93\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u800c\u4e14\u4f1a\u4e00\u8d77\u4f20\u8f93\u5bf9\u8c61\u7684\u65b9\u6cd5\uff08\u76f8\u5173\u4ee3\u7801\uff09\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u4e0d\u9700\u8981\u4e25\u683c\u7684\u533a\u5206\u4ed6\u4eec\u4e09\u8005\u7684\u533a\u522b\u3002</p> \u7f16\u7801\u65b9\u5f0f \u4e8c\u8fdb\u5236/\u6587\u672c \u7c7b\u578b \u4f18\u70b9 \u7f3a\u70b9 Base64 \u6587\u672c \u65e0 \u652f\u6301\u5e7f\u6cdb\uff0c\u7f16\u7801\u4e8c\u8fdb\u5236 \u6ca1\u6709\u7ed3\u6784\uff0c\u6d6a\u8d39\u7a7a\u95f4 JSON \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u7b80\u6d01 XML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u590d\u6742 YAML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca TOML \u6587\u672c \u5f31/\u81ea\u89e3\u91ca \u9002\u5408\u914d\u7f6e\u6587\u4ef6 CSV,TSV \u8868\u683c \u5f31 \u9002\u5408\u8868\u683c \u7f3a\u5c11\u7edf\u4e00\u89c4\u8303 CBOR \u4e8c\u8fdb\u5236 \u5f31/\u81ea\u89e3\u91ca \u7f16\u7801\u7d27\u51d1\uff0c\u4e8c\u8fdb\u5236\u7248\u7684JSON Protobuf \u4e8c\u8fdb\u5236 \u5f3a \u4e8c\u8fdb\u5236\u6bd4\u6587\u672c\u8282\u7701\u7a7a\u95f4 \u4e3b\u8981\u5bf9Go\u6bd4\u8f83\u597d\u7528 Borsh \u4e8c\u8fdb\u5236 \u5f3a \u53ef\u4ee5\u5e8f\u5217\u5316\u5bf9\u8c61 \u4f7f\u7528\u7684\u5c11\uff0c\u4e3b\u8981\u5bf9Rust\u6bd4\u8f83\u597d\u7528 Thrift \u4e8c\u8fdb\u5236 \u5f3a Avro \u4e8c\u8fdb\u5236 \u5f31/\u81ea\u89e3\u91ca pickle/ java.io.Serializable/... \u4e8c\u8fdb\u5236 \u5f3a \u8bed\u8a00\u81ea\u5e26\uff0c\u53ef\u4ee5\u5e8f\u5217\u5316\u5bf9\u8c61 \u4e0d\u5b89\u5168\uff0c\u4e0d\u901a\u7528"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#json","title":"JSON","text":"<p>JSON\u7684\u7528\u9014\u975e\u5e38\u5e7f\u6cdb\u3002\u5f88\u591a\u8bed\u8a00\u5185\u7f6e/\u901a\u8fc7\u6807\u51c6\u5e93\u652f\u6301\u4e86JSON\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u67092\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a</p> <ul> <li>\u5927\u4e8e \\(2^{53}\\) \u7684\u6574\u6570\u65e0\u6cd5\u4f7f\u7528 IEEE 754 \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u4f7f\u7528JSON\u76f4\u63a5\u5b58\u50a8\u8fd9\u6837\u7684\u6570\u636e\u3002\u4e00\u5b9a\u8981\u5b58\u5927\u6574\u6570\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u3002</li> <li>\u4e0d\u76f4\u63a5\u652f\u6301\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u9700\u8981\u501f\u52a9\u5982Base64\u7684\u5e2e\u52a9\u3002</li> </ul> <p>\u5177\u4f53\u7f16\u7a0b\u5b9e\u8df5\u53ef\u4ee5\u53c2\u8003\uff1a</p> <ul> <li>Python - json</li> <li>Rust - Serde</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#xml","title":"XML","text":"<p>\u6709\u4eba\u5bf9XML\u7684\u8bc4\u4ef7\u662f\uff1a\u4e00\u822c\u7684\u8bed\u8a00\uff0c\u8981\u4e48\u9002\u5408\u673a\u5668\u9605\u8bfb\uff0c\u8981\u4e48\u9002\u5408\u4eba\u7c7b\u9605\u8bfb\u3002\u800cXML\u662f\u5c11\u6709\u7684\u5bf9\u4eba\u548c\u673a\u5668\u90fd\u4e0d\u53cb\u597d\u7684\u3002\u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u3002</p> <p>Python \u6807\u51c6\u5e93\u63d0\u4f9b\u7684 XML \u6a21\u5757\uff0c\u5bf9\u4e8e\u6076\u610f\u6784\u9020\u7684\u6570\u636e\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u653b\u51fb\u8005\u53ef\u80fd\u6ee5\u7528 XML \u529f\u80fd\u6765\u6267\u884c\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3001\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u3001\u751f\u6210\u4e0e\u5176\u5b83\u8ba1\u7b97\u673a\u7684\u7f51\u7edc\u8fde\u63a5\u6216\u7ed5\u8fc7\u9632\u706b\u5899\u3002\u5982\u679c\u6765\u6e90\u4e0d\u4fe1\u4efb\uff0c\u63a8\u8350\u4f7f\u7528 GitHub - tiran/defusedxml\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#toml","title":"TOML","text":"<p>TOML\u4e3b\u8981\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u6570\u636e\u4f20\u8f93\u3002</p> <ul> <li>Python - tomllib 3.11 \u5f15\u5165\u7684\u89e3\u6790 TOML \u6570\u636e\u7684\u6a21\u5757\uff0c\u63a5\u53e3\u548c json \u662f\u4e00\u81f4\u7684\u3002</li> <li>Rust - crates.io - toml</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#yaml","title":"YAML","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#base64","title":"Base64","text":"<p>base64\u662f\u76f8\u5f53\u7b80\u5355\u7684\u7f16\u7801\u6280\u672f\u3002\u4ed6\u4e3b\u8981\u662f\u7528\u4e8e\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7f16\u7801\u6210\u6587\u672c\u683c\u5f0f\uff0c\u4ece\u800c\u6ee1\u8db3\u67d0\u4e9b\u9650\u5236\uff0c\u672c\u8eab\u4e0d\u5bf9\u4e8c\u8fdb\u5236\u6570\u636e\u4f5c\u4efb\u4f55\u9650\u5236\u3002base64\u53ea\u4f7f\u7528<code>A</code>\u2013<code>Z</code>, <code>a</code>\u2013<code>z</code>, <code>0</code>\u2013<code>9</code>\u4ee5\u53ca<code>+</code>\u548c<code>/</code>\u6765\u7f16\u7801\u6570\u636e\uff08\u517164\u4e2a\u5b57\u7b26\uff0c\u4ee3\u8868\u4ece0\u523063\uff0c6\u4f4d\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u9700\u8981\u7528\u4e00\u4e2a\u5b57\u8282\uff088\u4f4d\uff09\u7684\u5b57\u7b26\uff0c\u6765\u7f16\u7801\u4e00\u4e2a6\u4f4d\u7684\u6570\u636e\uff0c\u6240\u4ee5\u7f16\u7801\u4e4b\u540e\u4f53\u79ef\u4f1a\u81a8\u80c0\u5230\u539f\u5148\u7684\u7ea64/3\u3002\u539f\u6765\u7684\u6570\u636e\u5e94\u8be5\u662f8\u4f4d\u7684\u500d\u6570\u800c\u4e0d\u662f6\u4f4d\u7684\u500d\u6570\uff0c\u600e\u4e48\u529e\uff1f\u7528<code>=</code>\u4f5c\u4e3apadding\u6765\u586b\u5145\u7ed3\u679c\u30023\u4e2a\u539f\u672c\u7684\u6570\u636e\uff0c\u7f16\u7801\u7684\u52304\u4e2a\u5b57\u7b26\u3002\u6240\u4ee5\u5982\u679c\u6570\u636e\u6700\u540e\u4f1a\u8865\u5145padding length = 3 - origin length % 3\u3002</p> <p>\u4f8b\u5982\uff1a\u7f16\u7801 <code>hi</code>(0x68, 0x69, 0110 1000 0110 1001)\uff0c\u6309\u71676\u4f4d\u5206\u5c31\u662f011010, 000110 1001\u3002\u4e5f\u5c31\u662f26, 6, 36\u3002\u67e5\u8868\u5f97<code>aGk</code>\u3002\u8fd8\u5dee\u4e86\u4e00\u4e2a\u5b57\u7b26\u51d1\u52303\u7684\u500d\u6570\uff0c\u8865\u4e00\u4e2apadding\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u7f16\u7801\u7ed3\u679c\u662f<code>aGk=</code>\u3002</p> <p>base64\u6709\u53d8\u79cdbase58\uff08\u53bb\u6389<code>0,I,l,O,+,/</code>\u65b9\u4fbf\u4eba\u9605\u8bfb\uff09, base32\uff0cbase16\uff08\u5373\u7528Hexadecimal\u8868\u8fbe\u4e8c\u8fdb\u5236\u6570\u636e\uff09\u7b49\u3002\u539f\u7406\u90fd\u4e00\u6837\u3002</p> <p>Python std - base64 \u3002\u9664\u4e86 base64\uff0c\u8fd8\u6709 base32,base16 \u7b49\u7f16\u7801\u4e5f\u5728\u8fd9\u4e2a\u5e93\u4e2d\u3002</p> <pre><code>&gt;&gt;&gt; base64.b64encode(b\"hello world\")\nb'aGVsbG8gd29ybGQ='\n&gt;&gt;&gt; base64.b64decode(b'aGVsbG8gd29ybGQ=')\nb'hello world'\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/Serde/#protobuf","title":"Protobuf","text":"<p>golang \u548c Protobuf \u7684\u96c6\u6210\u4f7f\u7528\u65f6\u6700\u5e38\u89c1\u7684\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/","title":"ThirdWeb Attack Analysis","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#summary","title":"Summary","text":"<p>On\u00a0December\u00a05,\u00a02023,\u00a0Web3\u00a0development\u00a0platform\u00a0thirdweb\u00a0reported\u00a0security\u00a0vulnerabilities\u00a0in\u00a0their\u00a0prebuilt\u00a0smart\u00a0contracts.\u00a0This\u00a0flaw\u00a0impacted\u00a0all\u00a0ERC20,\u00a0ERC721,\u00a0and\u00a0ERC1155\u00a0tokens\u00a0deployed\u00a0using\u00a0these\u00a0contracts.\u00a0In\u00a0the\u00a0following\u00a0days,\u00a0tokens\u00a0deployed\u00a0with\u00a0the\u00a0vulnerable\u00a0contracts\u00a0were\u00a0progressively\u00a0exploited\u00a0in\u00a0attacks.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#reason-for-selection","title":"Reason\u00a0for\u00a0selection","text":"<p>Thirdparty\u00a0libraries\u00a0play\u00a0a\u00a0critical\u00a0role\u00a0in\u00a0software\u00a0security,\u00a0yet\u00a0their\u00a0importance\u00a0is\u00a0frequently\u00a0underestimated.\u00a0Modern\u00a0software\u00a0development\u00a0relies\u00a0heavily\u00a0on\u00a0reusing\u00a0code\u00a0from\u00a0open\u00a0source\u00a0libraries.\u00a0In\u00a0smart\u00a0contract\u00a0programming,\u00a0thirdparty\u00a0libraries\u00a0like\u00a0OpenZeppelin\u00a0are\u00a0popular\u00a0to\u00a0incorporate\u00a0security\u00a0best\u00a0practices\u00a0and\u00a0save\u00a0time.\u00a0But\u00a0dependencies\u00a0can\u00a0still\u00a0pose\u00a0unforeseen\u00a0dangers.\u00a0The\u00a0thirdweb\u00a0hack\u00a0is\u00a0a\u00a0typical\u00a0example.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#vulnerability-analysis","title":"Vulnerability\u00a0analysis","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#simplified-version","title":"Simplified\u00a0version","text":"<p>The\u00a0root\u00a0cause\u00a0is\u00a0that\u00a0the\u00a0forwarders\u00a0(ERC-2771)\u00a0were\u00a0not\u00a0designed\u00a0to\u00a0work\u00a0with\u00a0multicall.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#detailed-version","title":"Detailed\u00a0version","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#erc-2771","title":"ERC-2771","text":"<p>ERC-2771:\u00a0This\u00a0EIP\u00a0defines\u00a0a\u00a0contract-level\u00a0protocol\u00a0for\u00a0Recipient\u00a0contracts\u00a0to\u00a0accept\u00a0meta-transactions\u00a0through\u00a0trusted\u00a0Forwarder\u00a0contracts.\u00a0No\u00a0protocol\u00a0changes\u00a0are\u00a0made.\u00a0Recipient\u00a0contracts\u00a0are\u00a0sent\u00a0the\u00a0effective\u00a0<code>msg.sender</code>\u00a0(referred\u00a0to\u00a0as\u00a0<code>_msgSender()</code>)\u00a0and\u00a0<code>msg.data</code>\u00a0(referred\u00a0to\u00a0as\u00a0<code>_msgData()</code>)\u00a0by\u00a0appending\u00a0additional\u00a0calldata.</p> <p>In\u00a0practice,\u00a0OpenZeppelin's\u00a0ERC2771Context\u00a0is\u00a0widely\u00a0used.\u00a0The\u00a0last\u00a020\u00a0bytes\u00a0of\u00a0calldata\u00a0from\u00a0trusted\u00a0forwarder\u00a0is\u00a0treated\u00a0as\u00a0<code>_msgSender()</code>.\u00a0For\u00a0common\u00a0library\u00a0users,\u00a0it\u00a0seems\u00a0that\u00a0they\u00a0only\u00a0need\u00a0to\u00a0replace\u00a0all\u00a0uses\u00a0of\u00a0msg.sender\u00a0with\u00a0<code>_msgSender()</code>.</p> <pre><code>function _msgSender() internal view virtual override returns (address) {\n    uint256 calldataLength = msg.data.length;\n    uint256 contextSuffixLength = _contextSuffixLength();\n    if (isTrustedForwarder(msg.sender) &amp;&amp; calldataLength &gt;= contextSuffixLength) {\n        return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n    } else {\n        return super._msgSender();\n    }\n}\n\nfunction _msgData() internal view virtual override returns (bytes calldata) {\n    uint256 calldataLength = msg.data.length;\n    uint256 contextSuffixLength = _contextSuffixLength();\n    if (isTrustedForwarder(msg.sender) &amp;&amp; calldataLength &gt;= contextSuffixLength) {\n        return msg.data[:calldataLength - contextSuffixLength];\n    } else {\n        return super._msgData();\n    }\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#multicall","title":"Multicall","text":"<p>User\u00a0can\u00a0utilize\u00a0multicall\u00a0to\u00a0integrate\u00a0multiple\u00a0calls\u00a0into\u00a0one\u00a0single\u00a0call.\u00a0The\u00a0calldatas\u00a0of\u00a0multiple\u00a0calls\u00a0extracted\u00a0from\u00a0the\u00a0calldata\u00a0of\u00a0single\u00a0call.\u00a0\u00a0In\u00a0practice,\u00a0OpenZeppelin's\u00a0MulticallUpgradeable\u00a0is\u00a0widely\u00a0used.\u00a0(The\u00a0bug\u00a0is\u00a0fixed\u00a0now)</p> <pre><code>function multicall(bytes[] calldata data) external virtual returns (bytes[] memory results) {\n    results = new bytes[](data.length);\n    for (uint256 i = 0; i &lt; data.length; i++) {\n        results[i] = _functionDelegateCall(address(this), data[i]);\n    }\n    return results;\n}\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#erc-2771multicall","title":"ERC-2771+Multicall","text":"<p>The\u00a0issue\u00a0arises\u00a0due\u00a0to\u00a0inconsistencies\u00a0in\u00a0how\u00a0calldata\u00a0is\u00a0packed\u00a0and\u00a0unpacked\u00a0between\u00a0these\u00a0two\u00a0components\u00a0(ERC-2771\u00a0and\u00a0Multicall):</p> <ol> <li> <p>As\u00a0per\u00a0ERC2771,\u00a0the\u00a0trusted\u00a0forwarder\u00a0should\u00a0pack\u00a0the\u00a0message\u00a0data\u00a0and\u00a0sender\u00a0information\u00a0together.\u00a0The\u00a0contract\u00a0then\u00a0uses\u00a0<code>_msgData()</code>\u00a0and\u00a0<code>_msgSender()</code>\u00a0to\u00a0unpack\u00a0the\u00a0message\u00a0data\u00a0and\u00a0sender\u00a0information,\u00a0respectively.</p> </li> <li> <p>However,\u00a0the <code>multicall</code>\u00a0function\u00a0is\u00a0not\u00a0compatible\u00a0with\u00a0how\u00a0ERC2771\u00a0packs\u00a0data.\u00a0In\u00a0the\u00a0correct\u00a0implementation,\u00a0<code>multicall</code>\u00a0should\u00a0use\u00a0<code>_msgSender()</code>\u00a0to\u00a0unpack\u00a0the\u00a0sender\u00a0information\u00a0and\u00a0append\u00a0it\u00a0to\u00a0each\u00a0message's\u00a0calldata,\u00a0so\u00a0it\u00a0can\u00a0be\u00a0unpacked\u00a0properly\u00a0in\u00a0subsequent\u00a0calls.\u00a0But\u00a0this\u00a0step\u00a0is\u00a0missed.</p> </li> <li> <p>Meanwhile,\u00a0\u00a0the\u00a0contract\u00a0following\u00a0ERC2771\u00a0will\u00a0try\u00a0to\u00a0unpack\u00a0message\u00a0data\u00a0and\u00a0sender\u00a0information\u00a0using\u00a0<code>_msgData()</code>\u00a0and\u00a0<code>_msgSender()</code>.\u00a0However,\u00a0without\u00a0the\u00a0sender\u00a0information\u00a0appended\u00a0to\u00a0calldata,\u00a0the\u00a0sender\u00a0information\u00a0is\u00a0unpacked\u00a0as\u00a0the\u00a0last\u00a020\u00a0bytes\u00a0of\u00a0<code>_msgData()</code>,\u00a0which\u00a0can\u00a0be\u00a0controlled\u00a0by\u00a0the\u00a0attacker.</p> </li> </ol> <p>This\u00a0allows\u00a0an\u00a0attacker\u00a0to\u00a0construct\u00a0manipulated\u00a0calldata\u00a0that\u00a0executes\u00a0malicious\u00a0logic\u00a0with\u00a0an\u00a0arbitrary\u00a0sender\u00a0information,\u00a0violating\u00a0the\u00a0expectations\u00a0set\u00a0by\u00a0the\u00a0specifications.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#attack-analysis","title":"Attack\u00a0analysis","text":""},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#simplified-version_1","title":"Simplified\u00a0version","text":"<p>Many\u00a0tokens\u00a0that\u00a0use\u00a0both\u00a0of\u00a0these\u00a0libraries\u00a0are\u00a0vulnerable\u00a0to\u00a0similar\u00a0attack\u00a0methods.\u00a0The\u00a0attacker\u00a0utilize\u00a0the\u00a0bug\u00a0to\u00a0impersonates\u00a0the\u00a0swap\u00a0pool\u00a0to\u00a0burn\u00a0its\u00a0token,\u00a0causing\u00a0the\u00a0price\u00a0of\u00a0token\u00a0up.\u00a0Then\u00a0do\u00a0a\u00a0swap\u00a0and\u00a0draining\u00a0the\u00a0entire\u00a0liquidity.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#detailed-version_1","title":"Detailed\u00a0version","text":"<p>Let's\u00a0take\u00a0one\u00a0instance\u00a0of\u00a0an\u00a0attack\u00a0transaction\u00a0as\u00a0an\u00a0example.</p> <p>https://phalcon.blocksec.com/explorer/tx/eth/0xecdd111a60debfadc6533de30fb7f55dc5ceed01dfadd30e4a7ebdb416d2f6b6</p> <ol> <li>Swap\u00a05\u00a0<code>$WETH</code>\u00a0for\u00a03,455,399,346\u00a0<code>$TIME</code>.</li> <li>Invoke\u00a0trusted\u00a0forwarder\u00a0with\u00a0carefully\u00a0crafted\u00a0data,\u00a0after\u00a0being\u00a0parsed\u00a0by\u00a0multicall,\u00a0the\u00a0burn\u00a0function\u00a0is\u00a0called\u00a0with\u00a0Uniswap\u00a0Pool\u00a0as\u00a0the\u00a0<code>_msgSender()</code>.\u00a0The\u00a0<code>$TIME</code>\u00a0balance\u00a0of\u00a0pool\u00a0is\u00a0decreased.</li> </ol> <p></p> <ol> <li>Sync\u00a0the\u00a0pool,\u00a0the\u00a0price\u00a0of\u00a0<code>$TIME</code>\u00a0is\u00a0lifted.</li> <li>Swap\u00a03,455,399,346\u00a0<code>$TIME</code>\u00a0for\u00a094\u00a0<code>$WETH</code>.</li> </ol> <p>The\u00a0step\u00a02\u00a0is\u00a0the\u00a0key\u00a0of\u00a0attack.\u00a0Attacker\u00a0invoke\u00a0Forwarder.execute\u00a0to\u00a0forward\u00a0data:</p> <p></p> <p>However,\u00a0it\u00a0is\u00a0parsed\u00a0as\u00a0<code>bytes[]</code>\u00a0of\u00a0length\u00a01,\u00a0then\u00a0used\u00a0as\u00a0data\u00a0to\u00a0call\u00a0the\u00a0contract.\u00a0</p> <p></p>"},{"location":"%E5%BC%80%E5%8F%91/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/ThirdWeb/#highlight-lesson","title":"Highlight\u00a0&amp;\u00a0Lesson","text":"<p>In\u00a0the\u00a0DeFi\u00a0space,\u00a0it\u00a0is\u00a0crucial\u00a0to\u00a0also\u00a0pay\u00a0attention\u00a0to\u00a0the\u00a0security\u00a0of\u00a0third-party\u00a0libraries.\u00a0Unfortunately,\u00a0these\u00a0libraries\u00a0can\u00a0sometimes\u00a0interact\u00a0with\u00a0each\u00a0other\u00a0in\u00a0unexpected\u00a0and\u00a0covert\u00a0ways,\u00a0posing\u00a0a\u00a0threat\u00a0to\u00a0the\u00a0security\u00a0of\u00a0the\u00a0contract.\u00a0This\u00a0highlights\u00a0the\u00a0importance\u00a0of\u00a0thorough\u00a0auditing\u00a0and\u00a0monitoring\u00a0to\u00a0mitigate\u00a0any\u00a0potential\u00a0vulnerabilities\u00a0that\u00a0may\u00a0arise\u00a0from\u00a0such\u00a0interactions.</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Docker/","title":"Docker","text":"<p>\u867d\u7136\u6587\u7ae0\u53eb\u505aDocker\uff0c\u4f46\u662f\u8fd9\u91cc\u4e3b\u8981\u60f3\u63a2\u8ba8Linux\u63d0\u4f9b\u7684\u9694\u79bb\u673a\u5236\uff0cDocker\u7684\u5e95\u5c42\u6280\u672f\uff1a</p> <ul> <li>Overlay FS</li> <li>Cgroup</li> <li>BPF</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/","title":"File","text":"<p>Linux\u7684\u54f2\u5b66\u662f\u201c\u4e00\u5207\u7686\u6587\u4ef6\u201d\u3002\u6240\u4ee5\u5b66\u4e60\u5982\u4f55\u64cd\u4f5cFile\u662fLinux\u7f16\u7a0b\u7684\u91cd\u8981\u90e8\u5206\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#introduction","title":"Introduction","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#basic-io","title":"Basic IO","text":"<p>\u6240\u6709\u6267\u884c I/O \u64cd\u4f5c\u7684\u7cfb\u7edf\u8c03\u7528\u90fd\u4ee5\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff08\u901a\u5e38\u662f\u5c0f\u6574\u6570\uff09\uff0c\u6765\u6307\u4ee3\u6253\u5f00\u7684\u6587\u4ef6\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u7528\u4ee5\u8868\u793a\u6240\u6709\u7c7b\u578b\u7684\u5df2\u6253\u5f00\u6587\u4ef6\uff0c\u5305\u62ec\u7ba1\u9053\uff08pipe\uff09\u3001FIFO\u3001socket\u3001\u7ec8\u7aef\u3001\u8bbe\u5907\u548c\u666e\u901a\u6587\u4ef6\u3002\u6309\u7167\u60ef\u4f8b\uff0c0\u662f\u6807\u51c6\u8f93\u5165\u6587\u4ef6\uff0c1\u662f\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\uff0c2\u662f\u6807\u51c6\u9519\u8bef\u6587\u4ef6\u3002</p> <p>\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e09\u4e2a\u6b65\u9aa4-\u6253\u5f00\u6587\u4ef6\uff0c\u64cd\u4f5c\uff08\u8bfb\u5199\uff09\u6587\u4ef6\uff0c\u5173\u95ed\u6587\u4ef6\u3002\u5206\u522b\u5bf9\u5e944\u4e2a\u7cfb\u7edf\u8c03\u7528\uff1a</p> <ul> <li><code>fd = open(pathname, flags, mode)</code> \u51fd\u6570\u6253\u5f00 <code>pathname</code> \u6240\u6807\u8bc6\u7684\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7528\u4ee5\u5728\u540e\u7eed\u51fd\u6570\u8c03\u7528\u4e2d\u6307\u4ee3\u6253\u5f00\u7684\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c<code>open()</code>\u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e4b\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5bf9\u4f4d\u63a9\u7801\u53c2\u6570 <code>flags</code> \u7684\u8bbe\u7f6e\u3002<code>flags</code> \u53c2\u6570\u8fd8\u53ef\u6307\u5b9a\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\uff1a\u53ea\u8bfb\u3001\u53ea\u5199\u4ea6\u6216\u662f\u8bfb\u5199\u65b9\u5f0f\u3002<code>mode</code> \u53c2\u6570\u5219\u6307\u5b9a\u4e86\u7531 <code>open()</code> \u8c03\u7528\u521b\u5efa\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u679c <code>open()</code> \u51fd\u6570\u5e76\u672a\u521b\u5efa\u6587\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u5ffd\u7565\u6216\u7701\u7565 mode \u53c2\u6570\u3002</li> <li><code>numread = read(fd, buffer, count)</code> \u8c03\u7528\u4ece <code>fd</code> \u6240\u6307\u4ee3\u7684\u6253\u5f00\u6587\u4ef6\u4e2d\u8bfb\u53d6\u81f3\u591a <code>count</code> \u5b57\u8282\u7684\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u5230 <code>buffer</code> \u4e2d\u3002<code>read()</code>\u8c03\u7528\u7684\u8fd4\u56de\u503c\u4e3a\u5b9e\u9645\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\u3002\u5982\u679c\u518d\u65e0\u5b57\u8282\u53ef\u8bfb\uff08\u4f8b\u5982\uff1a\u8bfb\u5230\u6587\u4ef6\u7ed3\u5c3e\u7b26 <code>EOF</code> \u65f6\uff09\uff0c\u5219\u8fd4\u56de\u503c\u4e3a <code>0</code>\u3002</li> <li><code>numwritten = write(fd, buffer, count)</code> \u8c03\u7528\u4ece <code>buffer</code> \u4e2d\u8bfb\u53d6\u591a\u8fbe <code>count</code> \u5b57\u8282\u7684\u6570\u636e\u5199\u5165\u7531 <code>fd</code> \u6240\u6307\u4ee3\u7684\u5df2\u6253\u5f00\u6587\u4ef6\u4e2d\u3002<code>write()</code>\u8c03\u7528\u7684\u8fd4\u56de\u503c\u4e3a\u5b9e\u9645\u5199\u5165\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6570\uff0c\u4e14\u6709\u53ef\u80fd\u5c0f\u4e8e <code>count</code>\u3002<ul> <li>\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u78c1\u76d8\u6587\u4ef6\u6267\u884c I/O \u64cd\u4f5c\u65f6\uff0c<code>write()</code>\u8c03\u7528\u6210\u529f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u5df2\u7ecf\u5199\u5165\u78c1\u76d8\u3002\u53ef\u80fd\u8fd8\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u3002</li> </ul> </li> <li><code>status = close(fd)</code>\u5728\u6240\u6709\u8f93\u5165/\u8f93\u51fa\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u8c03\u7528 <code>close()</code>\uff0c\u91ca\u653e\u6587\u4ef6\u63cf\u8ff0\u7b26 <code>fd</code> \u4ee5\u53ca\u4e0e\u4e4b\u76f8\u5173\u7684\u5185\u6838\u8d44\u6e90\u3002</li> </ul> <p>\u5728Cache and Buffer \u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u63a2\u8ba8\u4e86\u7cfb\u7edf\u8c03\u7528<code>read</code>\u548c<code>write</code>\u662f\u4e0d\u5305\u542bBuffer\u7684\uff0c\u800c\u901a\u8fc7\u5728\u5e94\u7528\u5c42\u6dfb\u52a0Buffer\u5f80\u5f80\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u8bfb\u5199\u7684\u6548\u7387\u3002</p> <p>\u867d\u7136\u4e0a\u9762\u7684\u56db\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u914d\u5408\u4e0d\u540c\u7684\u53c2\u6570\u53ef\u4ee5\u5904\u7406\u7edd\u5927\u591a\u6570\u7684\u60c5\u51b5\u3002\u4f46\u662f\u4e0a\u9762\u7684\u201c\u6587\u4ef6\u201d\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u62bd\u8c61\u7684\u5b57\u8282\u6d41\uff0c\u5b9e\u9645\u4e0a\u7684\u6587\u4ef6\u53ef\u80fd\u662f\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u5916\u8bbe\u3002\u4e3a\u6b64<code>ioctl()</code>\u7cfb\u7edf\u8c03\u7528\u53c8\u4e3a\u6267\u884c\u6587\u4ef6\u548c\u8bbe\u5907\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4e00\u79cd\u591a\u7528\u9014\u673a\u5236\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#file-property","title":"File Property","text":"<p>\u5229\u7528\u7cfb\u7edf\u8c03\u7528 <code>stat()</code>\u3001<code>lstat()</code>\u4ee5\u53ca <code>fstat()</code>\uff0c\u53ef\u83b7\u53d6\u4e0e\u6587\u4ef6\u6709\u5173\u7684\u4fe1\u606f\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u63d0\u53d6\u81ea\u6587\u4ef6 i-node\u3002\u5305\u62ec\u65f6\u95f4\u6233\u3001\u5c5e\u4e3b\u4fe1\u606f\u3001\u6743\u9650\u4fe1\u606f\u7b49\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#directory-and-link","title":"Directory and Link","text":"<p>\u76ee\u5f55\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\u3002\u867d\u7136\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u591f\u6253\u5f00\u4e00\u4e2a\u76ee\u5f55\uff0c\u4f46\u5374\u4e0d\u80fd\u4f7f\u7528 <code>read()</code> \u53bb\u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u540c\u6837\u4e5f\u4e0d\u80fd\u4f7f\u7528 <code>write()</code>\u6765\u6539\u53d8\u4e00\u4e2a\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u800c\u662f\u4f7f\u7528<code>getdents()</code> \u7cfb\u7edf\u8c03\u7528\u8bfb\u53d6\u76ee\u5f55\u5185\u5bb9\uff0c\u4f7f\u7528<code>link()</code>\u3001<code>mkdir()</code>\u3001<code>symlink()</code>\u3001<code>unlink()</code>\u53ca <code>rmdir()</code>\u4e4b\u7c7b\u7684\u7cfb\u7edf\u8c03\u7528\u6765\u95f4\u63a5\uff08\u5411\u5185\u6838\u8bf7\u6c42\uff09\u6539\u53d8\u5176\u5185\u5bb9\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#_1","title":"\u76d1\u63a7\u6587\u4ef6\u7cfb\u7edf\u4e8b\u4ef6","text":"<p>\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u8fdb\u884c\u76d1\u63a7\uff0c\u5df2\u4fa6\u6d4b\u5176\u662f\u5426\u53d1\u751f\u4e86\u7279\u5b9a\u4e8b\u4ef6\u3002\u4f8b\u5982\uff0c\u5f53\u628a\u6587\u4ef6\u52a0\u5165\u6216\u79fb\u51fa\u4e00\u76ee\u5f55\u65f6\uff0c\u56fe\u5f62\u5316\u6587\u4ef6\u7ba1\u7406\u5668\u5e94\u80fd\u5224\u5b9a\u6b64\u76ee\u5f55\u662f\u5426\u5728\u5176\u5f53\u524d\u663e\u793a\u4e4b\u5217\uff0c\u800c\u5b88\u62a4\u8fdb\u7a0b\u53ef\u80fd\u4e5f\u60f3\u8981\u76d1\u63a7\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4e86\u89e3\u5176\u662f\u5426\u88ab\u4fee\u6539\u3002 \u81ea\u5185\u6838 2.6.13 \u8d77\uff0cLinux \u5f00\u59cb\u63d0\u4f9b inotify \u673a\u5236\uff0c\u4ee5\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7\u6587\u4ef6\u4e8b\u4ef6\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#pipe","title":"Pipe","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#kernel-details","title":"Kernel Details","text":"<p>\u77e5\u9053\u4e00\u4e9b\u5185\u6838\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\u53ef\u4ee5\u5e2e\u6211\u6211\u4eec\u66f4\u597d\u7684\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#_2","title":"\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u6253\u5f00\u6587\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb","text":"<p>Linux\u5229\u7528\u4e09\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6253\u5f00\u7684\u6587\u4ef6\uff1a</p> <ul> <li>\u8fdb\u7a0b\u7ea7\u7684 \u6587\u4ef6\u63cf\u8ff0\u7b26\u8868 File Descriptor Table\u3002</li> <li>\u7cfb\u7edf\u7ea7\u7684 \u6253\u5f00\u6587\u4ef6\u8868 Open File Table\u3002</li> <li>\u6587\u4ef6\u7cfb\u7edf\u7684 i-node \u8868\u3002</li> <li>\u9488\u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5185\u6838\u4e5f\u4e3a\u5176\u7ef4\u62a4\u4e86 Open File Descriptor Table\u3002\u4ed6\u4fdd\u5b58\u5bf9Open File Description Table\u6761\u76ee\u7684\u5f15\u7528\u3002</li> <li>\u5185\u6838\u5bf9\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u7ef4\u62a4\u6709\u4e00\u4e2a\u7cfb\u7edf\u7ea7\u7684 Open File Table\u3002\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\u5b58\u50a8\u4e86\u4e0e\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6\u76f8\u5173\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002<ul> <li>\u5f53\u524d\u6587\u4ef6\u504f\u79fb\u91cf\uff08\u8c03\u7528 read()\u548c write()\u65f6\u66f4\u65b0\uff0c\u6216\u4f7f\u7528 lseek()\u76f4\u63a5\u4fee\u6539\uff09\u3002</li> <li>\u6253\u5f00\u6587\u4ef6\u65f6\u6240\u4f7f\u7528\u7684\u72b6\u6001\u6807\u5fd7\uff08\u5373\uff0copen()\u7684 flags \u53c2\u6570\uff09\u3002</li> <li>\u6587\u4ef6\u8bbf\u95ee\u6a21\u5f0f\uff08\u5982\u8c03\u7528 open()\u65f6\u6240\u8bbe\u7f6e\u7684\u53ea\u8bfb\u6a21\u5f0f\u3001\u53ea\u5199\u6a21\u5f0f\u6216\u8bfb\u5199\u6a21\u5f0f\uff09\u3002</li> <li>\u4e0e\u4fe1\u53f7\u9a71\u52a8 I/O \u76f8\u5173\u7684\u8bbe\u7f6e\u3002</li> <li>\u5bf9\u8be5\u6587\u4ef6 i-node \u5bf9\u8c61\u7684\u5f15\u7528\u3002</li> </ul> </li> </ul> <p>\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>![NOTE] \u6240\u4ee5\u60f3\u8981\u8ba9\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u4e0d\u51b2\u7a81\uff0c\u9664\u4e86\u4f7f\u7528APPEND\u6a21\u5f0f\uff08\u65e5\u5fd7\u7684\u5199\u6cd5\uff09\uff0c\u8fd8\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6\u8868\u4e2d\u7684\u9879\u76ee\uff0c\u9664\u4e86FORK\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 UNIX \u57df\u5957\u63a5\u5b57\u5c06\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f20\u9012\u7ed9\u53e6\u4e00\u8fdb\u7a0b\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#_3","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u53c2\u8003VFS\u3002\u8fd9\u662f\u66fe\u7ecf\u5728\u6728\u94fe\u5b9e\u4e60\u7684\u65f6\u5019\u505a\u7684\u4e00\u4e9b\u7b14\u8bb0\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/File/#practice","title":"Practice","text":"<ul> <li>Python - File</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/","title":"Process","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#introduction","title":"Introduction","text":"<p>Process \u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u5141\u8bb8\u7684\u7a0b\u5e8f\u5b9e\u4f8b\uff0c\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\u3002</p> <p>\u9996\u5148\uff0cProcess \u6709\u4e00\u4e2a ID\uff08<code>pid</code>\uff09\u3002\u5b83\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5728\u4e00\u4e2a\u65f6\u95f4\u5185\u4e00\u4e2a ID \u552f\u4e00\u5bf9\u5e94\u4e00\u4e2a\u8fdb\u7a0b\u3002<code>pid = 0</code>\u00a0\u7684\u662f idle \u8fdb\u7a0b\uff0c<code>pid = 1</code>\u00a0\u7684\u662f init \u8fdb\u7a0b\u3002<code>pid</code>\u00a0\u7684\u5206\u914d\u4e00\u822c\u662f\u9010\u6e10\u9012\u589e\u7684\uff0c\u76f4\u5230\u8fbe\u5230\u00a0<code>pid_max</code>(/proc/sys/kernel/pid_max)\u3002</p> <ul> <li>Process \u8fd8\u6709\u5176\u7236\u8fdb\u7a0b\uff08<code>ppid</code>\uff09\u3002</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u88ab\u4e00\u4e2a\u00a0<code>user</code>\u00a0\uff08/etc/passwd \u53ef\u67e5\u770b\uff09\u548c\u4e00\u4e2a\u00a0<code>group</code>\uff08/etc/group \u53ef\u67e5\u770b\uff09 \u62e5\u6709\uff0c\u5b83\u4eec\u51b3\u5b9a\u4e86\u8fdb\u7a0b\u62e5\u6709\u7684\u6743\u9650\u3002</li> <li>\u6bcf\u4e2a Process \u5c5e\u4e8e\u4e00\u4e2a process group</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#process-basic-operation","title":"Process Basic Operation","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#get-pid","title":"Get pid","text":"<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\npid_t getpid (void);\npid_t getppid (void);\n</code></pre> <p>\u83b7\u5f97\u8fdb\u7a0b\u7684 PID \u548c\u7236\u8fdb\u7a0b\u7684 PID\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#create-process","title":"Create process","text":"<p>\u521b\u5efa\u65b0\u8fdb\u7a0b\u4e00\u822c\u5206\u4e3a\u4e24\u6b65\u3002\u7b2c\u4e00\u6b65\u521b\u5efa\u65b0\u8fdb\u7a0b\uff08<code>fork</code>\uff09\uff0c\u7b2c\u4e8c\u6b65\u8f7d\u5165 Binary\uff08<code>exec</code>\uff09\u3002</p> <p>\u867d\u7136\u53ea\u6709\u00a0<code>exec</code>\u00a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u4f46\u662f\u5728\u6b64\u4e4b\u4e0a\u6709\u8bb8\u591a\u7684\u5e93\u51fd\u6570\u53ef\u7528\u3002\u548c\u7cfb\u7edf\u8c03\u7528\u76f8\u540c\u7684\u00a0<code>execve</code>\u00a0\u7684\u7528\u6cd5\u5982\u4e0b\u3002\u5176\u4ed6\u7684\u7528\u6cd5\u5927\u540c\u5c0f\u5f02\uff0c\u65e0\u975e\u662f\u7b80\u5316\u4e86\u53c2\u6570\u7684\u4f20\u5165\u3002</p> <pre><code>int execve (const char *filename, char *const argv[], char *const envp[]);\n\nint main() {\n    int ret;\n    const char *argv[] = {\"vim\", NULL}; \n    ret = execve (\"/usr/bin/vim\", argv, NULL); \n    if (ret == -1)           // \u6b63\u5e38\u60c5\u51b5exec\u4e0dreturn\n        perror (\"execve\");\n    return 0;\n}\n</code></pre> <p>exec \u9664\u4e86\u4fee\u6539\u4e86\u5185\u5b58\u7684\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u7684\u526f\u4f5c\u7528\uff1a</p> <ul> <li>Any pending signals are lost.</li> <li>Any signals that the process is catching (see Chapter 9) are returned to their default behavior, as the signal handlers no longer exist in the process\u2019 address space.</li> <li>Any memory locks are dropped.</li> <li>Most thread attributes are returned to the default values.</li> <li>Most process statistics are reset.</li> <li>Anything related to the process\u2019 memory, including any mapped files, is dropped.</li> <li>Anything that exists solely in user space, including features of the C library, such as\u00a0<code>atexit()</code>\u00a0behavior, is dropped.</li> </ul> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\npid_t fork (void);\n</code></pre> <p>fork \u7528\u6765\u521b\u5efa\u4e00\u4e2a\u548c\u7236\u8fdb\u7a0b\u4e00\u6a21\u4e00\u6837\u7684\u65b0\u8fdb\u7a0b\u3002\u5b83\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u4ed6\u6709\u201c\u4e24\u4e2a\u201d\u8fd4\u56de\u503c\u3002\u5bf9\u4e8e\u7236\u8fdb\u7a0b\u6765\u8bf4\uff0c\u5b83\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f\u5b50\u8fdb\u7a0b\u7684 pid\uff1b\u5bf9\u4e8e\u5b50\u8fdb\u7a0b\u6765\u8bf4\uff0c\u5b83\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f 0\u3002\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56de -1\u3002\u56e0\u6b64\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>pid_t pid;\n\npid = fork();\nif (pid &gt; 0)\n    printf (\"I am the parent of pid=%d!\\n\", pid);\nelse if (pid == 0)\n    printf (\"I am the baby!\\n\");\n    // \u4e00\u822c\u6765\u8bf4\u5728\u6b64\u5904\u4f1a\u8c03\u7528exec\nelse if (pid == -1)\n    perror (\"fork\");\n</code></pre> <p>\u73b0\u5728\u5185\u6838\u7684 fork \u57fa\u4e8e Copy On Write \u6280\u672f\u5b8c\u6210\uff0c\u6211\u4eec\u4e0d\u7528\u592a\u62c5\u5fc3\u590d\u5236\u6574\u4e2a\u7236\u8fdb\u7a0b\u7684\u6548\u7387\u95ee\u9898\u3002\u5728\u6b64\u6280\u672f\u5b9e\u73b0\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528\u00a0<code>vfork</code>\u00a0\u907f\u514d\u590d\u5236\uff0c\u4f46\u662f\u73b0\u5728\u6beb\u65e0\u5fc5\u8981\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#terminate-process","title":"Terminate Process","text":"<pre><code>#include &lt;stdlib.h&gt;\nvoid exit (int status);\n</code></pre> <p>\u9000\u51fa\u8fdb\u7a0b\u3002\u8fd4\u56de\u7684\u00a0<code>status &amp; 0xff</code>\u00a0\u4f1a\u4f20\u9012\u7ed9\u7236\u8fdb\u7a0b\u3002\u4f5c\u4e3a\u7cfb\u7edf\u8c03\u7528\u00a0<code>_exit</code>\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u8fdb\u7a0b\u3002\u4f46\u4f5c\u4e3a C \u5e93\u5305\u88c5\u540e\u7684\u51fd\u6570\uff0c\u5728\u9000\u51fa\u4e4b\u524d\uff0cC \u5e93\u4f1a\u5b8c\u6210 3 \u4ef6\u4e8b\u60c5\uff1a</p> <ol> <li>\u8c03\u7528\u5728\u00a0<code>atexit</code>\u00a0\u548c\u00a0<code>on_exit</code>\u00a0\u6ce8\u518c\u7684\u51fd\u6570\u3002</li> <li>Flush all open standard I/O stream\u3002</li> <li>\u5220\u9664\u00a0<code>tmpfile()</code>\u00a0\u521b\u5efa\u7684\u4e34\u65f6\u6587\u4ef6\u3002</li> </ol> <p>\u5b50\u8fdb\u7a0b terminate \u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u53d1\u9001 SIGCHID \u4fe1\u53f7\u7ed9\u7236\u8fdb\u7a0b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd9\u4e2a\u4fe1\u53f7\u4f1a\u88ab\u5ffd\u7565\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6765\u5904\u7406\u8fd9\u4e2a\u4fe1\u53f7\u3002\u4e0d\u8fc7\u5728\u66f4\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u7236\u8fdb\u7a0b\u9700\u8981\u4e3b\u52a8\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u7ed3\u675f\uff0c\u5e76\u5904\u7406\u8fd4\u56de\u503c\uff0c\u8fd9\u4f7f\u7528\u00a0<code>wait</code>\u00a0\u51fd\u6570\u3002</p> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/wait.h&gt;\npid_t wait (int *status);\npid_t waitpid (pid_t pid, int *status, int options);\n\nWIFEXITED (status);     // \u8fdb\u7a0b\u662f\u5426\u6b63\u5e38\u9000\u51fa\uff0c\u5373\u8c03\u7528`_exit()`\u9000\u51fa\nWIFSIGNALED (status);   // \u8fdb\u7a0b\u662f\u5426\u56e0\u4e3a\u4fe1\u53f7\u9000\u51fa\nWIFSTOPPED (status);\nWIFCONTINUED (status);\nWEXITSTATUS (status);\nWTERMSIG (status);\nWSTOPSIG (status);\nWCOREDUMP (status);\n</code></pre> <p><code>wait</code>\u00a0\u7684\u8fd4\u56de\u503c\u662f\u7ed3\u675f\u7684\u5b50\u8fdb\u7a0b\u7684 pid\uff0c\u4e0d\u8fc7\u00a0<code>status</code>\u00a0\u5e76\u4e0d\u662f\u00a0<code>exit(status)</code>\u3002wait \u7684\u00a0<code>status &gt;&gt; 8</code>\u00a0\u7684\u7ed3\u679c\u662f exit \u7684 status\uff0c\u800c\u5176\u4f4e 8 \u4f4d\u5219\u4ee3\u8868\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5b8f\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u3002<code>waitpid</code>\u00a0\u53ef\u4ee5\u7b49\u5f85\u7279\u5b9a\u7684\u5b50\u8fdb\u7a0b\uff0c\u5177\u4f53\u7684\u8bf4\uff1a</p> <ul> <li>\u5982\u679c pid \u7b49\u4e8e 0\uff0c\u5219\u7b49\u5f85\u4e0e\u8c03\u7528\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\uff09\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff08process group\uff09\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u300234.2 \u8282\u5c06\u63cf\u8ff0\u8fdb\u7a0b\u7ec4\u7684\u6982\u5ff5\u3002</li> <li>\u5982\u679c pid \u5c0f\u4e8e -1\uff0c\u5219\u4f1a\u7b49\u5f85\u8fdb\u7a0b\u7ec4\u6807\u8bc6\u7b26\u4e0e pid \u7edd\u5bf9\u503c\u76f8\u7b49\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u3002</li> <li>\u5982\u679c pid \u7b49\u4e8e -1\uff0c\u5219\u7b49\u5f85\u4efb\u610f\u5b50\u8fdb\u7a0b\u3002<code>wait(&amp;status)</code>\u00a0\u7684\u8c03\u7528\u4e0e\u00a0<code>waitpid(-1, &amp;status, 0)</code>\u00a0\u7b49\u4ef7\u3002</li> </ul> <p><code>wait3</code>,<code>wait4</code>,<code>waitid</code>\u00a0\u4e5f\u662f\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\u3002</p> <p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u9000\u51fa\u7684\u65f6\u5019\uff0c\u5b83\u7684\u8d44\u6e90\u5e76\u6ca1\u6709\u88ab\u00a0\u5b8c\u5168\u7684\u00a0\u6e05\u7406\uff08\u5426\u5219\u7236\u8fdb\u7a0b\u600e\u4e48\u83b7\u53d6\u5b83\u7684\u8fd4\u56de\u503c\u5462\uff09\u3002\u5b83\u7684\u6e05\u7406\u8981\u7b49\u5230\u7236\u8fdb\u7a0b\u53bb wait \u5b83\uff0c\u6ca1\u6709\u88ab\u7236\u8fdb\u7a0b\u6e05\u7406\u7684\u8fdb\u7a0b\u53eb\u505a Zombie\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u5148\u4e8e\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u4f1a\u88ab init \u8fdb\u7a0b\u9886\u517b\u3002</p> <p>\u9664\u4e86 wait \u7cfb\u5217\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4fe1\u53f7\u6765\u5bf9\u5b50\u8fdb\u7a0b\u7684\u7ed3\u675f\u8fdb\u884c\u5904\u7406\u3002\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u7684\u7ec8\u6b62\u5c5e\u5f02\u6b65\u4e8b\u4ef6\u3002\u7236\u8fdb\u7a0b\u65e0\u6cd5\u9884\u77e5\u5176\u5b50\u8fdb\u7a0b\u4f55\u65f6\u7ec8\u6b62\u3002\u7236\u8fdb\u7a0b\u5468\u671f\u6027\u7684\u8c03\u7528 wait \u662f\u4e00\u4e2a\u53ef\u80fd\u4f46\u662f\u7e41\u7410\u7684\u529e\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u65e0\u8bba\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4e8e\u4f55\u65f6\u7ec8\u6b62\uff0c\u7cfb\u7edf\u90fd\u4f1a\u5411\u5176\u7236\u8fdb\u7a0b\u53d1\u9001\u00a0<code>SIGCHLD</code>\u00a0\u4fe1\u53f7\u3002\u5bf9\u8be5\u4fe1\u53f7\u7684\u9ed8\u8ba4\u5904\u7406\u662f\u5c06\u5176\u5ffd\u7565\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u5b89\u88c5\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u6765\u6355\u83b7\u5b83\u3002\u4e0d\u8fc7\uff0c\u4f7f\u7528\u8fd9\u4e00\u65b9\u6cd5\u65f6\u9700\u8981\u638c\u63e1\u4e00\u4e9b\u7a8d\u95e8\u3002\u56e0\u4e3a\u5982\u679c\u6709\u4e24\u4e2a\u8fdb\u7a0b\u76f8\u7ee7\u4e2d\u6b62\uff0c\u4ea7\u751f\u4e86\u4e24\u6b21\u00a0<code>SIGCHLD</code>\u00a0\u4fe1\u53f7\uff0c\u7236\u8fdb\u7a0b\u53ef\u80fd\u53ea\u6355\u83b7\u5230\u4e00\u4e2a\uff08\u6ca1\u6709\u6392\u961f\u5904\u7406\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5728\u00a0<code>SIGCHLD</code>\u00a0\u5904\u7406\u7a0b\u5e8f\u5185\u90e8\u5faa\u73af\u4ee5\u00a0<code>WNOHANG</code>\u00a0\u6807\u5fd7\u6765\u8c03\u7528\u00a0<code>waitpid()</code>\uff0c\u76f4\u81f3\u518d\u65e0\u5176\u4ed6\u7ec8\u6b62\u7684\u5b50\u8fdb\u7a0b\u9700\u8981\u5904\u7406\u4e3a\u6b62\u3002\u901a\u5e38\u00a0<code>SIGCHLD</code>\u00a0\u5904\u7406\u7a0b\u5e8f\u90fd\u7b80\u5355\u5730\u7531\u4ee5\u4e0b\u4ee3\u7801\u7ec4\u6210\uff0c\u4ec5\u4ec5\u6355\u83b7\u5df2\u7ec8\u6b62\u5b50\u8fdb\u7a0b\u800c\u4e0d\u5173\u5fc3\u5176\u9000\u51fa\u72b6\u6001\u3002\u5982\u4e0b\u6240\u793a\u3002\u5faa\u73af\u4f1a\u4e00\u76f4\u6301\u7eed\u4e0b\u53bb\uff0c\u76f4\u81f3\u00a0<code>waitpid()</code>\u00a0\u8fd4\u56de 0\uff0c\u8868\u660e\u518d\u65e0\u50f5\u5c38\u5b50\u8fdb\u7a0b\u5b58\u5728\uff0c\u6216 -1\uff0c\u8868\u793a\u6709\u9519\u8bef\u53d1\u751f\uff08\u53ef\u80fd\u662f ECHILD\uff0c\u610f\u5373\u518d\u65e0\u66f4\u591a\u7684\u5b50\u8fdb\u7a0b\uff09\u3002</p> <pre><code>while (waitpid(-1, NULL, WNOHANG) &gt; 0)  // \u5982\u679c\u5173\u5fc3\u5b50\u8fdb\u7a0b\u7684\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u518d\u505a\u5904\u7406\n    continue;\n</code></pre> <pre><code>#include &lt;stdlib.h&gt;\nint atexit (void (*function)(void));\n</code></pre> <p><code>atexit</code>\u00a0\u662f\u4e00\u4e2a\u5e93\u51fd\u6570\u3002\u5141\u8bb8\u6211\u4eec\u6ce8\u518c\u5728\u8fdb\u7a0b\u9000\u51fa\u4e4b\u524d\u8981\u6267\u884c\u7684\u51fd\u6570\uff0c\u5b8c\u6210\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\u3002\u5b83\u662f\u6309\u7167\u5148\u8fdb\u540e\u51fa\u7684\u987a\u5e8f\u6267\u884c\u6ce8\u518c\u7684\u51fd\u6570\u7684\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#access-control-of-process","title":"Access Control of Process","text":"<p>\u4e00\u4e2a\u8fdb\u7a0b\u5173\u8054 4 \u7ec4 user ID: the real, effective, saved, and file system user IDs.</p> <ol> <li>real user ID: the user who originally ran the process. \u9664\u4e86 root \u7528\u6237\uff0c\u5176\u4ed6\u7528\u6237\u4e0d\u80fd\u4fee\u6539\u3002</li> <li>effectuve user ID: Permission verifications normally check against this value. \u5b83\u7ee7\u627f\u81ea\u7236\u8fdb\u7a0b\u7684 euid\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u8bbe\u7f6e\u4e86\u00a0<code>suid</code>\u00a0\u7684\u7a0b\u5e8f\uff0c\u8fdb\u7a0b\u5728\u00a0<code>exec</code>\u00a0\u65f6\u4f1a\u4fee\u6539\u5b83\u7684\u00a0<code>euid</code>\u00a0\u4e3a\u7a0b\u5e8f\u7684\u00a0<code>suid</code>\uff0c\u8fd9\u662f\u00a0<code>passwd</code>\u00a0\u7a0b\u5e8f\u5de5\u4f5c\u7684\u539f\u7406\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u8bb2\u89e3\u6587\u7ae0\u3002</li> <li>saved user ID: \u7528\u4e8e elevated privileges needs to temporarily lower its privileges. When a process forks, the child inherits the saved user ID of its parent. Upon an exec call, however, the kernel sets the saved user ID to the effective user ID, thereby making a record of the effective user ID at the time of the exec.</li> </ol> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\nint setuid (uid_t uid);\nint setgid (gid_t gid);\nint seteuid (uid_t euid);\nint setegid (gid_t egid);\nint setreuid (uid_t ruid, uid_t euid);\nint setregid (gid_t rgid, gid_t egid);\n\nuid_t getuid (void);\ngid_t getgid (void);\nuid_t geteuid (void);\ngid_t getegid (void);\n</code></pre> <p><code>setuid</code>\u00a0\u548c\u00a0<code>seteuid</code>\u00a0\u90fd\u662f\u7528\u6765\u4fee\u6539\u00a0<code>euid</code>\u00a0\u7684\uff0croot \u53ef\u4ee5\u5c06\u00a0<code>euid</code>\u00a0\u8bbe\u7f6e\u6210\u4efb\u4f55\u503c\uff0c\u666e\u901a\u7528\u6237\u53ea\u53ef\u4ee5\u5c06\u00a0<code>euid</code>\u00a0\u8bbe\u7f6e\u6210\u00a0<code>ruid</code>\u00a0\u6216\u00a0<code>suid</code>\u3002\u4e0d\u8fc7\u5b83\u4eec\u662f\u6709\u533a\u522b\u7684\uff0c\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u6765\u8bf4\u5b83\u4eec\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e8e root \u7528\u6237\u6765\u8bf4\uff0c<code>setuid</code>\u00a0\u4f1a\u540c\u65f6\u4fee\u6539\u00a0<code>ruid</code>\u00a0\u548c\u00a0<code>suid</code>\uff08\u4e5f\u5c31\u662f\u56de\u4e0d\u53bb\u4e86\uff09\uff0c<code>seteuid</code>\u00a0\u53ea\u4f1a\u4fee\u6539\u00a0<code>euid</code>\u3002</p> <p>\u4e0a\u9762\u7684\u8fd9\u4e9b\u51fd\u6570\u90fd\u53ef\u4ee5\u7528\u6765\u4fee\u6539 3 \u4e2a user id\uff0c\u5c06\u53c2\u6570\u6307\u5b9a\u4e3a -1 \u8868\u793a\u4e0d\u53d8\u3002\u5982\u679c\u8c03\u7528\u7684\u4e0d\u5bf9\uff0c\u4f1a\u8fd4\u56de\u00a0<code>EPERM</code>\u00a0\u9519\u8bef\u8868\u793a\u6ca1\u6709\u4fee\u6539\u6743\u9650\u3002</p> <p>process \u5c5e\u4e8e\u4e00\u4e2a user\uff0c\u81ea\u7136\u4e5f\u5c5e\u4e8e\u4e00\u4e2a user group\uff0c\u548c file \u662f\u7c7b\u4f3c\u7684\uff0c\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4e86\uff0c\u7528\u5904\u4e0d\u591a\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#session-and-process-group","title":"Session and Process Group","text":"<p>process \u8fd8\u5c5e\u4e8e\u4e00\u4e2a process group\uff0c\u4e00\u4e2a group \u6709\u82e5\u5e72\u4e2a process\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a process group leader\uff0cprocess group ID = process group leader\u2019s pid\u3002\u7c7b\u4f3c\u7684\u6982\u5ff5\u8fd8\u6709 session group\u3002</p> <p>process group \u7684\u4e3b\u8981\u7528\u9014\u662f\u5728\u8fdb\u7a0b\u4e4b\u95f4\u5efa\u7acb\u4f5c\u4e1a\u63a7\u5236\u5173\u7cfb\u3002\u8fdb\u7a0b\u7ec4 ID \u53ef\u4ee5\u7528\u6765\u63a7\u5236\u8fdb\u7a0b\u7ec4\u5185\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u4f8b\u5982\u53d1\u9001\u4fe1\u53f7\uff0c\u6682\u505c\u6216\u6062\u590d\u8fdb\u7a0b\u7ec4\u4e2d\u7684\u6240\u6709\u8fdb\u7a0b\u7b49\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u7528\u7ba1\u9053\u521b\u5efa\u4e00\u4e2a process group\uff0c\u4e00\u4e2a shell \u7a97\u53e3\u4e2d\u7684\u6240\u6709\u8fdb\u7a0b\u5c5e\u4e8e\u4e00\u4e2a session group\u3002</p> <pre><code>#define _XOPEN_SOURCE 500\n#include &lt;unistd.h&gt;\npid_t getpgid (pid_t pid);\nint setpgid (pid_t pid, pid_t pgid);\n</code></pre> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u5904\u7406\u8fd9\u4e2a\u4e1c\u897f\u3002\u4e0d\u662f\u5f88\u91cd\u8981\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#daemon","title":"Daemon","text":"<p>Daemon \u662f\u8fd0\u884c\u5728\u540e\u53f0\uff0c\u4e0d\u548c terminal \u5173\u8054\u7684\u7a0b\u5e8f\uff0c\u4e00\u822c\u7528\u6765\u63d0\u4f9b\u67d0\u4e9b\u670d\u52a1\u3002\u4e00\u4e2a\u8fdb\u7a0b\u5982\u4f55\u53d8\u6210 deamon \u5462\uff1a</p> <ol> <li>\u6267\u884c\u4e00\u4e2a fork()\uff0c\u4e4b\u540e\u7236\u8fdb\u7a0b\u9000\u51fa\uff0c\u5b50\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\uff08\u7ed3\u679c\u662f daemon \u6210\u4e3a\u4e86 init \u8fdb\u7a0b\u7684\u5b50\u8fdb\u7a0b\uff09\u3002\u4e4b\u6240\u4ee5\u8981\u505a\u8fd9\u4e00\u6b65\u662f\u56e0\u4e3a\u4e0b\u9762\u4e24\u4e2a\u539f\u56e0\u3002<ul> <li>\u5047\u8bbe daemon \u662f\u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7684\uff0c\u7236\u8fdb\u7a0b\u7684\u7ec8\u6b62\u4f1a\u88ab shell \u53d1\u73b0\uff0cshell \u5728\u53d1\u73b0\u4e4b\u540e\u4f1a\u663e     \u793a\u51fa\u53e6\u4e00\u4e2a shell \u63d0\u793a\u7b26\u5e76\u8ba9\u5b50\u8fdb\u7a0b\u7ee7\u7eed\u5728\u540e\u53f0\u8fd0\u884c\u3002</li> <li>\u5b50\u8fdb\u7a0b\u88ab\u786e\u4fdd\u4e0d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\u9996\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u5b83\u4ece\u5176\u7236\u8fdb\u7a0b\u90a3\u91cc\u7ee7\u627f\u4e86\u8fdb\u7a0b\u7ec4 ID     \u5e76\u4e14\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u552f\u4e00\u7684\u8fdb\u7a0b ID\uff0c\u800c\u8fd9\u4e2a\u8fdb\u7a0b ID \u4e0e\u7ee7\u627f\u800c\u6765\u7684\u8fdb\u7a0b\u7ec4 ID \u662f\u4e0d\u540c\u7684\uff0c     \u8fd9\u6837\u624d\u80fd\u591f\u6210\u529f\u5730\u6267\u884c\u4e0b\u9762\u4e00\u4e2a\u6b65\u9aa4\u3002</li> </ul> </li> <li>\u5b50\u8fdb\u7a0b\u8c03\u7528\u00a0<code>setsid()</code>\u00a0\u5f00\u542f\u4e00\u4e2a\u65b0\u4f1a\u8bdd\u5e76\u91ca\u653e\u5b83\u4e0e\u63a7\u5236\u7ec8\u7aef\u4e4b\u95f4\u7684\u6240\u6709\u5173\u8054\u5173\u7cfb\u3002</li> <li>\u5982\u679c daemon \u4ece\u6765\u6ca1\u6709\u6253\u5f00\u8fc7\u7ec8\u7aef\u8bbe\u5907\uff0c\u90a3\u4e48\u5c31\u65e0\u9700\u62c5\u5fc3 daemon \u4f1a\u91cd\u65b0\u8bf7\u6c42\u4e00\u4e2a\u63a7\u5236\u7ec8\u7aef\u4e86\u3002\u5982\u679c daemon \u540e\u9762\u53ef\u80fd\u4f1a\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u8bbe\u5907\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u91c7\u53d6\u63aa\u65bd\u6765\u786e\u4fdd\u8fd9\u4e2a\u8bbe\u5907\u4e0d\u4f1a\u6210\u4e3a\u63a7\u5236\u7ec8\u7aef\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u3002<ul> <li>\u5728\u6240\u6709\u53ef\u80fd\u5e94\u7528\u5230\u4e00\u4e2a\u7ec8\u7aef\u8bbe\u5907\u4e0a\u7684 open() \u8c03\u7528\u4e2d\u6307\u5b9a O_NOCTTY \u6807\u8bb0\u3002</li> <li>\u6216\u8005\u66f4\u7b80\u5355\u5730\u8bf4\uff0c\u5728 setsid() \u8c03\u7528\u4e4b\u540e\u6267\u884c\u7b2c\u4e8c\u4e2a fork()\uff0c\u7136\u540e\u518d\u6b21\u8ba9\u7236\u8fdb\u7a0b\u9000\u51fa\u5e76\u8ba9\u5b59\u5b50\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\u3002\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u5b50\u8fdb\u7a0b\u4e0d\u4f1a\u6210\u4e3a\u4f1a\u8bdd\u7ec4\u957f\uff0c\u56e0\u6b64\u6839\u636e System V \u4e2d\u83b7\u53d6\u7ec8\u7aef\u7684\u89c4\u5219\uff08Linux \u4e5f\u9075\u5faa\u4e86\u8fd9\u4e2a\u89c4\u5219\uff09\uff0c\u8fdb\u7a0b\u6c38\u8fdc\u4e0d\u4f1a\u91cd\u65b0\u8bf7\u6c42\u4e00\u4e2a\u63a7\u5236\u7ec8\u7aef\u3002</li> </ul> </li> <li>\u6e05\u9664\u8fdb\u7a0b\u7684 umask \u4ee5\u786e\u4fdd\u5f53 daemon \u521b\u5efa\u6587\u4ef6\u548c\u76ee\u5f55\u65f6\u62e5\u6709\u6240\u9700\u7684\u6743\u9650\u3002</li> <li>\u4fee\u6539\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u901a\u5e38\u4f1a\u6539\u4e3a\u6839\u76ee\u5f55\uff08/\uff09\u3002\u8fd9\u6837\u505a\u662f\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a daemon \u901a\u5e38\u4f1a\u4e00\u76f4\u8fd0\u884c\u76f4\u81f3\u7cfb\u7edf\u5173\u95ed\u4e3a\u6b62\u3002\u5982\u679c daemon \u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e3a\u4e0d\u5305\u542b/\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u5378\u8f7d\u8be5\u6587\u4ef6\u7cfb\u7edf\u3002\u6216\u8005 daemon \u53ef\u4ee5\u5c06\u5de5\u4f5c\u76ee\u5f55\u6539\u4e3a\u5b8c\u6210\u4efb\u52a1\u65f6\u6240\u5728\u7684\u76ee\u5f55\u6216\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u53ea\u8981\u5305\u542b\u8fd9\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u7cfb\u7edf\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5378\u8f7d\u5373\u53ef\u3002\u5982 cron \u4f1a\u5c06\u81ea\u8eab\u653e\u5728/var/spool/cron \u76ee\u5f55\u4e0b\u3002</li> <li>\u5173\u95ed daemon \u4ece\u5176\u7236\u8fdb\u7a0b\u7ee7\u627f\u800c\u6765\u7684\u6240\u6709\u6253\u5f00\u7740\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\uff08daemon \u53ef\u80fd\u9700\u8981\u4fdd\u6301\u7ee7\u627f\u800c\u6765\u7684\u6587\u4ef6\u63cf\u8ff0\u7684\u6253\u5f00\u72b6\u6001\uff0c\u56e0\u6b64\u8fd9\u4e00\u6b65\u662f\u53ef\u9009\u7684\u6216\u8005\u662f\u53ef\u53d8\u66f4\u7684\u3002\uff09\u4e4b\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u505a\u7684\u539f\u56e0\u6709\u5f88\u591a\u3002\u7531\u4e8e daemon \u5931\u53bb\u4e86\u63a7\u5236\u7ec8\u7aef\u5e76\u4e14\u662f\u5728\u540e\u53f0\u8fd0\u884c\u7684\uff0c\u56e0\u6b64\u8ba9 daemon \u4fdd\u6301\u6587\u4ef6\u63cf\u8ff0\u7b26 0\u30011 \u548c 2 \u7684\u6253\u5f00\u72b6\u6001\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u5b83\u4eec\u6307\u5411\u7684\u5c31\u662f\u63a7\u5236\u7ec8\u7aef\u3002\u6b64\u5916\uff0c\u65e0\u6cd5\u5378\u8f7d\u957f\u65f6\u95f4\u8fd0\u884c\u7684 daemon \u6253\u5f00\u7684\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5173\u95ed\u6240\u6709\u65e0\u7528\u7684\u6253\u5f00\u7740\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u56e0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4e00\u79cd\u6709\u9650\u7684\u8d44\u6e90\u3002</li> <li>\u5728\u5173\u95ed\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26 0\u30011 \u548c 2 \u4e4b\u540e\uff0cdaemon \u901a\u5e38\u4f1a\u6253\u5f00/dev/null \u5e76\u4f7f\u7528 dup2()\uff08\u6216\u7c7b\u4f3c\u7684\u51fd\u6570\uff09\u4f7f\u6240\u6709\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u6307\u5411\u8fd9\u4e2a\u8bbe\u5907\u3002\u4e4b\u6240\u4ee5\u8981\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u4e0b\u9762\u4e24\u4e2a\u539f\u56e0\u3002<ul> <li>\u5b83\u786e\u4fdd\u4e86\u5f53 daemon \u8c03\u7528\u4e86\u5728\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u4e0a\u6267\u884c I/O \u7684\u5e93\u51fd\u6570\u65f6\u4e0d\u4f1a\u51fa\u4e4e\u610f\u6599\u5730\u5931\u8d25\u3002</li> <li>\u5b83\u9632\u6b62\u4e86 daemon \u540e\u9762\u4f7f\u7528\u63cf\u8ff0\u7b26 1 \u6216 2 \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5e93\u51fd\u6570\u4f1a\u5c06\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u5f53\u505a\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u6765\u5199\u5165\u6570\u636e\uff08\u8fdb\u800c\u7834\u574f\u4e86\u539f\u6709\u7684\u6570\u636e\uff09\u3002</li> </ul> </li> </ol> <p>\u5f88\u591a\u6807\u51c6\u7684 daemon \u662f\u901a\u8fc7\u5728\u7cfb\u7edf\u5173\u95ed\u65f6\u6267\u884c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u811a\u672c\u6765\u505c\u6b62\u7684\u3002\u800c\u90a3\u4e9b\u4e0d\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7ec8\u6b62\u7684 daemon \u4f1a\u6536\u5230\u4e00\u4e2a SIGTERM \u4fe1\u53f7\uff0c\u56e0\u4e3a\u5728\u7cfb\u7edf\u5173\u95ed\u7684\u65f6\u5019 init \u8fdb\u7a0b\u4f1a\u5411\u6240\u6709\u5176\u5b50\u8fdb\u7a0b\u53d1\u9001\u8fd9\u4e2a\u4fe1\u53f7\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSIGTERM \u4fe1\u53f7\u4f1a\u7ec8\u6b62\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5982\u679c daemon \u5728\u7ec8\u6b62\u4e4b\u524d\u9700\u8981\u505a\u4e9b\u6e05\u7406\u5de5\u4f5c\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e3a\u8fd9\u4e2a\u4fe1\u53f7\u5efa\u7acb\u4e00\u4e2a\u5904\u7406\u5668\u3002\u8fd9\u4e2a\u5904\u7406\u5668\u5fc5\u987b\u80fd\u00a0\u5feb\u901f\u5730\u5b8c\u6210\u6e05\u7406\u5de5\u4f5c\u3002</p> <p>\u7531\u4e8e daemon \u662f\u957f\u65f6\u95f4\u8fd0\u884c\u7684\uff0c\u56e0\u6b64\u8981\u7279\u522b\u5c0f\u5fc3\u6f5c\u5728\u7684\u00a0\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u00a0\u548c\u00a0\u6587\u4ef6\u63cf\u8ff0\u7b26\u6cc4\u9732\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u5173\u95ed\u6240\u6709\u6253\u5f00\u7740\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff09\u3002</p> <p>\u56e0\u4e3a daemon \u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528\u6807\u51c6\u8f93\u51fa\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u00a0<code>syslog</code>\u00a0\u8fdb\u884c\u65e5\u5fd7\u7684\u8bb0\u5f55\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#process-scheduling","title":"Process Scheduling","text":"<p>\u8fdb\u7a0b\u8c03\u5ea6\u57fa\u672c\u662f\u5185\u6838\u7684\u4e8b\u60c5\u3002Linux \u9ed8\u8ba4\u4f7f\u7528\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff08Completely Fair Scheduler\uff0cCFS\uff09\u3002\u5f53\u9047\u5230 I/O \u963b\u585e\uff0c\u6216\u8005\u7528\u5b8c\u4e86 time slice \u4f1a\u6682\u65f6\u8c03\u5ea6\u5230\u5176\u4ed6\u8fdb\u7a0b\u3002</p> <pre><code>#include &lt;sched.h&gt;\nint sched_yield(void);   // always return 0\n</code></pre> <p>\u7528\u6237\u4e3a\u6570\u4e0d\u591a\u80fd\u505a\u7684\u4e8b\u60c5\u662f\u4e3b\u52a8\u8ba9\u51fa CPU\uff0c\u8c03\u5ea6\u5230\u5176\u4ed6\u8fdb\u7a0b\u3002\u4e0d\u8fc7\u5b83\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4f7f\u7528\u573a\u666f\u3002\u5728\u534f\u7a0b\uff08Coroutine\uff09\u7f16\u7a0b\u4e2d\uff0c\u5f53\u67d0\u4e2a\u534f\u7a0b\u6267\u884c\u5b8c\u4e00\u5b9a\u7684\u4efb\u52a1\u540e\uff0c\u53ef\u4ee5\u8c03\u7528 sched_yield \u51fd\u6570\u4e3b\u52a8\u8ba9\u51fa CPU\uff0c\u4ee5\u4fbf\u5176\u4ed6\u534f\u7a0b\u80fd\u591f\u6709\u66f4\u591a\u7684\u673a\u4f1a\u83b7\u5f97 CPU \u65f6\u95f4\uff0c\u4ece\u800c\u63d0\u9ad8\u534f\u7a0b\u7684\u5e76\u53d1\u6027\u80fd\u3002</p> <pre><code>#include &lt;unistd.h&gt;\n#include &lt;sys/time.h&gt;\n#include &lt;sys/resource.h&gt;\n\nint nice(int inc);   // \u8fdb\u7a0b\u7684 nice value += inc\n\nint getpriority (int which, int who);\nint setpriority (int which, int who, int prio);\n</code></pre> <p>\u7528\u6237\u8fd8\u53ef\u4ee5\u6307\u5b9a process \u7684 priority\uff08\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u4e5f\u88ab\u53eb\u505a nice value\uff09\u3002\u8fd9\u4f1a\u7ed9 Kernel \u8c03\u5ea6\u63d0\u4f9b\u5efa\u8bae\u3002nice value \u7684\u53d6\u503c\u8303\u56f4\u662f -20\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09\u5230 +19\uff08\u6700\u4f4e\u4f18\u5148\u7ea7\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a 0\u3002</p> <ul> <li><code>nice</code>\u00a0\u7684\u8fd4\u56de\u503c\u662f\u65b0\u7684 nice value\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fdb\u7a0b\u53ea\u80fd\u589e\u52a0 nice\uff08\u51cf\u5c0f priority\uff09\uff0c\u9664\u975e\u662f root \u6743\u9650\u7684\u7a0b\u5e8f\u3002</li> <li><code>setpriority</code>\u00a0\u63d0\u4f9b\u6210\u7cbe\u7ec6\u7684\u63a7\u5236\uff0c<code>which</code>\u00a0\u53ef\u4ee5\u662f\u00a0<code>PRIO_PROCESS</code>,\u00a0<code>PRIO_PGRP</code>, or\u00a0<code>PRIO_USER</code>\uff0c\u5bf9\u5e94\u7684\u00a0<code>who</code>\u00a0\u662f process ID<code>,</code>process group ID, or user ID\uff0c0 \u4ee3\u8868\u81ea\u5df1\u3002</li> </ul> <p>\u8fd8\u6709\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u8c03\u5ea6\uff0c\u4f8b\u5982 CPU \u6838\u5fc3\u4e4b\u95f4\u7684\u8c03\u5ea6\u3001IO \u4f18\u5148\u7ea7\u7684\u8c03\u5ea6\u3001\u4f7f\u7528\u5b9e\u65f6\u8c03\u5ea6\u5668\u7684\u8c03\u5ea6\u3002\u8fd9\u4e9b\u7cbe\u7ec6\u7684\u63a7\u5236\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4ecb\u7ecd\u4e86\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#resource-limit","title":"Resource Limit","text":"<p>\u8fdb\u7a0b\u80fd\u4f7f\u7528\u7684\u8d44\u6e90\u6570\u91cf\u662f\u6709\u9650\u5236\u7684\uff0c\u4f8b\u5982\u6253\u5f00\u7684\u6587\u4ef6\u6570\u91cf\u3002\u62e5\u6709\u00a0<code>CAP_SYS_RESOURCE</code>\u00a0\u6743\u9650\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8c03\u9ad8\u4e0a\u9650\uff0c\u5426\u5219\u53ea\u80fd\u964d\u4f4e\u4e0a\u9650\u3002\u4e0a\u9650\u6709 hard limit \u548c soft limit\u3002</p> <pre><code>#include &lt;sys/time.h&gt;\n#include &lt;sys/resource.h&gt;\nstruct rlimit {\n    rlim_t rlim_cur; /* soft limit */\n    rlim_t rlim_max; /* hard limit */\n};\n\nint getrlimit (int resource, struct rlimit *rlim);\nint setrlimit (int resource, const struct rlimit *rlim);\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#inter-process-communication","title":"Inter Process Communication","text":"<p>Pipe\u662f\u4e00\u4e2a\u5b57\u8282\u6d41\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Process/#proc","title":"/proc \u6587\u4ef6\u7cfb\u7edf","text":"<p>\u4e3a\u4e86\u63d0\u4f9b\u8bbf\u95ee\u5185\u6838\u4fe1\u606f\u66f4\u52a0\u5bb9\u6613\u7684\u65b9\u6cd5\uff0c\u8bb8\u591a\u73b0\u4ee3 UNIX \u5b9e\u73b0\u63d0\u4f9b\u4e86/proc \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5728/proc \u76ee\u5f55\u4e0b\uff0c\u5305\u542b\u8bb8\u591a\u6587\u4ef6\uff0c\u66b4\u9732\u4e86\u5404\u79cd\u5185\u6838\u4fe1\u606f\uff0c\u5e76\u5141\u8bb8\u8fdb\u7a0b\u65b9\u4fbf\u5730\u4f7f\u7528\u666e\u901a\u6587\u4ef6 I/O \u7cfb\u7edf\u8c03\u7528\u6765\u8bfb\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u4fee\u6539\u67d0\u4e9b\u4fe1\u606f\u3002/proc \u6587\u4ef6\u7cfb\u7edf\u88ab\u79f0\u4e3a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u56e0\u4e3a\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u5e76\u6ca1\u6709\u5b58\u653e\u5728\u78c1\u76d8\u4e2d\u3002\u76f8\u53cd\u5185\u6838\u5728\u8fdb\u7a0b\u8bbf\u95ee\u5b83\u4eec\u7684\u65f6\u5019\u5b9e\u65f6\u521b\u5efa\u8fd9\u4e9b\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u3002</p> <code>/proc/PID/*</code> \u8fdb\u7a0b\u4fe1\u606f cmdline \u547d\u4ee4\u884c\u53c2\u6570\uff0c<code>\\0</code>\u00a0\u5206\u9694 cwd \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7b26\u53f7\u94fe\u63a5 environ \u73af\u5883\u5217\u8868\uff0c\u683c\u5f0f\u4e3a NAME=value\uff0c<code>\\0</code>\u00a0\u5206\u9694 exe \u88ab\u6267\u884c\u6587\u4ef6\u7684\u7b26\u53f7\u94fe\u63a5 fd \u76ee\u5f55\uff0c\u5305\u542b\u8fdb\u7a0b\u6240\u6709\u6253\u5f00\u6587\u4ef6\u7684\u7b26\u53f7\u94fe\u63a5 maps \u5185\u5b58\u6620\u5c04 mem \u8fdb\u7a0b\u865a\u62df\u5185\u5b58\uff08\u6267\u884c I/O \u524d\u5fc5\u987b lseek() \u5230\u5408\u6cd5\u7684\u504f\u79fb\u4f4d\u7f6e\uff09 mounts \u8fdb\u7a0b\u7684\u6302\u8f7d\u70b9 root root \u76ee\u5f55\u7684\u7b26\u53f7\u94fe\u63a5 status \u5404\u79cd\u4fe1\u606f\uff08\u5982\u8fdb\u7a0b ID\u3001\u51ed\u8bc1\u3001\u5185\u5b58\u4f7f\u7528\u3001\u4fe1\u53f7\u7b49\uff09 task /proc/* \u5404\u79cd\u7cfb\u7edf\u4fe1\u606f /proc/net \u7f51\u7edc\u548c sockets \u7684\u72b6\u6001\u4fe1\u606f /proc/sys/fs \u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u8bbe\u7f6e /proc/sys/kernel \u5404\u79cd\u901a\u5e38\u7684\u5185\u6838\u8bbe\u7f6e /proc/sys/net \u7f51\u7edc\u548c sockets \u8bbe\u7f6e /proc/sys/vm \u5185\u5b58\u7ba1\u7406\u8bbe\u7f6e /proc/sysvipc System V IPC \u5bf9\u8c61\u76f8\u5173\u7684\u4fe1\u606f"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Signal/","title":"Signal","text":"<p>\u4fe1\u53f7\uff08Signal\uff09\u662f\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u663e\u7136\uff0c\u4f60\u8981\u4e3a\u4f60\u7684\u591a\u8fdb\u7a0b\u5e94\u7528\u505a\u8fdb\u7a0b\u901a\u4fe1\u4f60\u80af\u5b9a\u4e0d\u4f1a\u4f7f\u7528\u4fe1\u53f7\u6765\u505a\u7684\u3002\u53d1\u5f80\u8fdb\u7a0b\u7684\u8bf8\u591a\u4fe1\u53f7\uff0c\u901a\u5e38\u90fd\u662f\u6e90\u4e8e\u5185\u6838\u3002</p> <p>\u4fe1\u53f7\u4e0e\u786c\u4ef6\u4e2d\u65ad\u7684\u76f8\u4f3c\u4e4b\u5904\u5728\u4e8e\u6253\u65ad\u4e86\u7a0b\u5e8f\u6267\u884c\u7684\u6b63\u5e38\u6d41\u7a0b\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u9884\u6d4b\u4fe1\u53f7\u5230\u8fbe\u7684\u7cbe\u786e\u65f6\u95f4\u3002\u6240\u4ee5\u4fe1\u53f7\u53c8\u88ab\u79f0\u4e3a\u8f6f\u4e2d\u65ad\u3002</p> <p>\u7279\u522b\u4e3a\u6211\u4eec\u719f\u6089\u7684\u4fe1\u53f7\u662fSIGINT\uff0c\u5f53\u7528\u6237\u952e\u5165\u7ec8\u7aef\u4e2d\u65ad\u5b57\u7b26\uff08\u901a\u5e38\u4e3a Control-C\uff09\u65f6\uff0c\u7ec8\u7aef\u9a71\u52a8\u7a0b\u5e8f\u5c06\u53d1\u9001\u8be5\u4fe1\u53f7\u7ed9\u524d\u53f0\u8fdb\u7a0b\u7ec4\u3002\u8be5\u4fe1\u53f7\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\u7ec8\u6b62\u8fdb\u7a0b\u3002\u8fd8\u6709SIGKILL \uff0c\u6b64\u4fe1\u53f7\u4e3a\u201c\u5fc5\u6740\uff08sure kill\uff09\u201d\u4fe1\u53f7\uff0c\u5904\u7406\u5668\u7a0b\u5e8f\u65e0\u6cd5\u5c06\u5176\u963b\u585e\u3001\u5ffd\u7565\u6216\u8005\u6355\u83b7\uff0c\u603b\u80fd\u7ec8\u6b62\u8fdb\u7a0b\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Signal/#signal-handling","title":"Signal Handling","text":"<p>Linux\u63d0\u4f9b\u4e86<code>sigaction()</code>\u7cfb\u7edf\u8c03\u7528\uff0c\u5141\u8bb8\u6211\u4eec\u4fee\u6539\u67d0\u4e9bSignal\u5904\u7406\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002</p> <p>\u4e00\u822c\u800c\u8a00\uff0c\u5c06\u4fe1\u53f7\u5904\u7406\u5668\u51fd\u6570\u8bbe\u8ba1\u5f97\u8d8a\u7b80\u5355\u8d8a\u597d\u3002\u5176\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u5c31\u5728\u4e8e\uff0c\u8fd9\u5c06\u964d\u4f4e\u5f15\u53d1\u7ade\u4e89\u6761\u4ef6\u7684\u98ce\u9669\u3002\u4e0b\u9762\u662f\u9488\u5bf9\u4fe1\u53f7\u5904\u7406\u5668\u51fd\u6570\u7684\u4e24\u79cd\u5e38\u89c1\u8bbe\u8ba1\u3002\u56de\u987e\u4e00\u4e0bOS\u8bfe\u4e2d\uff0c\u5185\u6838\u662f\u5982\u4f55\u5904\u7406\u4e2d\u65ad\u7684\uff1f\u4ed6\u8981\u4fdd\u5b58\u7528\u6237\u72b6\u6001\u5230Stack\u4e2d\uff0c\u7136\u540e\u5728\u548c\u7528\u6237\u6001\u5b8c\u5168\u5206\u79bb\u7684\u5185\u6838\u6001\u4e2d\u8fdb\u884c\u5904\u7406\u3002\u4f46\u662f\u73b0\u5728\u5728\u5904\u7406Signal\u7684\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u5728\u7528\u6237\u6001\uff0c\u6570\u636e\u5e76\u6ca1\u6709\u88ab\u9694\u79bb\u2014\u2014\u96be\u9053\u56e0\u4e3a\u8981\u5904\u7406\u4fe1\u53f7\uff0c\u6211\u5c31\u8981\u591a\u8fd9\u4e48\u591a\u5fc3\u91cc\u8d1f\u62c5\u5417\u2014\u2014\u800c\u4e14\u4fe1\u53f7\u662f\u968f\u65f6\u51fa\u73b0\u7684\u3002</p> <p>\u5728\u4fe1\u53f7\u5904\u7406\u5668\u51fd\u6570\u4e2d\uff0c\u5e76\u975e\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u4ee5\u53ca\u5e93\u51fd\u6570\u5747\u53ef\u4e88\u4ee5\u5b89\u5168\u8c03\u7528\u3002</p> <p>\u66f4\u65b0\u5168\u5c40\u53d8\u91cf\u6216\u9759\u6001\u6570\u636e\u7ed3\u6784\u7684\u51fd\u6570\u53ef\u80fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\u3002\uff08\u53ea\u7528\u5230\u672c\u5730\u53d8\u91cf\u7684\u51fd\u6570\u80af\u5b9a\u662f\u53ef\u91cd\u5165\u7684\u3002\uff09\u5982\u679c\u5bf9\u51fd\u6570\u7684\u4e24\u4e2a\u8c03\u7528\uff08\u4f8b\u5982\uff1a\u5206\u522b\u7531\u4e24\u6761\u6267\u884c\u7ebf\u7a0b\u53d1\u8d77\uff09\u540c\u65f6\u8bd5\u56fe\u66f4\u65b0\u540c\u4e00\u5168\u5c40\u53d8\u91cf\u6216\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u4e8c\u8005\u5f88\u53ef\u80fd\u4f1a\u76f8\u4e92\u5e72\u6270\u5e76\u4ea7\u751f\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\u3002\u5728\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u53ea\u8c03\u7528\u53ef\u91cd\u5165\u51fd\u6570\u3002</p> <p><code>printf</code>\u662f\u4e00\u4e2a\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u7684\u5178\u578b\u4f8b\u5b50\uff0c\u4ed6\u4f7f\u7528\u4e86\u9759\u6001\u6570\u636e\u7ed3\u6784\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5728\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u5e94\u8be5\u4f7f\u7528<code>printf</code>\u3002\u5982\u679c\u4e3b\u7a0b\u5e8f\u548c\u5904\u7406\u51fd\u6570\u90fd\u7528\u4e86\uff0c\u5c31\u6709\u53d1\u751f\u51b2\u7a81\u7684\u53ef\u80fd\u3002</p> <p>\u6240\u6709\u7684\u4fe1\u53f7\u90fd\u4f1a\u901a\u8fc7\u540c\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u8fdb\u7a0b\u80fd\u591f\u4f7f\u7528 <code>sigpending()</code>\u7cfb\u7edf\u8c03\u7528\u6765\u83b7\u53d6\u7b49\u5f85\u4fe1\u53f7\u96c6\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u65e0\u987b\u4e3a\u6211\u4eec\u7684\u7a0b\u5e8f\u7f16\u5199\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\u5982\u679c\u5e0c\u671b\u7a0b\u5e8f\u4f18\u96c5\u9000\u51fa\uff0c\u53ef\u4ee5\u7f16\u5199SIGINT\u7684\u5904\u7406\u51fd\u6570\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Signal/#advanced","title":"Advanced","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Signal/#programming-in-other-languages","title":"Programming in other languages","text":"<p>\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003CLI\u4e2d\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Socket/","title":"Socket","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Socket/#socket_1","title":"Socket\u57fa\u7840","text":"<p>\u5728Unix/Linux\u7cfb\u7edf\u4e2d\uff0cSocket \u4e5f\u88ab\u89c6\u4e3a\u4e00\u79cd\u6587\u4ef6\u3002\u6240\u4ee5\u57fa\u672c\u7684\u7f16\u7a0b\u65b9\u6cd5\u4e5f\u662f\uff1a\u6253\u5f00-\u8bfb\u5199-\u5173\u95ed\u3002</p> <p>\u4f7f\u7528<code>socket()</code>\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Socket\uff0c\u7c7b\u4f3c\u4e8e\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u4f8b\u5982\uff1a</p> <pre><code>// int socket(int domain, int type, int protocol);\nint socket_fd_ = socket(AF_INET, SOCK_DGRAM, 0);\n</code></pre> <p>-\u00a0<code>AF_INET</code>\uff1a\u4f7f\u7528IPv4\u534f\u8bae - <code>SOCK_DGRAM</code>\uff1a\u4f7f\u7528\u6570\u636e\u62a5     - <code>SOCK_STREAM</code>\uff1a\u4f7f\u7528\u6570\u636e\u6d41 - <code>0</code>\uff1a\u4f7f\u7528\u9ed8\u8ba4\u534f\u8bae\uff0c\u5bf9\u4e8e\u6570\u636e\u62a5\u6765\u8bf4\u662fUDP\uff0c\u5bf9\u4e8e\u6570\u636e\u6d41\u6765\u8bf4\u662fTCP\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u5199\u5462\uff1f\u8fd8\u662f\u4ee5UDP\u534f\u8bae\u4e3a\u4f8b\u3002\u6839\u636e\u6211\u4eec\u5bf9UDP\u534f\u8bae\u7684\u8ba4\u8bc6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6307\u5b9a\u53d1\u9001\u7684IP\u548cPORT\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u6570\u636e\u5305\u4e86\uff0c\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\u3002\u8c03\u7528<code>sendto</code>\u65b9\u6cd5\u3002</p> <pre><code>bool sendTo(const std::string&amp; data, const std::string&amp; ip, uint16_t port) {\n    struct sockaddr_in dest_addr;\n    dest_addr.sin_family = AF_INET;\n    dest_addr.sin_port = htons(port);\n    dest_addr.sin_addr.s_addr = inet_addr(ip.c_str());\n\n    ssize_t sent = sendto(socket_fd_, data.c_str(), data.length(), 0,\n                         (struct sockaddr*)&amp;dest_addr, sizeof(dest_addr));\n    return sent &gt; 0;\n}\n</code></pre> <p>\u90a3\u4e48\u5982\u4f55\u8bfb\u5462\uff1f\u5bf9\u4e8eUDP\u534f\u8bae\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u672c\u673a\u7684\u7aef\u53e3\uff08<code>bind</code>\uff09\uff0c\u7136\u540e\u8c03\u7528<code>recvfrom</code>\u5373\u53ef\u3002</p> <p>\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u8bfb\u5199\u65b9\u6cd5\u603b\u7ed3\u5982\u4e0b\uff1a</p> Reading Writing Description <code>read</code> <code>write</code> \u5728\u4e00\u4e2a\u8fde\u7eed\u7684buffer\u4e0a\u8fdb\u884c\u8bfb/\u5199 <code>readv</code> <code>writev</code> \u5728\u591a\u4e2abuffer\u4e0a\u8fdb\u884c\u8bfb/\u5199 <code>recv</code> <code>send</code> \u76f8\u6bd4\u4e8e <code>read</code> &amp; <code>write</code>\uff0c\u6709\u66f4\u591a\u7684\u63a7\u5236 flag <code>recvfrom</code> <code>sendto</code> \u540c\u65f6\u83b7\u53d6/\u6307\u5b9a\u8fdc\u7a0b\u5730\u5740\u7684\u8bfb/\u5199\uff08\u9488\u5bf9\u57fa\u4e8e\u5305\u7684\u534f\u8bae\uff09 <code>recvmsg</code> <code>sendmsg</code> \u76f8\u6bd4\u4e8e<code>readv</code>/<code>writev</code> \uff0c\u6709\u66f4\u591a\u7684\u63a7\u5236 flag <code>recvmmsg</code> <code>sendmmsg</code> \u5728\u4e00\u4e2asyscall\u5b8c\u6210\u591a\u6b21 <code>recvmsg</code>/<code>sendmmsg</code> <p>\u5bf9\u4e8e\u9700\u8981\u5efa\u7acb\u8fde\u63a5\u7684\u534f\u8bae\uff08\u5982TCP\uff09\uff0c\u5728\u8bfb\u5199\u4e4b\u524d\u8fd8\u9700\u8981\u66f4\u591a\u7684\u51c6\u5907\u5de5\u4f5c\u3002\u4e00\u822c\u7684\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002\u670d\u52a1\u7aef\u521b\u5efasocket\uff0c\u7ed1\u5b9a\u7aef\u53e3\uff08<code>bind</code>\uff09\u7136\u540e\u5f00\u542f\u76d1\u542c\uff08<code>listen</code>\uff09\uff0c\u4e0d\u65ad\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\uff08<code>connect</code>\uff09\u3002\u53c2\u8003\u94fe\u63a5\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\u3002</p> <p></p> <p>\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u7684\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003manpage\u3002\u6709\u4e0b\u9762\u4e00\u4e9b\u503c\u5f97\u4e00\u63d0\u7684\u70b9\uff1a</p> <ul> <li><code>bind()</code>\u8c03\u7528\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f<code>const struct sockaddr *addr</code>\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5177\u4f53\u7684\u5730\u5740\u7ec6\u8282\u7531\u534f\u8bae\u786e\u5b9a\uff0c\u6240\u4ee5\u5bf9\u4e8eTCP/UDP\u534f\u8bae\u6765\u8bf4\uff0c\u90fd\u662f\u5b9e\u9645\u4f20\u5165<code>sockaddr_in</code>\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\u7b2c\u4e09\u4e2a\u53c2\u6570\u8981\u4f20\u9012<code>len</code>\uff08\u6570\u636e\u662f\u80af\u5b9a\u8981\u590d\u5236\u5230\u5185\u6838\u6001\u64cd\u4f5c\u7684\uff09\u3002<code>accept</code>\u540c\u7406\u3002</li> <li><code>read</code>&amp;<code>write</code>\u4f1a\u8fd4\u56de\u5b9e\u9645\u8bfb\u5199\u7684\u5b57\u8282\u6570\u3002\u8fd9\u5728\u7f51\u7edc\u7f16\u7a0b\u7684\u65f6\u5019\u5c24\u4e3a\u91cd\u8981\u3002\u5373\u4fbf\u6211\u4eec\u77e5\u9053\u5ba2\u6237\u7aef\u4e00\u6b21\u53d1\u9001\u4e8610\u5b57\u8282\u7684\u6570\u636e\uff0c\u4f46\u662f\u4e00\u6b21<code>read</code>\u53ef\u80fd\u4e5f\u4f1a\u53ea\u6536\u52304\u5b57\u8282\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u5269\u4e0b\u7684\u6570\u636e\u8fd8\u6ca1\u6709\u5230\u8fbe\u3002<code>write</code>\u5219\u662f\u56e0\u4e3a\u5185\u6838\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u6709\u9650\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Socket/#io-multiplexing","title":"I/O Multiplexing","text":"<p>\u5728\u4e0a\u9762\u4ecb\u7ecd\u7684Socket\u57fa\u7840\u4e2d\uff0c<code>read</code>/<code>write</code>/<code>accept</code>\u5728\u6ca1\u6709\u5c31\u7eea\u7684\u65f6\u5019\u90fd\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u64cd\u4f5c\u5b8c\u6210\u6216\u51fa\u9519\u3002\u4f46\u662fLinux\u4e5f\u652f\u6301\u975e\u963b\u585e\uff08non-blocking\uff09\u6a21\u5f0f\u3002\u5982\u679c\u5f00\u542f\u4e86\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u65e0\u8bba\u64cd\u4f5c\u5b8c\u6210\u4e0e\u5426\u90fd\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u7eea\u4f1a\u8fd4\u56de<code>EAGAIN</code>\u63d0\u9192\u7528\u6237\u6001\u7a0d\u540e\u91cd\u8bd5\u3002</p> <p>\u663e\u7136\uff0c\u5149\u6709\u975e\u963b\u585e\u6a21\u5f0f\u5e76\u4e0d\u80fd\u63d0\u9ad8\u6548\u7387\u2014\u2014\u7528\u6237\u603b\u4e0d\u80fd\u5728\u8fd4\u56deEAGAIN\u4e4b\u540esleep\u4e00\u4f1a\u513f\uff0c\u6216\u8005\u662f\u76f4\u63a5\u91cd\u8bd5\u5427\uff0c\u5173\u952e\u662f\u8981\u77e5\u9053\u64cd\u4f5c\u4f55\u65f6\u80fd\u5c31\u7eea\u3002\u4e3a\u6b64\uff0cLinux\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u7cfb\u7edf\u8c03\u7528\uff08\u96c6\uff09\uff1a</p> <ul> <li><code>select</code> \u548c <code>poll</code>: \u8fd9\u4e24\u79cd\u6280\u672f\u5141\u8bb8\u7a0b\u5e8f\u76d1\u89c6\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u67e5\u770b\u54ea\u4e2a\u6216\u54ea\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u51c6\u5907\u597d\u8fdb\u884c\u975e\u963b\u585eI/O\u64cd\u4f5c\u3002\u8fd9\u4f7f\u5f97\u5355\u4e2a\u7ebf\u7a0b\u80fd\u591f\u6709\u6548\u5730\u7ba1\u7406\u591a\u4e2aI/O\u6d41\u3002<code>select</code>\u8f83\u8001\uff0c\u667a\u80fd\u540c\u65f6\u76d1\u542c\u8f83\u5c11\u7684fd\u3002</li> <li><code>epoll</code>: \u662f\u4e00\u79cd\u66f4\u9ad8\u6548\u7684I/O\u4e8b\u4ef6\u901a\u77e5\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u5927\u91cf\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\u3002\u4e0eselect\u548cpoll\u76f8\u6bd4\uff0cepoll\u901a\u8fc7\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u5f0f\u7ba1\u7406\u5927\u91cf\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u53d8\u5316\uff0c\u51cf\u5c11\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u5f00\u9500\u3002</li> </ul> <p>[!NOTE] <code>select</code>\u548c <code>poll</code> \u662f\u7b26\u5408 POSIX \u6807\u51c6\u7684\uff0c\u662f\u6807\u51c6\u7684UNIX\u63a5\u53e3\u7684\u4e00\u90e8\u5206\u3002<code>epoll</code>\u662fLinux\u72ec\u6709\u7684\u3002\u663e\u7136\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u662f\u963b\u585e\u7684\u3002 \u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u662f\u5f88\u591a\u8bed\u8a00\u5b9e\u73b0\u5f02\u6b65IO\u7684\u57fa\u7840\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5f02\u6b65\u7f16\u7a0b\u7684\u5173\u952e\u662f\u5728IO\u53d1\u751f\u963b\u585e\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u5ea6\u5230\u5176\u4ed6\u4efb\u52a1\u6267\u884c\uff0c\u800c\u5728IO\u5b8c\u6210\u65f6\u7ee7\u7eed\u6267\u884c\u8be5\u4efb\u52a1\u3002\u5f02\u6b65\u6267\u884c\u6846\u67b6\u7684\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u601d\u8def\u5c31\u662f\uff0cIO\u64cd\u4f5c\u65e0\u6cd5\u7acb\u5373\u5b8c\u6210\u7684\u4efb\u52a1\u90fd\u653e\u8fdb<code>poll</code>\u7b49\u5f85\uff0c\u6267\u884c<code>poll</code>\u5b8c\u6210\u7684\u4efb\u52a1\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Socket/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>4.20 \u6ca1\u6709 accept\uff0c\u80fd\u5efa\u7acb TCP \u8fde\u63a5\u5417\uff1f | \u5c0f\u6797coding</li> <li>4.19 \u670d\u52a1\u7aef\u6ca1\u6709 listen\uff0c\u5ba2\u6237\u7aef\u53d1\u8d77\u8fde\u63a5\u5efa\u7acb\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f | \u5c0f\u6797coding</li> <li>05. The Event Loop &amp; Nonblocking IO | Build Your Own Redis with C/C++</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Time/","title":"Time","text":""},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Time/#introduction","title":"Introduction","text":"<p>\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5173\u6ce8\u4e24\u79cd\u65f6\u95f4\u7c7b\u578b\uff1a</p> <ul> <li>\u771f\u5b9e\u65f6\u95f4\uff1a\u53ef\u80fd\u9700\u8981\u67d0\u4e2a\u65f6\u95f4\u70b9\u6216\u65f6\u95f4\u95f4\u9694\u3002</li> <li>\u8fdb\u7a0b\u65f6\u95f4\uff1a\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u3002</li> </ul> <p>Linux \u63d0\u4f9b\u4e86\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u5206\u522b\u662f\u00a0<code>time</code>\u00a0\u548c\u00a0<code>gettimeofday</code>\uff0c\u524d\u8005\u66f4\u7b80\u5355\uff0c\u540e\u8005\u66f4\u7cbe\u786e\u3002<code>time</code>\u00a0\u8fd4\u56de\u7684\u662f\u81ea Epoch \u4ee5\u6765\u7684\u79d2\u6570\uff0c<code>tv_sec</code>\u00a0\u4e5f\u662f\u3002<code>tv_usec</code>\u00a0\u8fd4\u56de\u4e86\u5fae\u79d2\uff0c\u5c3d\u7ba1\u5b83\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u67b6\u6784\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5bf9\u5e94\u7684\u8bbe\u7f6e\u65f6\u95f4\u7684\u7cfb\u7edf\u8c03\u7528\u662f<code>stime</code>\u548c<code>settimeofday</code>\uff0c\u4e0d\u8fc7\u4e00\u822c\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u610f\u8fd9\u4e2a\u3002</p> <pre><code>#include &lt;sys/time.h&gt;\n#include &lt;time.h&gt;\n#include &lt;stdio.h&gt;\n\nint main() {\n  time_t t = time(NULL);\n  struct timeval tv;\n  gettimeofday(&amp;tv, NULL);\n\n  printf(\"%ld\\n\", t);\n  printf(\"%ld, %ld\\n\", tv.tv_sec, tv.tv_usec);\n}\n</code></pre> <p>\u9700\u8981\u5c06\u65f6\u95f4\u8f6c\u5316\u6210\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u5e93\u51fd\u6570\u00a0<code>ctime</code>/<code>asctime</code>\uff0c\u5b83\u4eec\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6307\u9488\uff08\u800c\u4e0d\u662f\u7531\u7528\u6237\u4f20\u5165\u4e00\u4e2a\u6307\u9488\u5199\u5165\uff09\uff0c\u4e8b\u5b9e\u4e0a\u5e93\u9759\u6001\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\uff0c\u6240\u4ee5\u53cd\u590d\u8c03\u7528\u4f7f\u7528\u7684\u662f\u540c\u4e00\u5757\u5185\u5b58\u3002\u8fd9\u91cc\u4e0d\u60f3\u4ed4\u7ec6\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u90fd\u662f\u5e93\u51fd\u6570\u3002</p> <p>\u60f3\u8981\u83b7\u5f97\u8fdb\u7a0b\u65f6\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528\u00a0<code>times</code>\u00a0\u7cfb\u7edf\u8c03\u7528\u3002</p> <p>\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0cLinux \u63d0\u4f9b\u4e86\u4e09\u79cd\u65b9\u5f0f\uff0c\u4e00\u4e2a\u662f\u7a0d\u590d\u6742\u7684\u00a0<code>setitimer</code>\uff0c\u53e6\u4e00\u4e2a\u662f\u7b80\u5355\u7684\u00a0<code>alarm</code>\uff0c\u8fd8\u6709 Linux \u7279\u6709\u7684\u00a0<code>timer_create</code>\u3002\u5b9a\u65f6\u5668\u5728\u5230\u65f6\u540e\u7684\u901a\u77e5\u4f7f\u7528 signal \u5b8c\u6210\uff0c\u6240\u4ee5\u9700\u8981\u7ed3\u5408\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u6765\u5b8c\u6210\u5b9a\u65f6\u903b\u8f91\u3002\u6839\u636e\u4e00\u5207\u7686\u6587\u4ef6\u7684\u54f2\u5b66\uff0cLinux \u8fd8\u521b\u9020\u4e86\u00a0<code>timerfd</code>\uff0c\u53ef\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u8bfb\u53d6\u5176\u6240\u521b\u5efa\u5b9a\u65f6\u5668\u7684\u5230\u671f\u901a\u77e5\u3002\u56e0\u4e3a\u53ef\u4ee5\u4f7f\u7528 select()\u3001poll() \u548c epoll()\uff08\u5c06\u5728\u7b2c 63 \u7ae0\u8fdb\u884c\u8ba8\u8bba\uff09\u5c06\u8fd9\u79cd\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f1a\u540c\u5176\u4ed6\u63cf\u8ff0\u7b26\u4e00\u540c\u8fdb\u884c\u76d1\u63a7\uff0c\u6240\u4ee5\u975e\u5e38\u5b9e\u7528\u3002\u4e0b\u9762\u662f timer_create \u7684\u4f8b\u5b50\uff0c5 \u79d2\u7684\u65f6\u5019\u53d1\u9001 SIGALARM \u4fe1\u53f7\uff0c\u4e4b\u540e\u6bcf\u9694 1 \u79d2\u53d1\u9001 SIGALARM \u4fe1\u53f7\uff0c\u7701\u7565\u4e86\u9519\u8bef\u5904\u7406\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002</p> <pre><code>#include &lt;signal.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main(int argc, char *argv[]) {\n  timer_t timerid;\n  struct sigevent sev;\n  struct itimerspec its;\n\n  /* SIG Handler Set*/\n  /* Create the timer */\n  sev.sigev_notify = SIGEV_SIGNAL;\n  sev.sigev_signo = SIGRTMIN;\n  sev.sigev_value.sival_ptr = &amp;timerid;\n  timer_create(CLOCK_REALTIME, &amp;sev, &amp;timerid);\n\n  /* Configure the timer to expire after \"freq_nanosecs\" */\n  its.it_value.tv_sec = 5;\n  its.it_value.tv_nsec = 0;\n  its.it_interval.tv_sec = 1;\n  its.it_interval.tv_nsec = 0;\n  /* Start the timer */\n  timer_settime(timerid, 0, &amp;its, NULL);\n\n  /* Sleep for some time */\n  // sleep(atoi(argv[1]));\n  while (1)\n    ;\n}\n</code></pre> <p>\u9700\u8981\u4f11\u7720\uff0cLinux \u4e5f\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u4e2a\u662f\u4f4e\u7cbe\u5ea6\u7684\u00a0<code>sleep</code>\uff0c\u4e00\u4e2a\u662f\u9ad8\u7cbe\u5ea6\u7684\u00a0<code>nanosleep</code>\u3002</p>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Time/#practice","title":"Practice","text":"<p>Linux/Unix \u7cfb\u7edf\u5185\u90e8\u5bf9\u65f6\u95f4\u7684\u8868\u793a\u65b9\u5f0f\u5747\u662f\u4ee5\u81ea Epoch \u4ee5\u6765\u7684\u79d2\u6570\u6765\u5ea6\u91cf\u7684\uff08\u4e00\u822c\u53eb\u505atimestamp\uff09\uff0cEpoch \u4ea6\u5373\u901a\u7528\u534f\u8c03\u65f6\u95f4\uff08UTC\uff0c\u4ee5\u524d\u4e5f\u79f0\u4e3a\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\uff0c\u6216 GMT\uff09\u7684 1970 \u5e74 1\u6708 1 \u65e5\u65e9\u6668\u96f6\u70b9\u3002</p> <p>\u8981\u5c06 timestamp \u8f6c\u5316\u6210\u5177\u4f53\u7684\u65f6\u95f4\uff08\u59822024\u5e743\u670825\u65e522\uff1a29\uff09\uff0c\u6211\u4eec\u8981\u8003\u8651\u65f6\u533a\u95ee\u9898\u3002\u4e00\u822c\u7684\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u8f6c\u5316\u51fd\u6570\u3002\u53c2\u8003</p> <ul> <li>Python - Time</li> <li>Rust - Time</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/Time/#sleep","title":"Sleep","text":"<p>sleep\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u597d\u4ecb\u7ecd\u7684\u3002\u4e0d\u8fc7\u5012\u662f\u6709\u4e00\u4e9b\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ul> <li>Python\u7684\u591a\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528sleep\uff0c\u4e00\u4e2a\u7ebf\u7a0bsleep\u4e0d\u4f1a\u963b\u585e\u5176\u4ed6\u7ebf\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4python\u7684sleep\u5b9e\u73b0\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u7684sleep\u3002</li> <li>Rust\u5728\u7f16\u5199\u5f02\u6b65\u7a0b\u5e8f\u7684\u65f6\u5019\u6ce8\u610f\u4f7f\u7528\u5f02\u6b65\u5e93\u63d0\u4f9b\u7684sleep\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\u3002</li> </ul>"},{"location":"%E5%BC%80%E5%8F%91/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/errno/","title":"errno","text":"<p><code>errno</code> \u662fC/C++\u4e2d\u7528\u4e8e\u8868\u793a\u7cfb\u7edf\u8c03\u7528\u548c\u5e93\u51fd\u6570\u9519\u8bef\u7684\u5168\u5c40\u53d8\u91cf\uff08\u7528\u8d77\u6765\u50cf\u662f\u5168\u5c40\u53d8\u91cf\uff09\u3002\u5b83\u5b9a\u4e49\u5728<code>&lt;errno.h&gt;</code>\u5934\u6587\u4ef6\u4e2d\u3002</p> <ul> <li>\u7ebf\u7a0b\u5b89\u5168\uff1a\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\uff0c<code>errno</code> \u5b9e\u9645\u4e0a\u662f\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\uff08Thread Local Storage\uff09\u7684\u53d8\u91cf\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684 <code>errno</code> \u526f\u672c\u3002</li> <li>\u4f7f\u7528\u89c4\u5219\uff1a<ul> <li>\u6bcf\u6b21\u7cfb\u7edf\u8c03\u7528\u540e<code>errno</code>\u4e0d\u4f1a\u88ab\u91cd\u7f6e\u3002\u6240\u4ee5\u5728\u8c03\u7528\u53ef\u80fd\u8bbe\u7f6e <code>errno</code> \u7684\u51fd\u6570\u524d\uff0c\u5c06 <code>errno</code> \u8bbe\u7f6e\u4e3a 0 \u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u907f\u514d\u7531\u4e8e\u4e4b\u524d\u7684\u9519\u8bef\u72b6\u6001\u6b8b\u7559\u800c\u5bfc\u81f4\u8bef\u5224\u3002</li> <li>\u53ea\u6709\u5f53\u51fd\u6570\u8c03\u7528\u8fd4\u56de\u8868\u793a\u9519\u8bef\u7684\u503c\u65f6\uff08\u901a\u5e38\u662f<code>-1</code>\uff09\uff0c\u624d\u5e94\u8be5\u68c0\u67e5<code>errno</code>\u3002\u539f\u56e0\u540c\u4e0a\uff0c\u4e8c\u9009\u4e00\u3002</li> <li>\u5728\u68c0\u67e5<code>errno</code>\u4e4b\u524d\u4e0d\u5e94\u8be5\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4f1a\u4fee\u6539<code>errno</code>\u3002</li> <li>\u4f7f\u7528 <code>perror</code> \u6216 <code>strerror</code> \u53ef\u4ee5\u63d0\u4f9b\u5173\u4e8e\u9519\u8bef\u7684\u63cf\u8ff0\uff0c\u8fd9\u6bd4\u4ec5\u4ec5\u8f93\u51fa\u9519\u8bef\u4ee3\u7801\u66f4\u6709\u5e2e\u52a9\u3002</li> </ul> </li> </ul> <p>[!NOTE]  \u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u65f6\u4f1a\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\u7684\u8d1f\u6570\u3002\u6211\u4eec\u5728\u7528\u6237\u6001\u505a\u7cfb\u7edf\u8c03\u7528\uff0c\u4e00\u822c\u662fC\u5e93\uff08\u5982<code>glibc</code>\uff09\u5c01\u88c5\u597d\u7684\uff0cC\u5e93\u4f1a\u5c06\u8fd4\u56de\u503c\u53d6\u53cd\u540e\u8bbe\u7f6e\u5230<code>errno</code>\uff0c\u8fd4\u56de<code>-1</code>\u7ed9\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\uff08\u6bd4\u5982\u901a\u8fc7<code>syscall()</code>\u51fd\u6570\uff09\uff0c\u9700\u8981\u81ea\u5df1\u5904\u7406\u9519\u8bef\u7801\u3002</p> <p>\u5e38\u89c1\u7684\u503c</p> <pre><code>#define EPERM           1      // Operation not permitted\n#define ENOENT          2      // No such file or directory\n#define ESRCH           3      // No such process\n#define EINTR           4      // Interrupted system call\n#define EIO             5      // I/O error\n#define ENXIO           6      // No such device or address\n#define E2BIG           7      // Argument list too long\n#define ENOEXEC         8      // Exec format error\n#define EBADF           9      // Bad file number\n#define ECHILD          10     // No child processes\n#define EAGAIN          11     // Try again\n#define ENOMEM          12     // Out of memory\n#define EACCES          13     // Permission denied\n#define EFAULT          14     // Bad address\n#define EBUSY           16     // Device or resource busy\n#define EEXIST          17     // File exists\n#define ENODEV          19     // No such device\n#define ENOTDIR         20     // Not a directory\n#define EISDIR          21     // Is a directory\n#define EINVAL          22     // Invalid argument\n#define ENOSPC          28     // No space left on device\n#define EPIPE           32     // Broken pipe\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/","title":"Language","text":"<p>\u4ee5\u4e0b\u662f\u6211\u559c\u6b22\u5e76\u4e14\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff1a</p> <ul> <li>Golang: \u7b80\u6d01\u9ad8\u6548\uff0c\u9759\u6001\u7f16\u8bd1\uff0c\u9002\u5408\u5f00\u53d1\u5e76\u53d1\u7a0b\u5e8f\uff0c\u4e91\u539f\u751f\u8bed\u8a00\u3002\u7f3a\u70b9\u662f\u8bed\u6cd5\u8868\u8fbe\u80fd\u529b\u5f31\u3002</li> <li>Rust: \u96f6\u6210\u672c\u62bd\u8c61\uff0c\u5185\u5b58\u5b89\u5168\uff0c\u9759\u6001\u7f16\u8bd1\uff0c\u5f3a\u7c7b\u578b\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7f16\u7a0b\u65b0\u5ba0\u3002\u7f3a\u70b9\u662f\u8bed\u6cd5\u8f83\u4e3a\u7e41\u7410\u3002</li> <li>Python: \u7b80\u5355\uff0c\u52a8\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u9002\u7528\u4e8e\u811a\u672c\u3001\u4eba\u5de5\u667a\u80fd\u3001\u4e91\u8ba1\u7b97\u3001web\u5e94\u7528\u3002\u7f3a\u70b9\u662f\u4e0d\u9002\u5408\u5f00\u53d1\u5927\u578b\u7a0b\u5e8f\u3002</li> <li>Cpp/C: \u5feb\u901f\u3001\u7b80\u5355/\u590d\u6742\u3001\u5e95\u5c42\uff0c\u5f31\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u3001\u5d4c\u5165\u5f0f\u5f00\u53d1\u3002</li> <li>Datalog: \u58f0\u660e\u5f0f\u8bed\u8a00\uff0c\u9002\u7528\u4e8e\u6570\u636e\u5206\u6790\u3001\u7a0b\u5e8f\u9759\u6001\u5206\u6790\u3002\u751f\u6001\u592a\u5f31\uff0c\u4e0d\u7b26\u5408\u4e00\u822c\u4eba\u7684\u6b63\u5e38\u601d\u7ef4\u65b9\u5f0f\u3002</li> </ul> <p>\u4e86\u89e3\u4e00\u4e9b\u5e38\u7528\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u4e5f\u4f1a\u95f4\u63a5\u7684\u5bf9\u6211\u4eec\u7684\u7f16\u7a0b\u6709\u6240\u5e2e\u52a9\uff1a</p> <ul> <li>HTML - \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff0c\u7528\u4e8e\u7f51\u9875\u53ca\u7f51\u7edc\u5185\u5bb9\u7684\u7ed3\u6784\u548c\u5e03\u5c40\u3002\u73b0\u5728\u6700\u65b0\u7684\u7248\u672c\u662fHTML5\u3002</li> <li>XML - \u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\u3002\u7528\u4e8e\u5b58\u50a8\u548c\u4f20\u8f93\u6570\u636e\uff0c\u4e5f\u5e38\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u3002\u63d0\u4f9b\u6269\u5c55\u6027\u548c\u7ed3\u6784\u6027\u3002</li> <li>Markdown - \u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u975e\u5e38\u7b80\u5355\uff0c\u7528\u4e8e\u7f16\u5199\u6587\u6863\u5e76\u6700\u7ec8\u8f6c\u6362\u6210HTML\u3002</li> <li>YAML - \u4e00\u79cd\u76f4\u89c2\u7684\u80fd\u591f\u88ab\u7535\u8111\u8bc6\u522b\u7684\u6570\u636e\u5e8f\u5217\u5316\u683c\u5f0f\u3002\u5e38\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u548c\u6570\u636e\u5b58\u50a8\u3002</li> <li>JSON - \u4e00\u79cd\u7528\u4e8e\u6570\u636e\u4ea4\u6362\u7684\u6587\u672c\u683c\u5f0f\uff0c\u5e7f\u6cdb\u7528\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u3002</li> <li>LaTeX - \u4e00\u79cd\u7528\u4e8e\u79d1\u6280\u53ca\u5b66\u672f\u7c7b\u578b\u6587\u6863\u6392\u7248\u7684\u6807\u8bb0\u8bed\u8a00\u3002</li> </ul> <p>\u5f88\u591aDSL\u5b9e\u9645\u4e0a\u4e5f\u5f88\u91cd\u8981\uff0c\u4f8b\u5982SQL\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e9b\u8bed\u8a00\u5b66\u4e60\u7684\u7b14\u8bb0\u662f\u5728\u6211\u5df2\u7ecf\u719f\u6089\u4e86\u4ed6\u4eec\u4e4b\u540e\u505a\u7684\uff0c\u6240\u4ee5\u7b14\u8bb0\u5e76\u4e0d\u6c42\u9762\u9762\u4ff1\u5230\uff0c\u800c\u662f\u878d\u6c47\u4e00\u4e9b\u4e2a\u4eba\u7684\u601d\u8003\u3002\u4e3b\u8981\u5185\u5bb9\u5305\u62ec</p> <ul> <li>\u57fa\u7840\uff1a\u8bed\u8a00\u7684\u4e00\u4e9b\u6280\u672f\u7ec6\u8282</li> <li>\u5b9e\u8df5\uff1a\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5<ul> <li>\u5982\u4f55\u9519\u8bef\u5904\u7406</li> <li>\u5982\u4f55\u7f16\u5199\u5e76\u53d1\u7a0b\u5e8f</li> </ul> </li> <li>\u5e93\uff1a\u5e38\u7528\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u4ecb\u7ecd\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u90fd\u662f\u6700\u57fa\u672c\u7684\u5e93\uff0c\u9876\u7ea7\u7684\u6846\u67b6\uff08\u5982Golang\u7684web\u5e93gin\uff09\u4f1a\u5728\u5f00\u53d1\u7684\u76f8\u5e94\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff0c\u4e00\u4e9b\u7279\u6b8a\u7684\u5e93\u7528\u5230\u4e86\u53ef\u80fd\u4f1a\u7a0d\u4f5c\u8bb0\u5f55\u3002<ul> <li>\u57fa\u672c\u6570\u636e\u7ed3\u6784</li> <li>\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32</li> <li>\u5982\u4f55\u5904\u7406\u65f6\u95f4</li> <li>\u5982\u4f55\u6253\u65e5\u5fd7</li> <li>\u5982\u4f55\u8bfb\u5199\u6587\u4ef6</li> <li>\u5982\u4f55\u8bbf\u95ee\u7f51\u7edc</li> </ul> </li> <li>\u6784\u5efa\uff1a\u5de5\u5177\u94fe\u4ecb\u7ecd<ul> <li>\u5982\u4f55\u5f15\u5165\u3001\u7ba1\u7406\u7b2c\u4e09\u65b9\u4ee3\u7801</li> <li>\u5982\u4f55\u7f16\u8bd1</li> </ul> </li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/","title":"Bytecode","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u60f3\u4ecb\u7ecd\u4e00\u4e9b\u865a\u62df\u673a\u7528\u7684\u5b57\u8282\u7801\u3002</p> \u5b57\u8282\u7801 Stack/Register \u5b57\u957f \u56fe\u7075\u5b8c\u5907 \u7f16\u7a0b\u8bed\u8a00 \u4e3b\u8981\u7528\u9014 EVM Bytecode Stack 256 Yes Solidity EVM\u667a\u80fd\u5408\u7ea6 WASM Bytecode LLVM\u652f\u6301 \u6d4f\u89c8\u5668\uff0c\u667a\u80fd\u5408\u7ea6 eBPF Bytecode Register 64 No LLVM\u652f\u6301 \u5185\u6838\uff0c\u667a\u80fd\u5408\u7ea6 Python Bytecode Stack Yes Python \u901a\u7528 Java Bytecode Yes Java/Scala/Kotlin... \u901a\u7528"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/BPF/","title":"BPF","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/BPF/#_1","title":"\u8d77\u6e90","text":"<p>BPF \u7684\u5168\u79f0\u662f Berkeley Packet Filter, \u5373\u4f2f\u514b\u5229\u62a5\u6587\u8fc7\u6ee4\u5668\uff0c\u5b83\u7684\u8bbe\u8ba1\u601d\u60f3\u6765\u6e90\u4e8e 1992 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587The BSD packet filter: A New architecture for user-level packet capture\uff08\u300aBSD\u6570\u636e\u5305\u8fc7\u6ee4\u5668\uff1a\u4e00\u79cd\u7528\u4e8e\u7528\u6237\u7ea7\u6570\u636e\u5305\u6355\u83b7\u7684\u65b0\u4f53\u7cfb\u7ed3\u6784\u300b\uff09\u3002\u6700\u521d\uff0cBPF \u662f\u5728 BSD \u5185\u6838\u5b9e\u73b0\u7684\uff0c\u540e\u6765\uff0c\u7531\u4e8e\u5176\u51fa\u8272\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u5c06\u5176\u5f15\u5165, \u5305\u62ec Linux\u3002</p> <p>\u73b0\u5728\u63d0\u5230\u66f4\u591a\u7684\u662feBPF(extended BPF\uff0c\u73b0\u5728\u7684BPF\u53ef\u4ee5\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u5305\u8fc7\u6ee4\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd)\u3002\u5b83\u7684\u4ef7\u503c\u662f\u53ef\u4ee5\u5728\u7279\u6743\u4e0a\u4e0b\u6587\u4e2d\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff09\u8fd0\u884c\u6c99\u76d2\u7a0b\u5e8f\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/BPF/#_2","title":"\u5b57\u8282\u7801","text":"<p>\uff08\u8fd9\u91cc\u4ecb\u7ecd\u7684Linux\u5185\u6838\u4e2d\u7684\u5b9e\u73b0\uff09eBPF \u662f\u4e00\u4e2a RISC \u5bc4\u5b58\u5668\u865a\u62df\u673a\uff0c\u5171\u670911 \u4e2a 64 \u4f4d \u5bc4\u5b58\u5668\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u6570\u5668\u548c 512 \u5b57\u8282\u7684\u56fa\u5b9a\u5927\u5c0f\u7684\u6808\u3002</p> <code>r0:</code> \u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u5305\u62ec\u51fd\u6570\u8c03\u7528\u548c\u5f53\u524d\u7a0b\u5e8f\u9000\u51fa\u4ee3\u7801 <code>r1-r5:</code> \u4f5c\u4e3a\u51fd\u6570\u8c03\u7528\u53c2\u6570\u4f7f\u7528\uff0c\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cr1 \u5305\u542b \"\u4e0a\u4e0b\u6587\" \u53c2\u6570\u6307\u9488 <code>r6-r9:</code> \u8fd9\u4e9b\u5728\u5185\u6838\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u88ab\u4fdd\u7559\u4e0b\u6765 <code>r10:</code> \u6bcf\u4e2a eBPF \u7a0b\u5e8f 512 \u5b57\u8282\u6808\u7684\u53ea\u8bfb\u6307\u9488 <p>eBPF \u6307\u4ee4\u4e5f\u662f\u56fa\u5b9a\u5927\u5c0f\u7684 64 \u4f4d\u7f16\u7801\uff0c\u76ee\u524d\u5927\u7ea6\u6709 100 \u6761\u6307\u4ee4\uff0c\u53c2\u8003https://github.com/iovisor/bpf-docs/blob/master/eBPF.md\u3002</p> <p>eBPF \u9a8c\u8bc1\u5668\uff1a\u5982\u679c\u4e0d\u8003\u8651\u8fd0\u884c\u73af\u5883\uff08eBPF\u865a\u62df\u673a\uff09\uff0c\u53ea\u770b\u6307\u4ee4\u96c6\u7684\u8bdd\uff0ceBPF \u662f\u56fe\u7075\u5b8c\u5907\u7684\u3002\u4f46\u662f\u6211\u4eec\u4f1a\u5c06\u56fe\u7075\u4e0d\u5b8c\u5907\u4f5c\u4e3aeBPF\u7684\u4e3b\u8981\u7279\u5f81\u3002</p> <ul> <li>Linux\u7684\u9a8c\u8bc1\u5668\u601d\u8def\u4f3c\u4e4e\u975e\u5e38\u7b80\u5355\u7c97\u66b4\uff1a(i) \u7981\u6b62\u5faa\u73af\uff0cCFG\u662f\u6709\u5411\u65e0\u73af\u56fe (ii) \u6a21\u62df\u6267\u884c\u6bcf\u6761\u8def\u5f84\uff0c\u9a8c\u8bc1\u5bc4\u5b58\u5668\u7684\u7c7b\u578b\u3002</li> <li>PREVAIL \u4f7f\u7528Abstract Interpretion\u6765\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u6027\u8d28\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/BPF/#_3","title":"\u5e94\u7528","text":"<ul> <li>\u5728\u5185\u6838\u4e2d\u5141\u8bb8\u6c99\u76d2\u7a0b\u5e8f\uff0c\u9ad8\u6548\u7684\u8fc7\u6ee4\u7f51\u7edc\u62a5\u6587</li> <li>RBPF https://github.com/qmonnet/rbpf</li> <li>Solana \u667a\u80fd\u5408\u7ea6 https://github.com/solana-labs/rbpf</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Bytecode/WASM/","title":"WASM","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/","title":"C &amp; C++","text":"<p>\u6211\u5bf9C++\u7684\u4e86\u89e3\uff0c\u4ec5\u9650\u4e8eC with Class\u3002\u4e8b\u5b9e\u4e0a\uff0c\u73b0\u4ee3C++\u5df2\u7ecf\u5f15\u5165\u4e86\u975e\u5e38\u591a\u7684\u65b0\u7279\u6027\uff0c\u8fd9\u4e5f\u6b63\u662f\u8fd9\u4e00\u7cfb\u5217\u7b14\u8bb0\u5c06\u8981\u8bb0\u5f55\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E9%A5%B0%E7%AC%A6/","title":"\u4fee\u9970\u7b26","text":"<p>\u5b66\u4e60C++\u7684\u65f6\u5019\uff0c\u611f\u89c9\u5404\u79cd\u5404\u6837\u82b1\u91cc\u80e1\u54e8\u7684\u4fee\u9970\u7b26\u592a\u591a\u4e86\uff0c\u6709\u5fc5\u8981\u505a\u4e00\u4e2a\u5f52\u7eb3\u3002\u4fee\u9970\u7b26\u7528\u6765\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u8bed\u4e49\uff0c\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u5668\u68c0\u67e5\u6216\u4f18\u5316\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E9%A5%B0%E7%AC%A6/#_2","title":"\u51fd\u6570\u4fee\u9970\u7b26","text":"<p><code>const</code>\uff1a\u7528\u4e8e\u6210\u5458\u51fd\u6570\uff0c\u6307\u660e\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u7c7b\u7684\u4efb\u4f55\u975e\u9759\u6001\u6570\u636e\u6210\u5458\uff08\u9664\u4e86\u88ab <code>mutable</code> \u4fee\u9970\u7684\u6210\u5458\uff09\u3002<code>const</code> \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u88ab\u79f0\u4e3a\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u5e38\u91cf\u5bf9\u8c61\u4e0a\u88ab\u8c03\u7528\u3002\u7c7b\u7684getter\u662f\u5178\u578b\u7684\u4f8b\u5b50\u3002</p> <pre><code>class MyClass {\npublic:\n    int value() const { return data_; } // \u4e0d\u4f1a\u4fee\u6539\u4efb\u4f55\u6210\u5458\u53d8\u91cf\nprivate:\n    int data_;\n};\n</code></pre> <p><code>constexpr</code>\uff1a\u7528\u4e8e\u6307\u793a\u51fd\u6570\u6216\u5bf9\u8c61\u6784\u9020\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u53ef\u88ab\u6c42\u503c\uff0c\u4f7f\u5f97\u51fd\u6570\u6216\u5bf9\u8c61\u53ef\u4ee5\u7528\u5728\u9700\u8981\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u573a\u666f\uff0c\u5982\u6570\u7ec4\u5927\u5c0f\u3001\u6574\u6570\u6a21\u677f\u53c2\u6570\u7b49\u3002</p> <p><code>explicit</code>\uff1a\u7528\u4e8e\u6784\u9020\u51fd\u6570\u6216\u8f6c\u6362\u51fd\u6570\uff0c\u963b\u6b62\u7f16\u8bd1\u5668\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u8981\u6c42\u5fc5\u987b\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\u6216\u8f6c\u6362\u51fd\u6570\u3002</p> <pre><code>class MyClass {\npublic:\n    explicit MyClass(int x) : data_(x) {}\nprivate:\n    int data_;\n};\n\nMyClass obj = MyClass(10); // \u6b63\u786e\nMyClass obj = 10; // \u9519\u8bef\uff0c\u56e0\u4e3a\u7981\u6b62\u4e86\u9690\u5f0f\u8f6c\u6362\n</code></pre> <p><code>virtual</code>\uff1a\u7528\u4e8e\u6210\u5458\u51fd\u6570\uff0c\u8868\u660e\u8be5\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u4e2d\u88ab\u91cd\u5199\u3002\u8fd9\u662f\u5b9e\u73b0\u591a\u6001\u884c\u4e3a\u7684\u57fa\u7840\u3002\u5982\u679c\u5728\u51fd\u6570\u540e\u9762\u6709<code>=0</code>\u8868\u793a\u8be5\u51fd\u6570\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5fc5\u987b\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u3002 <code>override</code>\uff1a\u7528\u4e8e\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u660e\u786e\u6307\u51fa\u8be5\u51fd\u6570\u610f\u5728\u91cd\u5199\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u3002\u8fd9\u6709\u52a9\u4e8e\u7f16\u8bd1\u5668\u68c0\u67e5\u51fd\u6570\u7b7e\u540d\u7684\u5339\u914d\u6027\u3002</p> <pre><code>class Base {\npublic:\n    virtual void foo() { std::cout &lt;&lt; \"Base::foo()\\n\"; }\n};\n\nclass Derived : public Base {\npublic:\n    void foo() override { std::cout &lt;&lt; \"Derived::foo()\\n\"; }\n};\n</code></pre> <p><code>final</code>\uff1a\u53ef\u4ee5\u7528\u4e8e\u6210\u5458\u51fd\u6570\u6216\u7c7b\u3002\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\u4fee\u9970\u7b26\u65f6\uff0cfinal \u963b\u6b62\u51fd\u6570\u5728\u66f4\u6d3e\u751f\u7684\u7c7b\u4e2d\u88ab\u91cd\u5199\u3002\u4f5c\u4e3a\u7c7b\u4fee\u9970\u7b26\u65f6\uff0c\u963b\u6b62\u7c7b\u88ab\u7ee7\u627f\u3002</p> <pre><code>class Base {\npublic:\n    virtual void foo() final; // \u4e0d\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u88ab\u91cd\u5199\n};\n\nclass NoInherit final { // \u4e0d\u80fd\u88ab\u7ee7\u627f\n};\n</code></pre> <p><code>static</code>\uff1a\u7528\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u8868\u660e\u8be5\u51fd\u6570\u4e0d\u4f9d\u8d56\u4e8e\u7c7b\u7684\u5b9e\u4f8b\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6570\u636e\u6210\u5458\u6216\u8c03\u7528\u5176\u4ed6\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u3002\u4fee\u9970\u666e\u901a\u51fd\u6570\uff0c\u8868\u660e\u51fd\u6570\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u4ec5\u5728\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u6587\u4ef6\u5185\u624d\u80fd\u4f7f\u7528\u3002\u5728\u591a\u4eba\u5f00\u53d1\u9879\u76ee\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u4e0e\u4ed6\u4eba\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u51fd\u6570\u91cd\u540d\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u5b9a\u4f4d\u4e3a static\u3002</p> <pre><code>class MyClass {\npublic:\n    static void staticFunc() { std::cout &lt;&lt; \"Static function.\\n\"; }\n};\n</code></pre> <p><code>noexcept</code>\uff1a\u8868\u660e\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u8fd9\u6709\u52a9\u4e8e\u7f16\u8bd1\u5668\u4f18\u5316\u6027\u80fd\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9\u8c03\u7528\u8005\u7684\u4e00\u4e2a\u91cd\u8981\u63d0\u793a\u3002</p> <pre><code>void myFunction() noexcept {\n    // \u51fd\u6570\u4fdd\u8bc1\u4e0d\u629b\u51fa\u5f02\u5e38\n}\n</code></pre> <p><code>=default</code>\u662f C++11 \u5f15\u5165\u7684\u4e00\u4e2a\u7279\u6027\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3002\u5f53\u58f0\u660e\u4e00\u4e2a\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff08\u5982\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u7b49\uff09\u65f6\uff0c\u4f7f\u7528\u00a0<code>=default</code>\u00a0\u53ef\u4ee5\u660e\u786e\u8981\u6c42\u7f16\u8bd1\u5668\u751f\u6210\u9ed8\u8ba4\u7248\u672c\u3002</p> <pre><code>class MyClass {\npublic:\n    // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n    MyClass() = default;\n\n    // \u9ed8\u8ba4\u6790\u6784\u51fd\u6570\n    ~MyClass() = default;\n\n    // \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    MyClass(const MyClass&amp;) = default;\n\n    // \u9ed8\u8ba4\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\n    MyClass&amp; operator=(const MyClass&amp;) = default;\n};\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E9%A5%B0%E7%AC%A6/#_3","title":"\u53d8\u91cf\u4fee\u9970\u7b26","text":"<p>\u5728 C++ \u4e2d\uff0c\u53d8\u91cf\u4fee\u9970\u7b26\u7528\u4ee5\u6307\u5b9a\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u522b\u3001\u94fe\u63a5\u5c5e\u6027\u3001\u751f\u547d\u5468\u671f\u548c\u5176\u4ed6\u884c\u4e3a\u7279\u6027\u3002\u8fd9\u4e9b\u4fee\u9970\u7b26\u5bf9\u4e8e\u7f16\u5199\u9ad8\u6548\u548c\u53ef\u9760\u7684\u7a0b\u5e8f\u81f3\u5173\u91cd\u8981\u3002\u4ee5\u4e0b\u662f C++ \u4e2d\u5e38\u7528\u7684\u4e00\u4e9b\u53d8\u91cf\u4fee\u9970\u7b26\uff1a</p> <p><code>const</code>\uff1a\u6307\u793a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002<code>const</code> \u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u57fa\u672c\u7c7b\u578b\u3001\u5bf9\u8c61\u3001\u6307\u9488\u548c\u5f15\u7528\u3002</p> <pre><code>const int MAX_SIZE = 100;\nconst std::string TITLE = \"My Program\";\n</code></pre> <p><code>static</code>\uff1a\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\u7684\u5b58\u50a8\u6301\u7eed\u6027\u4e3a\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u671f\u3002\u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e\u4e3a <code>static</code> \u7684\u53d8\u91cf\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4e0d\u4f1a\u88ab\u9500\u6bc1\uff0c\u800c\u4f1a\u4fdd\u6301\u5176\u503c\u76f4\u5230\u4e0b\u6b21\u8c03\u7528\u3002\u4fee\u9970\u6210\u5458\u53d8\u91cf\uff0c\u4fee\u9970\u6210\u5458\u53d8\u91cf\u4f7f\u6240\u6709\u7684\u5bf9\u8c61\u53ea\u4fdd\u5b58\u4e00\u4e2a\u8be5\u53d8\u91cf\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u751f\u6210\u5bf9\u8c61\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u6210\u5458\u3002</p> <pre><code>void function() {\n    static int counter = 0;  // \u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\uff0ccounter \u7684\u503c\u90fd\u88ab\u4fdd\u7559\n    counter++;\n    std::cout &lt;&lt; counter &lt;&lt; std::endl;\n}\n</code></pre> <p><code>volatile</code>\uff1a\u7528\u6765\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u5728\u7a0b\u5e8f\u7684\u63a7\u5236\u4e4b\u5916\u88ab\u6539\u53d8\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u6216\u5e76\u53d1\u7ebf\u7a0b\uff09\u3002\u8fd9\u963b\u6b62\u7f16\u8bd1\u5668\u5bf9\u6d89\u53ca\u6613\u53d8\u53d8\u91cf\u7684\u4ee3\u7801\u8fdb\u884c\u67d0\u4e9b\u7c7b\u578b\u7684\u4f18\u5316\u3002</p> <pre><code>volatile int ready = 0;\n</code></pre> <p><code>extern</code>\uff1a\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u8be5\u53d8\u91cf\u5728\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002<code>extern</code> \u7528\u6765\u5728\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab\u53d8\u91cf\u3002</p> <pre><code>extern int globalValue;  // \u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\n</code></pre> <p><code>mutable</code>\uff1a\u5141\u8bb8\u5728\u4e00\u4e2a <code>const</code> \u6210\u5458\u51fd\u6570\u4e2d\u4fee\u6539\u67d0\u4e9b\u7c7b\u6210\u5458\u53d8\u91cf\u3002\u5373\u4f7f\u7c7b\u7684\u5bf9\u8c61\u662f\u5e38\u91cf\uff0c\u88ab <code>mutable</code> \u4fee\u9970\u7684\u6210\u5458\u53d8\u91cf\u4e5f\u53ef\u4ee5\u88ab\u4fee\u6539\u3002</p> <pre><code>class MyClass {\npublic:\n    void updateCache() const { cache = fetchData(); }  // const \u51fd\u6570\u4e2d\u4fee\u6539\u6210\u5458\n    int fetchData() const { return 42; }\n\nprivate:\n    mutable int cache;  // \u5373\u4f7f\u5728 const \u5bf9\u8c61\u4e2d\u4e5f\u53ef\u4ee5\u4fee\u6539\n};\n</code></pre> <p><code>register</code>\uff1a\uff08\u5df2\u5728 C++17 \u4e2d\u5f03\u7528\uff09\u539f\u610f\u662f\u5efa\u8bae\u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ee5\u4fbf\u5feb\u901f\u8bbf\u95ee\u3002\u73b0\u5728\u8fd9\u4e2a\u5173\u952e\u5b57\u4e0d\u518d\u6709\u4efb\u4f55\u5b9e\u9645\u6548\u679c\uff0c\u4f46\u4ecd\u53ef\u7528\u4e8e\u8bed\u6cd5\u517c\u5bb9\u6027\u3002</p> <p><code>thread_local</code>\uff1a\u6307\u793a\u53d8\u91cf\u5177\u6709\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\uff08TLS\uff09\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u5176\u81ea\u5df1\u7684\u53d8\u91cf\u5b9e\u4f8b\u3002\u8fd9\u7528\u4e8e\u5e76\u53d1\u7f16\u7a0b\uff0c\u786e\u4fdd\u6570\u636e\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u7684\u5b89\u5168\u4f7f\u7528\u3002</p> <pre><code>thread_local int threadSpecificData = 0;\n</code></pre> <p>\u8fd9\u4e9b\u4fee\u9970\u7b26\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u4f18\u5316\u6027\u80fd\uff0c\u589e\u5f3a\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u7ebf\u7a0b\u5b89\u5168\u6027\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E9%A5%B0%E7%AC%A6/#_4","title":"\u6210\u5458\u53ef\u89c1\u6027","text":"<ul> <li><code>public</code> \u6210\u5458\uff1a\u53ef\u4ee5\u88ab\u4efb\u610f\u5b9e\u4f53\u8bbf\u95ee</li> <li><code>protected</code> \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u5b50\u7c7b\u53ca\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee</li> <li><code>private</code> \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3001\u53cb\u5143\u7c7b\u6216\u53cb\u5143\u51fd\u6570\u8bbf\u95ee</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E5%B9%B6%E5%8F%91/","title":"\u5e76\u53d1","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E5%B9%B6%E5%8F%91/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>An Introduction to Lock-Free Programming</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/","title":"\u6784\u9020\u51fd\u6570","text":"<p>C\u6216\u8005Rust\u90fd\u6ca1\u6709\u6784\u9020\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u800c\u6784\u9020\u51fd\u6570\u5728C++\u4e2d\u53c8\u5341\u5206\u91cd\u8981\uff0c\u503c\u5f97\u7814\u7a76\u3002</p> <p>\u6784\u9020\u51fd\u6570\u6700\u57fa\u672c\u7684\u7528\u9014\u5c31\u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\u7684\u5bf9\u8c61\uff0c\u521d\u59cb\u5316\u5b57\u6bb5\uff0c\u7533\u8bf7\u8d44\u6e90\u3002\u8fd9\u91cc\u501f\u7528\u6765\u81eaMicrosoft\u7684\u4f8b\u5b50\uff1a</p> <pre><code>class Box {\npublic:\n    // Default constructor\n    Box() {}\n\n    // Initialize a Box with equal dimensions (i.e. a cube)\n    explicit Box(int i) : m_width(i), m_length(i), m_height(i) // member init list\n    {}\n\n    // Initialize a Box with custom dimensions\n    Box(int width, int length, int height)\n        : m_width(width), m_length(length), m_height(height)\n    {}\n\n    int Volume() { return m_width * m_length * m_height; }\n\nprivate:\n    // Will have value of 0 when default constructor is called.\n    // If we didn't zero-init here, default constructor would\n    // leave them uninitialized with garbage values.\n    int m_width{ 0 };\n    int m_length{ 0 };\n    int m_height{ 0 };\n};\n</code></pre> <p>\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\uff08Member Initializer List\uff09\u5e76\u4e0d\u53ea\u662f\u4e3a\u7c7b\u6210\u5458\u8d4b\u521d\u503c\u7684\u8bed\u6cd5\u7cd6\u3002\u5f53\u4f7f\u7528\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u521d\u59cb\u5316\u7c7b\u7684\u6570\u636e\u6210\u5458\u65f6\uff0c\u6210\u5458\u88ab\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u800c\u4e0d\u662f\u5148\u9ed8\u8ba4\u521d\u59cb\u5316\u540e\u518d\u8d4b\u503c\uff08\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5c31\u662f\u5148\u521d\u59cb\u5316\u62100\u518d\u8d4b\u503c\uff09\u3002\u53e6\u5916\uff0cconst \u6210\u5458\u548c\u5f15\u7528\u6210\u5458\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u4f53\u6267\u884c\u524d\u88ab\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u53ea\u80fd\u901a\u8fc7\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u3002</p> <p>\u58f0\u660e\u7c7b\u7684\u5b9e\u4f8b\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u57fa\u4e8e\u91cd\u8f7d\u51b3\u7b56\u9009\u62e9\u8981\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\uff0c\u5982\u4e0b\u3002\u5bf9\u4e8eRust\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c<code>Box b</code>\u770b\u7740\u603b\u50cf\u662f\u5199\u4e86\u4e00\u534a\u6ca1\u521d\u59cb\u5316\u7684\u53d8\u91cf\uff0c\u4e8b\u5b9e\u4e0a\u4ecd\u7136\u6709\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\u4e86\u3002\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u9664\u975e\u663e\u5f0f\u58f0\u660e\uff0c\u5426\u5219\u53ea\u6709\u5728\u7c7b\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\u88ab\u7f16\u8bd1\u5668\u751f\u6210\u3002</p> <pre><code>int main()\n{\n    Box b; // Calls Box()\n\n    // Using uniform initialization (preferred):\n    Box b2 {5}; // Calls Box(int)\n    Box b3 {5, 8, 12}; // Calls Box(int, int, int)\n\n    // Using function-style notation:\n    Box b4(2, 4, 6); // Calls Box(int, int, int)\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_2","title":"\u590d\u5236\u6784\u9020\u51fd\u6570","text":"<p>\u590d\u5236\u6784\u9020\u51fd\u6570\u901a\u8fc7\u4ece\u76f8\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u590d\u5236\u6210\u5458\u503c\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u3002 \u5982\u679c\u7c7b\u6210\u5458\u90fd\u662f\u7b80\u5355\u7c7b\u578b\uff08\u5982\u6807\u91cf\u503c\uff09\uff0c\u5219\u7f16\u8bd1\u5668\u751f\u6210\u7684\u590d\u5236\u6784\u9020\u51fd\u6570\u5df2\u591f\u7528\uff0c\u4f60\u65e0\u9700\u5b9a\u4e49\u81ea\u5df1\u7684\u51fd\u6570\u3002\u5982\u679c\u7c7b\u9700\u8981\u66f4\u590d\u6742\u7684\u590d\u5236\u8bed\u4e49\uff08\u5982\u6210\u5458\u662f\u6307\u9488\uff0c\u9700\u8981\u6df1\u62f7\u8d1d\uff09\uff0c\u4ecd\u9700\u8981\u81ea\u5b9a\u4e49\u590d\u5236\u6784\u9020\u51fd\u6570\u3002</p> <p>\u590d\u5236\u6784\u9020\u51fd\u6570\u53ef\u80fd\u5177\u6709\u4ee5\u4e0b\u7b7e\u540d\u4e4b\u4e00\uff1a</p> <pre><code>Box(Box&amp; other); // Avoid if possible--allows modification of other.\nBox(const Box&amp; other);\nBox(volatile Box&amp; other);\nBox(volatile const Box&amp; other);\n\n// Additional parameters OK if they have default values\nBox(Box&amp; other, int i = 42, string label = \"Box\");\n</code></pre> <p>\u5b9a\u4e49\u590d\u5236\u6784\u9020\u51fd\u6570\u65f6\uff0c\u8fd8\u5e94\u5b9a\u4e49\u590d\u5236\u8d4b\u503c\u8fd0\u7b97\u7b26 (=)\u3002\u53ef\u4ee5\u901a\u8fc7\u5c06\u590d\u5236\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u4e3a\u5df2\u5220\u9664\u6765\u963b\u6b62\u590d\u5236\u5bf9\u8c61\uff1a</p> <pre><code>Box (const Box&amp; other) = delete;\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_3","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570","text":"<p>\u79fb\u52a8\u6784\u9020\u51fd\u6570\u662f\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff0c\u5b83\u5c06\u73b0\u6709\u5bf9\u8c61\u6570\u636e\u7684\u6240\u6709\u6743\u79fb\u4ea4\u7ed9\u65b0\u53d8\u91cf\uff0c\u800c\u4e0d\u590d\u5236\u539f\u59cb\u6570\u636e\u3002 \u5b83\u91c7\u7528 \u53f3\u503c\u5f15\u7528\uff08\u5c31\u662f\u770b\u7740\u6709\u4e9b\u5947\u602a\u7684<code>&amp;&amp;</code>\uff0c\u666e\u901a\u5f15\u7528\uff08\u5de6\u503c\u5f15\u7528\uff09\u662f<code>&amp;</code>\uff09 \u4f5c\u4e3a\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u540e\u7684\u4efb\u4f55\u53c2\u6570\u90fd\u5fc5\u987b\u5177\u6709\u9ed8\u8ba4\u503c\u3002 \u79fb\u52a8\u6784\u9020\u51fd\u6570\u5728\u4f20\u9012\u5927\u578b\u5bf9\u8c61\u65f6\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\u3002</p> <pre><code>Box(Box&amp;&amp; other);\n</code></pre> <p>[!NOTE] \u79fb\u52a8\u6784\u9020\u51fd\u6570 | Microsoft Learn \u6211\u5728\u5c1d\u8bd5\u8fd9\u91cc\u7ed9\u7684\u5b9e\u4f8b\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5e76\u6ca1\u6709\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f7f\u7528Return Value Optimization\u628a\u5b83\u4f18\u5316\u6389\u4e86\u3002\u53ef\u4ee5\u7981\u7528\u8fd9\u4e2a\u4f18\u5316\u4ee5\u8fbe\u5230\u9884\u671f\u7684\u6548\u679c<code>g++ -fno-elide-constructors test.cpp</code></p> <p>\u4ece C++11 \u4e2d\u5f00\u59cb\uff0c\u8be5\u8bed\u8a00\u652f\u6301\u4e24\u7c7b\u8d4b\u503c\uff1a\u590d\u5236\u8d4b\u503c \u548c \u79fb\u52a8\u8d4b\u503c\u3002\u4ecb\u7ecd\u5b8c\u4e86\u590d\u5236\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e86\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u4ed6\u4eec\u4e5f\u8fdb\u884c\u533a\u5206\u3002\u58f0\u660e\u4e0a\u4ed6\u4eec\u7684\u4e3b\u8981\u533a\u522b\u662f\uff0c\u590d\u5236\u8d4b\u503c\u7684\u53c2\u6570\u662f\u5de6\u503c\u5f15\u7528\uff0c\u79fb\u52a8\u8d4b\u503c\u7684\u53c2\u6570\u662f\u53f3\u503c\u5f15\u7528\uff0c\u5982\u4e0b\uff1a</p> <pre><code>Box &amp;operator=(const Box &amp;other) {\n    std::cout &lt;&lt; \"copy assign\" &lt;&lt; endl;\n    if (this != &amp;other) {\n      m_height = other.m_height;\n      m_width = other.m_width;\n      m_length = other.m_length;\n      m_contents = other.m_contents; // \u5b8c\u6210\u590d\u5236\n    }\n    return *this; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\n}\n\n// \u79fb\u52a8\u64cd\u4f5c\u901a\u5e38\u5e94\u6807\u8bb0\u4e3a `noexcept`\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u5e94\u629b\u51fa\u5f02\u5e38\uff0c\u8fd9\u6709\u52a9\u4e8e\u67d0\u4e9b\u5bb9\u5668\u5728\u9700\u8981\u91cd\u65b0\u5206\u914d\u65f6\u4f18\u5316\u6027\u80fd\u3002\nBox &amp;operator=(Box &amp;&amp;other) noexcept {\n    std::cout &lt;&lt; \"move assign\" &lt;&lt; endl;\n    if (this != &amp;other) {\n      m_height = other.m_height;\n      m_width = other.m_width;\n      m_length = other.m_length;\n      m_contents = std::move(other.m_contents); // \u79fb\u52a8\u5185\u5bb9\n      // \u6e05\u7a7a\u6e90\u5bf9\u8c61\u7684\u5185\u5bb9\n      other.m_height = 0;\n      other.m_width = 0;\n      other.m_length = 0;\n    }\n    return *this; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\n}\n\nint main() {\n  Box b;          \n\n  Box b3;\n  b3 = b;\n\n  Box b4;\n  b4 = std::move(b);\n\n  return 0;\n}\n</code></pre> <p>\u770b\u5230\u8fd9\u91cc\uff0c\u6211\u60f3\u4f60\u5927\u6982\u731c\u5230\u4e86<code>std::move</code>\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\uff0c\u53ea\u662f\u5c06\u53c2\u6570\u7684\u7c7b\u578b\u8f6c\u5316\u4e3a\u4e86\u53f3\u503c\u5f15\u7528\u3002\u6240\u4ee5\u4f60\u8981\u662f\u60f3\u8981\u624b\u52a8\u5b8c\u6210\u4e00\u4e0b\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684<code>std::move</code>\u6362\u6210<code>static_cast&lt;Box &amp;&amp;&gt;</code>\u3002</p> <pre><code>namespace std {\n    template&lt;typename T&gt;\n    typename remove_reference&lt;T&gt;::type&amp;&amp; move(T&amp;&amp; arg) noexcept {\n        return static_cast&lt;typename remove_reference&lt;T&gt;::type&amp;&amp;&gt;(arg);\n    }\n}\n</code></pre> <p>[!NOTE] \u5bf9\u4e8e\u719f\u6089Rust\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u4ee5\u8fd9\u6837\u7c7b\u6bd4\uff1a\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u73b0trait<code>Copy</code>\uff0c\u90a3\u4e48\u8d4b\u503c\u5c31\u662f\u79fb\u52a8\u8d4b\u503c\uff0c\u60f3\u8981\u590d\u5236\u5e94\u8be5\u8c03\u7528<code>clone</code>\uff0c\u5982\u679c\u5b9e\u73b0\u4e86<code>Copy</code>\u5c31\u662f\u590d\u5236\u8d4b\u503c\uff0c\u4e00\u822c\u53ea\u5bf9\u57fa\u7840\u7c7b\u578b\u5b9e\u73b0<code>Copy</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_4","title":"\u59d4\u6258\u6784\u9020\u51fd\u6570","text":"<p>\u59d4\u6258\u6784\u9020\u51fd\u6570\u8c03\u7528\u540c\u4e00\u7c7b\u4e2d\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u5b8c\u6210\u90e8\u5206\u521d\u59cb\u5316\u5de5\u4f5c\u3002 \u5728\u5177\u6709\u591a\u4e2a\u5168\u90fd\u5fc5\u987b\u6267\u884c\u7c7b\u4f3c\u5de5\u4f5c\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6b64\u529f\u80fd\u975e\u5e38\u6709\u7528\u3002 \u53ef\u4ee5\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u7f16\u5199\u4e3b\u903b\u8f91\uff0c\u5e76\u4ece\u5176\u4ed6\u6784\u9020\u51fd\u6570\u8c03\u7528\u5b83\u3002 \u5728\u4ee5\u4e0b\u7b80\u5355\u793a\u4f8b\u4e2d\uff0c<code>Box(int)</code> \u5c06\u5176\u5de5\u4f5c\u59d4\u6258\u7ed9 <code>Box(int,int,int)</code>\uff1a</p> <pre><code>class Box {\npublic:\n    // Default constructor\n    Box() {}\n\n    // Initialize a Box with equal dimensions (i.e. a cube)\n    Box(int i) :  Box(i, i, i)  // delegating constructor\n    {}\n\n    // Initialize a Box with custom dimensions\n    Box(int width, int length, int height)\n        : m_width(width), m_length(length), m_height(height)\n    {}\n    //... rest of class as before\n};\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_5","title":"\u6784\u9020\u51fd\u6570\u987a\u5e8f","text":"<p>\u5982\u679c\u7c7b\u6709\u7ee7\u627f\uff0c\u90a3\u4e48\u5c31\u8981\u4ed4\u7ec6\u8003\u8651\u6784\u9020\u51fd\u6570\u7684\u987a\u5e8f\u3002\u6784\u9020\u51fd\u6570\u6309\u6b64\u987a\u5e8f\u6267\u884c\u5de5\u4f5c\uff1a</p> <ol> <li>\u8c03\u7528\u57fa\u7c7b\u548c\u6210\u5458\u7684\u6784\u9020\u51fd\u6570\uff1a<ul> <li>\u5f53\u4e00\u4e2a\u7c7b\u7ee7\u627f\u81ea\u4e00\u4e2a\u6216\u591a\u4e2a\u57fa\u7c7b\u65f6\uff0c\u8fd9\u4e9b\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728\u6d3e\u751f\u7c7b\u7684\u4efb\u4f55\u6210\u5458\u88ab\u521d\u59cb\u5316\u4e4b\u524d\u88ab\u8c03\u7528\u3002</li> <li>\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6309\u7167\u5b83\u4eec\u5728\u7c7b\u5b9a\u4e49\u4e2d\u7684\u58f0\u660e\u987a\u5e8f\u88ab\u8c03\u7528\uff0c\u4e0d\u662f\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u3002</li> <li>\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e5f\u4f1a\u6309\u7167\u5176\u5728\u7c7b\u5b9a\u4e49\u4e2d\u7684\u58f0\u660e\u987a\u5e8f\u521d\u59cb\u5316\uff0c\u800c\u4e0d\u662f\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u3002</li> <li>\u5982\u679c\u6709\u865a\u62df\u57fa\u7c7b\uff0c\u5176\u6784\u9020\u51fd\u6570\u4f1a\u5728\u4efb\u4f55\u975e\u865a\u62df\u57fa\u7c7b\u4e4b\u524d\u521d\u59cb\u5316\uff0c\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u6d3e\u751f\u7c7b\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u865a\u62df\u57fa\u7c7b\u5b9e\u4f8b\u3002</li> </ul> </li> <li>\u521d\u59cb\u5316\u865a\u62df\u57fa\u7c7b\u6307\u9488\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\uff1a<ul> <li>\u865a\u62df\u57fa\u7c7b\u662f\u901a\u8fc7\u865a\u7ee7\u627f\u6765\u5b9e\u73b0\u7684\uff0c\u76ee\u7684\u662f\u89e3\u51b3\u591a\u91cd\u7ee7\u627f\u4e2d\u7684\u83f1\u5f62\u95ee\u9898\uff08\u5373\u4e24\u4e2a\u6d3e\u751f\u7c7b\u7ee7\u627f\u81ea\u540c\u4e00\u4e2a\u57fa\u7c7b\uff09\u3002</li> <li>\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u7c7b\u6709\u865a\u62df\u57fa\u7c7b\uff0c\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u6307\u5411\u865a\u62df\u57fa\u7c7b\u7684\u6307\u9488\u3002\u8fd9\u786e\u4fdd\u4e86\u65e0\u8bba\u7ee7\u627f\u7ed3\u6784\u5982\u4f55\u590d\u6742\uff0c\u865a\u62df\u57fa\u7c7b\u5b9e\u4f8b\u53ea\u6709\u4e00\u4e2a\u3002</li> </ul> </li> <li>\u521d\u59cb\u5316\u865a\u51fd\u6570\u6307\u9488\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\uff1a<ul> <li>\u5982\u679c\u7c7b\u5b9a\u4e49\u4e86\u865a\u51fd\u6570\u6216\u7ee7\u627f\u4e86\u865a\u51fd\u6570\uff0c\u5b83\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u4f1a\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u3002vtable \u662f\u4e00\u4e2a\u5305\u542b\u6307\u5411\u7c7b\u7684\u865a\u51fd\u6570\u7684\u6307\u9488\u7684\u6570\u7ec4\u3002</li> <li>\u5728\u8fd0\u884c\u65f6\uff0c\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6307\u5411\u76f8\u5e94\u7684\u865a\u51fd\u6570\u8868\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u901a\u5e38\u5728\u6784\u9020\u51fd\u6570\u6267\u884c\u4e4b\u524d\u53d1\u751f\uff0c\u4ee5\u786e\u4fdd\u5373\u4f7f\u5728\u6784\u9020\u51fd\u6570\u5185\u90e8\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4e5f\u80fd\u6b63\u786e\u89e3\u6790\u5230\u6d3e\u751f\u7c7b\u7684\u8986\u76d6\u5b9e\u73b0\u3002</li> </ul> </li> <li>\u6267\u884c\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u7684\u4ee3\u7801\uff1a<ul> <li>\u5728\u6240\u6709\u7684\u57fa\u7c7b\u548c\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u7684\u4ee3\u7801\u624d\u5f00\u59cb\u6267\u884c\u3002</li> <li>\u8fd9\u610f\u5473\u7740\u6b64\u65f6\u6240\u6709\u7684\u6210\u5458\u53d8\u91cf\u548c\u57fa\u7c7b\u90e8\u5206\u90fd\u5df2\u5904\u4e8e\u6784\u9020\u597d\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u5b89\u5168\u5730\u4f7f\u7528\u3002</li> </ul> </li> </ol>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_6","title":"\u6790\u6784\u51fd\u6570","text":"<p>\u5728\u5bf9\u8c61\u8d85\u51fa\u8303\u56f4\u6216\u901a\u8fc7\u8c03\u7528 <code>delete</code> \u6216 <code>delete[]</code> \u663e\u5f0f\u9500\u6bc1\u5bf9\u8c61\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002\u5982\u679c\u4f60\u672a\u5b9a\u4e49\u6790\u6784\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6790\u6784\u51fd\u6570\uff1b\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u6765\u8bf4\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86\u3002 \u5f53\u7c7b\u7ef4\u62a4\u5fc5\u987b\u663e\u5f0f\u91ca\u653e\u7684\u8d44\u6e90\uff08\u4f8b\u5982\u7cfb\u7edf\u8d44\u6e90\u7684\u53e5\u67c4\uff0c\u6216\u6307\u5411\u5728\u7c7b\u7684\u5b9e\u4f8b\u88ab\u9500\u6bc1\u65f6\u5e94\u91ca\u653e\u7684\u5185\u5b58\u7684\u6307\u9488\uff09\u65f6\uff0c\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6790\u6784\u51fd\u6570\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_7","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u6784\u9020\u51fd\u6570 (C++) | Microsoft Learn</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF/","title":"\u6a21\u677f","text":"<p>C++\u7684\u6cdb\u578b\u7279\u6027\u9700\u8981\u4f7f\u7528\u6a21\u677f\uff08Templates\uff09\u3002\u4f7f\u7528\u6a21\u677f\u53ef\u4ee5\u8ba9\u51fd\u6570\u6216\u7c7b\u5728\u7f16\u8bd1\u65f6\u81ea\u52a8\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002\u6211\u8ba4\u4e3aC++\u7684\u6cdb\u578b\u7279\u6027\u548cRust\u7684\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff0c\u8fd9\u91cc\u5728\u4ecb\u7ecdC++\u6a21\u677f\u7684\u540c\u65f6\uff0c\u548cRust\u7684\u6cdb\u578b\u673a\u5236\u8fdb\u884c\u6bd4\u8f83\u3002</p> <pre><code>template &lt;typename T&gt;\nT max(T a, T b) {\n    return a &gt; b ? a : b;\n}\n</code></pre> <pre><code>fn max&lt;T: PartialOrd&gt;(a: T, b: T) -&gt; T {\n    if a &gt; b { a } else { b }\n}\n</code></pre> <p>\u8fd9\u662f\u4f7f\u7528C++\u548cRust\u5206\u522b\u5b9e\u73b0\u901a\u7528<code>max</code>\u51fd\u6570\u7684\u4f8b\u5b50\u3002\u4e00\u4e2a\u663e\u8457\u7684\u533a\u522b\u662fC++\u6ca1\u6709\u5bf9\u7c7b\u578b\u7684\u7ea6\u675f\uff0c\u800cRust\u901a\u8fc7trait\u6765\u7ea6\u675f\u6cdb\u578b\uff0c\u8fd9\u7c7b\u4f3c\u4e8eC++\u4e2d\u7684\u63a5\u53e3\uff08interfaces\uff09\u6216\u62bd\u8c61\u57fa\u7c7b\uff0c\u4f46\u66f4\u7075\u6d3b\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF/#_2","title":"\u7c7b\u578b\u7ea6\u675f","text":"<p>C++20\u5f15\u5165\u4e86<code>concept</code>\u7684\u6982\u5ff5\uff0c\u8fd9\u4e2a\u6982\u5ff5\u7c7b\u4f3cRust\u4e2d\u7684trait\u3002\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u7ea6\u675f\u6cdb\u578b\u7684\u53c2\u6570\u7c7b\u578b\u4e86\u3002\u5728C++20\u4e2d\uff0c<code>max</code>\u51fd\u6570\u7684\u5199\u6cd5\u6700\u597d\u6539\u6210\uff1a</p> <pre><code>#include &lt;concepts&gt;\ntemplate &lt;typename T&gt;\nrequires std::totally_ordered&lt;T&gt;  // NOTICE\nT max(T a, T b) { return a &gt; b ? a : b; }\n</code></pre> <p>\u5f53\u7136\uff0c\u7531\u4e8e\u6a21\u677f\u662f\u5728\u7f16\u8bd1\u65f6\u7279\u5316\u7684\u3002\u6240\u4ee5\u5373\u4f7f\u4e0d\u52a0\u8fd9\u884c<code>requires</code>\uff0c\u4f7f\u7528\u6a21\u677f\u5b9e\u4f8b\u5316\u65e0\u6cd5\u6bd4\u8f83\u7684\u7c7b\u578b\u8fd8\u662f\u4f1a\u62a5\u9519\uff0c\u53ea\u662f\u62a5\u9519\u4fe1\u606f\u53ef\u80fd\u5c31\u4e0d\u90a3\u4e48\u53cb\u597d\u4e86\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u6ca1\u6709\u7ea6\u675f\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6a21\u677f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u4f46\u662f\u8bed\u4e49\u4e0d\u6b63\u786e\u7684\u60c5\u51b5\uff0c\u8981\u989d\u5916\u5c0f\u5fc3\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF/#_3","title":"\u7279\u5316","text":"<p>\u6a21\u677f\u7279\u5316\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u4e3a\u6a21\u677f\u63d0\u4f9b\u7279\u5b9a\u7c7b\u578b\u7684\u7279\u6b8a\u5b9e\u73b0\u3002\u8fd9\u5305\u62ec\u5168\u7279\u5316\uff08Full Specialization\uff09\u548c\u504f\u7279\u5316\uff08Partial Specialization\uff09\u3002\u8fd9\u4e24\u79cd\u7279\u5316\u65b9\u5f0f\u5141\u8bb8\u9488\u5bf9\u7279\u5b9a\u7684\u7c7b\u578b\u6216\u7c7b\u578b\u7ec4\u5408\u63d0\u4f9b\u4f18\u5316\u6216\u7279\u6b8a\u884c\u4e3a\u7684\u6a21\u677f\u4ee3\u7801\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e3a\u6cdb\u578b\u53c2\u6570<code>T</code>\u7684\u67d0\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\u5355\u72ec\u5b9e\u73b0\u4e00\u5957\u4ee3\u7801\u3002\u5f53\u6a21\u677f\u53c2\u6570\u7684\u7c7b\u578b\u5b8c\u5168\u5339\u914d\u8fd9\u4e2a\u7279\u5316\u5b9a\u4e49\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7279\u5316\u7684\u5b9e\u73b0\u800c\u4e0d\u662f\u901a\u7528\u6a21\u677f\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u662fSTL\u4e2d\u7684<code>std::vector&lt;T&gt;</code>\u548c<code>std::vector&lt;bool</code>\u3002</p> <p>Rust\u7684\u7279\u5316\u5728\u79ef\u6781\u7684\u5f00\u53d1\u4e2d\uff0c\u5177\u4f53\u8fdb\u5ea6\u53ef\u4ee5\u53c2\u8003RFC1210\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/","title":"\u7c7b\u578b\u7cfb\u7edf","text":"<p>C++\u7684\u7c7b\u578b\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\uff1a</p> <ul> <li>\u6807\u91cf\u7c7b\u578b\uff1a\u5305\u542b\u5b9a\u4e49\u8303\u56f4\u7684\u5355\u4e2a\u503c\u7684\u7c7b\u578b\u3002 \u6807\u91cf\u5305\u62ec\u7b97\u672f\u7c7b\u578b\uff08\u6574\u578b\u6216\u6d6e\u70b9\u503c\uff09\u3001\u679a\u4e3e\u7c7b\u578b\u6210\u5458\u3001\u6307\u9488\u7c7b\u578b\u3001\u6307\u9488\u5230\u6210\u5458\u7c7b\u578b\u4ee5\u53ca <code>std::nullptr_t</code>\u3002 \u57fa\u672c\u7c7b\u578b\u901a\u5e38\u662f\u6807\u91cf\u7c7b\u578b\u3002</li> <li>\u590d\u5408\u7c7b\u578b\uff1a\u4e0d\u662f\u6807\u91cf\u7c7b\u578b\u7684\u7c7b\u578b\u3002 \u590d\u5408\u7c7b\u578b\u5305\u62ec\u6570\u7ec4\u7c7b\u578b\u3001\u51fd\u6570\u7c7b\u578b\u3001\u7c7b\uff08\u6216\u7ed3\u6784\uff09\u7c7b\u578b\u3001\u8054\u5408\u7c7b\u578b\u3001\u679a\u4e3e\u3001\u5f15\u7528\u548c\u6307\u5411\u975e\u9759\u6001\u7c7b\u6210\u5458\u7684\u6307\u9488\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#_2","title":"\u7279\u6b8a\u7c7b\u578b","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0bC\u8bed\u8a00\u4e2d\u6ca1\u6709\u7684\u7c7b\u578b\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#_3","title":"\u6307\u9488\u5230\u6210\u5458\u7c7b\u578b","text":"<p>\u6307\u9488\u5230\u6210\u5458\u7c7b\u578b\uff08Pointer to member type\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6307\u9488\uff0c\u5b83\u5141\u8bb8\u6307\u5411\u7c7b\u7684\u6210\u5458\uff08\u65e0\u8bba\u662f\u6570\u636e\u6210\u5458\u8fd8\u662f\u6210\u5458\u51fd\u6570\uff09\u3002\u8fd9\u79cd\u6307\u9488\u7c7b\u578b\u4e0e\u666e\u901a\u6307\u9488\uff08\u4f8b\u5982\u6307\u5411\u6574\u6570\u6216\u5bf9\u8c61\u7684\u6307\u9488\uff09\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u4e0d\u76f4\u63a5\u5b58\u50a8\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u662f\u5b58\u50a8\u8bbf\u95ee\u7c7b\u5185\u7279\u5b9a\u6210\u5458\u7684\u504f\u79fb\u91cf\u3002\u5728 C++ \u4e2d\uff0c\u6307\u9488\u5230\u6210\u5458\u5e38\u88ab\u7528\u4e8e\u5b9e\u73b0\u72b6\u6001\u673a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u5141\u8bb8\u52a8\u6001\u5730\u6539\u53d8\u5f53\u524d\u6fc0\u6d3b\u7684\u72b6\u6001\u5904\u7406\u51fd\u6570\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass TrafficLight {\npublic:\n    enum State {\n        RED,\n        GREEN,\n        YELLOW\n    };\n\n    TrafficLight() : currentState(&amp;TrafficLight::red) {}\n\n    void changeState(State newState) {\n        switch (newState) {\n            case RED:\n                currentState = &amp;TrafficLight::red;\n                break;\n            case GREEN:\n                currentState = &amp;TrafficLight::green;\n                break;\n            case YELLOW:\n                currentState = &amp;TrafficLight::yellow;\n                break;\n        }\n    }\n\n    void runCurrentState() {\n        (this-&gt;*currentState)();  // \u8c03\u7528\u5f53\u524d\u72b6\u6001\u5bf9\u5e94\u7684\u6210\u5458\u51fd\u6570\n    }\n\nprivate:\n    void (TrafficLight::*currentState)();  // \u6307\u5411\u6210\u5458\u51fd\u6570\u7684\u6307\u9488\n\n    void red() {\n        std::cout &lt;&lt; \"Red light - stop\" &lt;&lt; std::endl;\n    }\n\n    void green() {\n        std::cout &lt;&lt; \"Green light - go\" &lt;&lt; std::endl;\n    }\n\n    void yellow() {\n        std::cout &lt;&lt; \"Yellow light - caution\" &lt;&lt; std::endl;\n    }\n};\n\nint main() {\n    TrafficLight light;\n    light.runCurrentState();  // \u521d\u59cb\u72b6\u6001\uff1a\u7ea2\u706f\n\n    light.changeState(TrafficLight::GREEN);\n    light.runCurrentState();  // \u7eff\u706f\n\n    light.changeState(TrafficLight::YELLOW);\n    light.runCurrentState();  // \u9ec4\u706f\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#nullptr_t","title":"nullptr_t","text":"<p><code>nullptr_t</code>\u987e\u540d\u601d\u4e49\u662f\u7a7a\u6307\u9488\u5b57\u9762\u91cf<code>nullptr</code>\u7684\u7c7b\u578b\u3002\u4f46\u662f\u4ed6\u65e2\u4e0d\u662f\u6307\u9488\u7c7b\u578b\uff0c\u4e5f\u4e0d\u662f\u6307\u9488\u5230\u6210\u5458\u7c7b\u578b\u3002\u4f46\u662f\u4ed6\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a\u4efb\u4f55 \u6307\u9488 \u548c \u6307\u9488\u5230\u6210\u5458\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0cC23\u4e5f\u5f15\u5165\u4e86nullptr_t\u3002\u81f3\u4e8e\u6307\u9488\u5230\u6210\u5458\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u5b8f\u6765\u6a21\u62df\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86<code>offsetof</code>\u5b8f\uff0cLinux\u5185\u6838\u4e2d\u8457\u540d\u7684\u4f8b\u5b50\u662f\u57fa\u4e8e<code>offsetof</code>\u5b9e\u73b0\u7684<code>container_of</code>\u5b8f\u3002</p> <p>\u5f15\u7528\u7c7b\u578b\u548c\u6307\u9488\u7c7b\u578b\u7c7b\u4f3c\uff0c\u90fd\u6307\u5411\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u5185\u5b58\u3002\u4e0e\u6307\u9488\u4e0d\u540c\u7684\u662f\uff0c\u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u4e4b\u540e\u7684\u5f15\u7528\u65e0\u6cd5\u5f15\u7528\u4e0d\u540c\u7684\u5bf9\u8c61\u6216\u8bbe\u7f6e\u4e3a null\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f15\u7528\u6c38\u8fdc\u6307\u5411\u5b9a\u4e49\u65f6\u7684\u5bf9\u8c61\u3002\u5f15\u7528\u591a\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u4f20\u9012\uff0c\u4ee5\u53ca\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u8bf7\u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u4e00\u822c\u8ba4\u4e3a\u5f15\u7528\u6bd4\u6307\u9488\u66f4\u52a0\u5b89\u5168\u3002</p> <pre><code>class Box {  \nprivate:  \n    int width;  \npublic:  \n    Box(int w) : width(w) {}  \n    int&amp; getWidthRef() {  \n        return width;  \n    }  \n    int getWidth() const {  \n        return width;  \n    }  \n};  \n\nint main() {  \n    Box box(10);  \n    box.getWidthRef() = 20; // \u4fee\u6539\u79c1\u6709\u6210\u5458  \n    std::cout &lt;&lt; \"Box width: \" &lt;&lt; box.getWidth() &lt;&lt; std::endl; // \u8f93\u51fa\uff1aBox width: 20  \n    return 0;  \n}\n</code></pre> <p>\u6307\u5411\u975e\u9759\u6001\u7c7b\u6210\u5458\u7684\u6307\u9488\u7c7b\u578b\u662f\u4e00\u79cd\u4f60\u7279\u6b8a\u7684\u6307\u9488\u7c7b\u578b\uff0c\u6307\u5411\u7c7b\u7684\u6210\u5458\u800c\u975e\u5bf9\u8c61\u672c\u8eab\u3002\u4ed6\u5e38\u7528\u4e8e\u56de\u8c03\u51fd\u6570\u3001\u4e8b\u4ef6\u5904\u7406\u5668\u7b49\u590d\u6742\u7684\u573a\u666f\u3002</p> <pre><code>#include &lt;iostream&gt;  \n\nclass MyClass {  \npublic:  \n    void display() const { std::cout &lt;&lt; \"Hello from MyClass!\\n\"; }  \n};  \n\nint main() {  \n    void (MyClass::* ptrToMemberFunc)() const = &amp;MyClass::display;  \n\n    MyClass obj;  \n    (obj.*ptrToMemberFunc)(); // \u8c03\u7528\u6210\u5458\u51fd\u6570  \n\n    return 0;  \n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#_4","title":"\u679a\u4e3e\u7c7b","text":"<p>C\u8bed\u8a00\u4e5f\u6709\u679a\u4e3e\uff0cC++\u4e5f\u652f\u6301C\u8bed\u8a00\u5f0f\u7684\u679a\u4e3e\u3002\u4f46\u662fC++\u6709\u679a\u4e3e\u7c7b\uff0c\u4f9b\u4e86\u6bd4C\u4e2d\u66f4\u591a\u7684\u7279\u6027\u548c\u66f4\u5f3a\u7684\u7c7b\u578b\u5b89\u5168\u3002C\u7684\u679a\u4e3e\u66f4\u50cf\u662f\u6574\u6570\u7684\u522b\u540d\u3002</p> <pre><code>enum class Color: unsigned int { Red, Green, Blue };\n\nColor c = Color::Red;\nunsigned int num = c; // \u9519\u8bef: \u65e0\u6cd5\u76f4\u63a5\u5c06Color\u76f4\u63a5\u8f6c\u6362\uff0c\u9700\u8981\u7528static_cast\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#pod","title":"POD \u7c7b\u578b","text":"<p>POD \u7c7b\u578b\uff08Plain Old Data\uff0c\u7eaf\u65e7\u6570\u636e\uff09\uff1a\u4e00\u4e2aPOD\u7c7b\u578b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b\u6807\u91cf\u6216\u5176\u4ed6POD\u7c7b\u578b\u7684\u6570\u636e\u6210\u5458\uff0c\u6ca1\u6709\u6ca1\u6709\u7528\u6237\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u6216\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6ca1\u6709\u865a\u51fd\u6570\u548c\u57fa\u7c7b\uff08\u4e0d\u6d89\u53ca\u7ee7\u627f\u548c\u591a\u6001\u6027\uff09\uff0c\u4e14\u5176\u6570\u636e\u6210\u5458\u5bf9\u5916\u90e8\u4ee3\u7801\u5b8c\u5168\u5f00\u653e\u3002</p> <p>POD \u7c7b\u578b\u901a\u5e38\u7528\u4e8e\u5916\u90e8\u6570\u636e\u4ea4\u6362\uff0c\u4f8b\u5982\u4e0e\u7528 C \u8bed\u8a00\u7f16\u5199\u7684\u6a21\u5757\uff08\u4ec5\u5177\u6709 POD \u7c7b\u578b\uff09\u8fdb\u884c\u7684\u6570\u636e\u4ea4\u6362\u3002\u901a\u8fc7<code>std::is_trivial</code>\u4ee5\u53ca<code>std::is_standard_layout</code>\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u7c7b\u578b\u662f\u5426\u4e3a POD \u7c7b\u578b\u3002</p> <p>\u5728\u4f60\u9996\u6b21\u58f0\u660e\u53d8\u91cf\u540e\uff0c\u7a0d\u540e\u65e0\u6cd5\u66f4\u6539\u5176\u7c7b\u578b\u3002 \u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u5c06\u53d8\u91cf\u7684\u503c\u6216\u51fd\u6570\u7684\u8fd4\u56de\u503c\u590d\u5236\u5230\u5176\u4ed6\u7c7b\u578b\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9690\u5f0f\u7684\u5f15\u5165\u4e86\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u6709\u65f6\u5f88\u5fc5\u8981\uff0c\u4f46\u4e5f\u662f\u9020\u6210\u6570\u636e\u4e22\u5931\u6216\u4e0d\u6b63\u786e\u7684\u6f5c\u5728\u539f\u56e0\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#_5","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u9664\u4e86C\u8bed\u8a00\u98ce\u683c\u7684\u7c7b\u578b\u8f6c\u6362\uff0cC++\u8fd8\u67093\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff1a</p> <ul> <li>\u5728C++\u4e2d\uff0c<code>static_cast</code> \u662f\u4e00\u79cd\u7f16\u8bd1\u65f6\u68c0\u67e5\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8fdb\u884c\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002\u5b83\u6bd4\u65e7\u5f0f\u7684C\u98ce\u683c\u7c7b\u578b\u8f6c\u6362\uff08\u4f8b\u5982 <code>(int)x</code>\uff09\u63d0\u4f9b\u66f4\u4e3a\u5b89\u5168\u548c\u6709\u8868\u8fbe\u529b\u7684\u65b9\u5f0f\u3002</li> <li>\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u7684\u6709<code>dynamic_cast</code>\uff0c\u5b83\u7528\u4e8e\u591a\u6001\u7684\u7c7b\u578b\u8f6c\u6362\u3002\u9700\u8981\u865a\u51fd\u6570\u652f\u6301\uff0c\u8f6c\u6362\u5931\u8d25\u8fd4\u56denullptr(\u6307\u9488)\u6216\u629b\u51fa\u5f02\u5e38(\u5f15\u7528)\u3002</li> <li><code>reinterpret_cast</code> \u987e\u540d\u601d\u4e49\u91cd\u65b0\u89e3\u91ca\u4e8c\u8fdb\u5236\u8fdb\u884c\u8868\u793a\u3002\u8c28\u614e\u4f7f\u7528\u3002</li> </ul> <p>\u8fd93\u79cd\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\u53ef\u4ee5\u5b8c\u5168\u66ff\u4ee3C\u8bed\u8a00\u98ce\u683c\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u73b0\u4ee3C++\u4e0d\u63a8\u8350\u4f7f\u7528C\u8bed\u8a00\u98ce\u683c\u7684\u7c7b\u578b\u8f6c\u6362\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#auto","title":"auto","text":"<p>\u6211\u672c\u6765\u4ee5\u4e3a<code>auto</code>\u80fd\u5e73\u66ffRust\u4e2d\u7684<code>let</code>\u5173\u952e\u5b57\uff0c\u4f46\u662f\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6211\u9047\u5230\u7684\u9677\u9631\uff1a</p> <pre><code>// \u51fd\u6570\u8fd4\u56de\u5f15\u7528\u65f6\nclass MyClass {\n    int&amp; getData() { return data; }\n};\nMyClass obj;\nauto x = obj.getData();    // int\uff08\u62f7\u8d1d\uff09\nauto&amp; y = obj.getData();   // int&amp;\uff08\u5f15\u7528\uff09\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/#_6","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>C++ \u7c7b\u578b\u7cfb\u7edf | Microsoft Learn</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%BB%A7%E6%89%BF/","title":"\u7ee7\u627f","text":"<p>\u867d\u7136\u6211\u5e76\u4e0d\u559c\u6b22\u7ee7\u627f\uff0c\u7ee7\u627f\u592a\u590d\u6742\u5bb9\u6613\u51fa\u9519\uff0c\u4f46\u662f\u4e0d\u53ef\u5426\u8ba4\u7684\u662f\u7ee7\u627f\u786e\u5b9e\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u62bd\u8c61\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%BB%A7%E6%89%BF/#_2","title":"\u7b80\u5355\u7684\u7ee7\u627f","text":"<p>\u5982\u679c\u4e0d\u540c\u7c7b\u578b\u7684\u7ee7\u627f\u5173\u7cfb\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u90a3\u4e48\u662f\u5f88\u6e05\u6670\u7684\u3002\u4f8b\u5982\uff1a</p> <pre><code>using namespace std;\nclass Animal {\npublic:\n  virtual void eat() const { cout &lt;&lt; \"I eat like a generic Animal.\" &lt;&lt; endl; }\n  virtual ~Animal() {}\n};\n\nclass Wolf : public Animal {\npublic:\n  void eat() const { cout &lt;&lt; \"I eat like a wolf!\" &lt;&lt; endl; }\n};\n\nclass Fish : public Animal {\npublic:\n  void eat() const { cout &lt;&lt; \"I eat like a fish!\" &lt;&lt; endl; }\n};\n\nclass GoldFish : public Fish {\npublic:\n  void eat() const { cout &lt;&lt; \"I eat like a goldfish!\" &lt;&lt; endl; }\n};\n\nclass OtherAnimal : public Animal {};\n\nint main() {\n  std::vector&lt;Animal *&gt; animals;\n  animals.push_back(new Animal());\n  animals.push_back(new Wolf());\n  animals.push_back(new Fish());\n  animals.push_back(new GoldFish());\n  animals.push_back(new OtherAnimal());\n\n  for (std::vector&lt;Animal *&gt;::const_iterator it = animals.begin();\n       it != animals.end(); ++it) {\n    (*it)-&gt;eat();\n    delete *it;\n  }\n\n  return 0;\n}\n</code></pre> <p>\u8fd9\u91cc\u4f7f\u7528<code>virtual</code>\u4fee\u9970\u4e86\u57fa\u7c7b<code>Animal</code>\u7684<code>eat()</code>\u548c\u6790\u6784\u51fd\u6570\uff0c\u8ba9\u8be5\u51fd\u6570\u6210\u4e3a \u865a\u51fd\u6570\u3002\u6d3e\u751f\u7c7b\u4e2d\u5bf9\u6b64\u51fd\u6570\u7684\u4e0d\u540c\u5b9e\u73b0\u90fd\u4f1a\u7ee7\u627f\u8fd9\u4e00\u4fee\u9970\u7b26\uff0c\u5141\u8bb8\u540e\u7eed\u6d3e\u751f\u7c7b\u8986\u76d6\uff0c\u8fbe\u5230\u8fdf\u7ed1\u5b9a\u7684\u6548\u679c\u3002\u5373\u4fbf\u662f\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e5f\u4f1a\u8c03\u7528\u5230\u6d3e\u751f\u7c7b\u4e2d\u7684\u7248\u672c\u3002</p> <p>Java\u3001Python\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u90fd\u662f\u201c\u865a\u51fd\u6570\u201d\uff0c\u4e0d\u9700\u8981\u7279\u6b8a\u58f0\u660e\u6d3e\u751f\u7c7b\u5c31\u53ef\u4ee5\u8986\u76d6\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%BB%A7%E6%89%BF/#vptr-vtable","title":"\u7b80\u5355\u7684 vptr &amp; vtable","text":"<p>\u7531\u4e8eC++\u7684\u8fd0\u884c\u65f6\u591a\u6001\u6027\u8d28\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u7c7b\u7684\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u8c03\u7528\u7684\u51fd\u6570\u53ef\u80fd\u6765\u81ea\u4ed6\u7684\u6d3e\u751f\u7c7b\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cC++\u521b\u5efa\u4e86 vptr \u548c vtable\u3002\u4e0b\u9762\u4ecb\u7ecd\u5177\u4f53\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u4e3b\u51fd\u6570\uff1a</p> <pre><code>int main() {\n  Animal *wolf_1 = new Wolf();\n  Animal *wolf_2 = new Wolf();\n  Animal *fish = new Fish();\n}\n</code></pre> <p>vtable\u662f\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u7684\uff0c\u4ed6\u662f\u4e00\u7cfb\u5217\u51fd\u6570\u6307\u9488\uff1bvptr\u662f\u5c5e\u4e8e\u4e00\u4e2a\u5b9e\u4f8b\u7684\uff0c\u5b83\u6307\u5411vtable\u3002</p> <pre><code>(gdb) x/xg wolf_1\n0x55555556aeb0: 0x0000555555557cb8\n(gdb) x/xg wolf_2\n0x55555556aed0: 0x0000555555557cb8\n(gdb) x/xg fish\n0x55555556aef0: 0x0000555555557d30\n</code></pre> <p>\u987a\u7740vptr\uff0c\u67e5\u770bvtable\u7684\u5185\u5bb9\u3002\u4e0d\u96be\u53d1\u73b0\u5c31\u662f\u6307\u5411\u865a\u51fd\u6570\u7684\u6307\u9488\u3002\u5e76\u4e14\u865a\u51fd\u6570\u4f4d\u4e8e\u7a0b\u5e8f\u7684RODATA\u533a\u57df\uff0c\u4e5f\u5c31\u662f\u5168\u5c40\u53ea\u8bfb\u533a\u3002</p> <pre><code>(gdb) x/2xg  0x0000555555557cb8\n0x555555557cb8 &lt;_ZTV4Wolf+16&gt;:  0x0000555555555400      0x0000555555555440\n(gdb) info address Wolf::~Wolf\nSymbol \"Wolf::~Wolf()\" is a function at address 0x555555555440.\n(gdb) info address Wolf::eat() const \nSymbol \"Wolf::eat() const\" is a function at address 0x555555555400.\n</code></pre> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u7b80\u5355\u7684\u8ba4\u8bc6<code>vptr</code>\u548c<code>vtable</code>\uff1a</p> <ol> <li>\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u90fd\u5b58\u50a8\u7740\u4e00\u4e2a<code>vptr</code>\uff0c\u4e00\u822c\u662f\u653e\u5728offset=0\u7684\u5730\u65b9\uff0c\u5b83\u6307\u5411\u5b9e\u4f8b\u5bf9\u5e94\u7684<code>vtable</code>\u3002</li> <li>\u6bcf\u4e2a\u7c7b\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a<code>vtable</code>\uff0c\u5b58\u50a8\u5728RODATA\u533a\u57df\uff0c\u5b58\u50a8\u7740\u6240\u6709\u865a\u51fd\u6570\u7684\u5730\u5740\u3002</li> </ol> <p>\u66f4\u5177\u4f53\u7684\u884c\u4e3a\u662f\u7531\u7f16\u8bd1\u5668\u7684\u8bbe\u8ba1\u51b3\u5b9a\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E7%BB%A7%E6%89%BF/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>vTable And vPtr in C++ - GeeksforGeeks</li> <li>\u865a\u51fd\u6570 - \u7ef4\u57fa\u767e\u79d1\uff0c\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E8%B0%83%E7%94%A8%E8%A7%84%E8%8C%83/","title":"\u8c03\u7528\u89c4\u8303","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E8%B0%83%E7%94%A8%E8%A7%84%E8%8C%83/#what-happened-in-stack-when-a-function-is-called","title":"What happened in stack when a function is called?","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint multiply(int a, int b) {\n    int multiplication = a * b;\n    return multiplication;\n}\n\nint main() {\n    int x = 5;\n    int y = 10;\n    int result = multiply(x, y);\n    printf(\"The result is: %d\\n\", result);\n    return 0;\n}\n</code></pre> <p>compiled with:</p> <pre><code>$ gcc --version\ngcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\n$ gcc -m32 -g hello.c\n</code></pre> <p>Given that the ISA is 32bit x86:</p> <ol> <li>CALLER <code>push</code> the arguments into stack, from right to left.</li> <li>CALLER <code>call</code> the target function, the <code>%eip</code> is pushed into stack.</li> <li>CALLEE <code>push</code> <code>%ebp</code> into stack.</li> <li>CALLEE sub <code>%esp</code> to reserve space for local variables and temporary variables.</li> <li>CALLEE <code>leave</code> and <code>ret</code>, <ol> <li><code>leave</code> -&gt; <code>mov %ebp,%esp;   pop %ebp;</code>. The <code>%ebp</code> and <code>%esp</code> of CALLER is restored.</li> <li><code>ret</code> -&gt; <code>pop %eip</code>. The <code>%eip</code> saved is restored.</li> </ol> </li> <li>CALLEE add <code>%esp</code> to clear the space for argument passing.</li> </ol> <pre><code>int multiply(int a, int b) {\n    119d:       55                      push   %ebp\n    119e:       89 e5                   mov    %esp,%ebp\n    11a0:       83 ec 10                sub    $0x10,%esp\n    11a3:       e8 74 00 00 00          call   121c &lt;__x86.get_pc_thunk.ax&gt;\n    11a8:       05 30 2e 00 00          add    $0x2e30,%eax\n    ...\n    11ba:       c9                      leave\n    11bb:       c3                      ret\n}\n\nint result = multiply(x, y);\n    11e7:       ff 75 f0                push   -0x10(%ebp)\n    11ea:       ff 75 ec                push   -0x14(%ebp)\n    11ed:       e8 ab ff ff ff          call   119d &lt;multiply&gt;\n    11f2:       83 c4 08                add    $0x8,%esp\n    11f5:       89 45 f4                mov    %eax,-0xc(%ebp)\n</code></pre> <p>We notice that there is a call to <code>__x86.get_pc_thunk.ax</code>. The function is to transfer the contents of the <code>%eip</code> register to the <code>%eax</code> register. It is equivalent to <code>mov %eip, %eax</code>. This function is used in PIC (position independent code) on x86. It loads the location of <code>%eip</code> into the <code>%eax</code> register, thereby enabling access to the internal data of the module (such as global variables). The reason is that there is no instruction in the x86 instruction set to directly read <code>%eip</code>.</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E8%B0%83%E7%94%A8%E8%A7%84%E8%8C%83/#what-information-does-a-function-stack-frame-generally-contain","title":"What information does a function stack frame generally contain ?","text":"<ul> <li>Return Address: The <code>call</code> instruction saves. This is the memory address of the instruction in the calling code where the program should resume execution after the function completes. When the function finishes, the CPU uses this address to transfer control back to the caller.</li> <li>Parameters and Local Variables: The stack frame allocates space for the function's parameters (values passed from the CALLER) and local variables declared within the function (values created in CALLEE). These values are stored on the stack frame and can be accessed and modified by the function during its execution.</li> <li>Base Pointer: The base pointer (<code>%ebp</code> on x86 architectures) is a pointer that references the current stack frame's base address. It is useful for accessing local variables and function parameters through offsets from the base pointer.</li> <li>Function State Information: (Not shown in the example code)Some additional information related to the function's state may be stored on the stack frame, such as callee-saved registers (registers whose values must be preserved across function calls) and other bookkeeping data.</li> </ul> <p>C\u8bed\u8a00\u63d0\u4f9b\u4e86\u7a33\u5b9a\u7684ABI\u3002C\u8bed\u8a00\u51fd\u6570\u8c03\u7528\u89c4\u8303\u53eb\u505a<code>cdecl</code>\uff0c\u662f\u88abgcc, clang\u7f16\u8bd1\u5668\u9ed8\u8ba4\u88ab\u4f7f\u7528\u7684\u3002\u5f88\u591a\u5176\u4ed6\u8bed\u8a00\u4e5f\u4f9d\u8d56C\u8bed\u8a00\u7684ABI\u548cC\u7f16\u5199\u7684\u5e93\u8fdb\u884c\u4ea4\u4e92\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u8c03\u7528\u89c4\u8303\uff0c\u5982Pascal Call(<code>stdcall</code>), <code>fastcall</code>, linux system call...</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%87%8D%E8%BD%BD/","title":"\u91cd\u8f7d","text":"<p>C++ \u5141\u8bb8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u4e2d\u7684\u67d0\u4e2a\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u6307\u5b9a\u591a\u4e2a\u5b9a\u4e49\uff0c\u5206\u522b\u79f0\u4e3a\u51fd\u6570\u91cd\u8f7d\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%87%8D%E8%BD%BD/#_2","title":"\u51fd\u6570\u91cd\u8f7d","text":"<p>\u5229\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u53c2\u6570\uff08\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u65e0\u5173\uff09\u7684\u7c7b\u578b\u548c\u6570\u91cf\u4e3a\u51fd\u6570\u63d0\u4f9b\u4e0d\u540c\u7684\u8bed\u4e49\u3002\u4f8b\u5982\uff1a</p> <pre><code>#include &lt;iostream&gt;\n\nint volume(int s) {  // \u7acb\u65b9\u4f53\u7684\u4f53\u79ef\u3002\n  return s * s * s;\n}\n\ndouble volume(double r, int h) {  // \u5706\u67f1\u4f53\u7684\u4f53\u79ef\u3002\n  return 3.1415926 * r * r * static_cast&lt;double&gt;(h);\n}\n\nlong volume(long l, int b, int h) {  // \u957f\u65b9\u4f53\u7684\u4f53\u79ef\u3002\n  return l * b * h;\n}\n\nint main() {\n  std::cout &lt;&lt; volume(10) &lt;&lt; endl;\n  std::cout &lt;&lt; volume(2.5, 8) &lt;&lt; endl;\n  std::cout &lt;&lt; volume(100l, 75, 15) &lt;&lt; endl;\n}\n</code></pre> <p>\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u4e00\u5b9a\u89c4\u5219\uff0c\u51b3\u5b9a<code>volume</code>\u5e94\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u73b0\u3002</p> <p>Rust\u5e76\u6ca1\u6709\u51fd\u6570\u91cd\u8f7d\u3002\u6240\u4ee5\u7c7b\u4f3c\u7684\u4ee3\u7801\u5728Rust\u4e2d\u53ef\u80fd\u4f1a\u53eb<code>cube_volume</code>, <code>cubic_volume</code>, <code>cylinder_volume</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%87%8D%E8%BD%BD/#_3","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u662f\u901a\u8fc7\u5bf9\u8fd0\u7b97\u7b26\u7684\u91cd\u65b0\u5b9a\u4e49\uff0c\u4f7f\u5f97\u5176\u652f\u6301\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u8fd0\u7b97\u64cd\u4f5c\u3002\u8fd0\u7b97\u7b26\u91cd\u8f7d\u672c\u8d28\u4e0a\u4e5f\u662f\u51fd\u6570\u91cd\u8f7d\uff0c\u5b83\u4eec\u53ef\u4ee5\u770b\u505a\u51fd\u6570\u540d\u4e3a <code>operator+</code>\u3001<code>operator-</code>\u3001<code>operator*</code>\u3001<code>operator++</code>\u3001<code>operator&lt;&lt;</code>\u7b49\u7b49\u7684\u51fd\u6570\u3002</p> <p>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5b58\u5728\u5982\u4e0b\u9650\u5236\uff1a</p> <ul> <li>\u53ea\u80fd\u5bf9\u73b0\u6709\u7684\u8fd0\u7b97\u7b26\u8fdb\u884c\u91cd\u8f7d\uff0c\u4e0d\u80fd\u81ea\u884c\u5b9a\u4e49\u65b0\u7684\u8fd0\u7b97\u7b26\u3002</li> <li>\u4ee5\u4e0b\u8fd0\u7b97\u7b26\u4e0d\u80fd\u88ab\u91cd\u8f7d\uff1a<code>::</code>\uff08\u4f5c\u7528\u57df\u89e3\u6790\uff09\uff0c<code>.</code>\uff08\u6210\u5458\u8bbf\u95ee\uff09\uff0c<code>.*</code>\uff08\u901a\u8fc7\u6210\u5458\u6307\u9488\u7684\u6210\u5458\u8bbf\u95ee\uff09\uff0c<code>?:</code>\uff08\u4e09\u76ee\u8fd0\u7b97\u7b26\uff09\u3002</li> <li>\u91cd\u8f7d\u540e\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u8fd0\u7b97\u4f18\u5148\u7ea7\uff0c\u8fd0\u7b97\u64cd\u4f5c\u6570\uff0c\u7ed3\u5408\u65b9\u5411\u4e0d\u5f97\u6539\u53d8\u3002</li> <li>\u5bf9 <code>&amp;&amp;</code>\uff08\u903b\u8f91\u4e0e\uff09\u548c <code>||</code>\uff08\u903b\u8f91\u6216\uff09\u7684\u91cd\u8f7d\u5931\u53bb\u77ed\u8def\u6c42\u503c\u3002</li> </ul> <p>\u4ee5\u91cd\u8f7d\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4e3a\u4f8b\u3002\u5728\u4f7f\u7528STL\u5bb9\u5668\u548c\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u7528\u5230<code>&lt;</code>\u8fd0\u7b97\u7b26\uff08\u53ea\u91cd\u8f7d <code>&lt;</code> \u8fd0\u7b97\u7b26\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5df2\u8db3\u591f\uff0c\u4f8b\u5982\u4f7f\u7528<code>std::sort</code>\uff0c\u4f46\u5b8c\u6574\u5730\u652f\u6301\u6240\u6709\u6bd4\u8f83\u901a\u5e38\u662f\u4e00\u4e2a\u597d\u7684\u5b9e\u8df5\u3002\uff09</p> <pre><code>struct Time {\n  int time;\n  int num;\n\n  bool operator&lt;(const Time &amp;other) const {\n    if (time == other.time) {\n      return num &lt; other.num;\n    }\n    return time &lt; other.time;\n  }\n};\n</code></pre> <p>\u4e00\u4e9b\u8d44\u6599\u4f1a\u8bf4Rust\u6ca1\u6709\u91cd\u8f7d\uff0c\u5b9e\u9645\u4e0a\u4ed6\u6307\u7684\u662f\u51fd\u6570\u91cd\u8f7d\u3002Rust\u662f\u652f\u6301\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u529f\u80fd\u7684\u3002\u53c2\u8003core::ops\u3002\u5e76\u4e14\u4e0d\u540c\u4e8eC++\uff0cRust\u5bf9\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u5fc5\u987b\u662f\u81ea\u6d3d\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","title":"\u9519\u8bef\u5904\u7406","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#_2","title":"\u5f02\u5e38","text":"<p><code>std::exception</code>\u662f\u6807\u51c6\u5e93\u4e2d\u6240\u6709\u5f02\u5e38\u7684\u57fa\u7c7b\u3002<code>stdexcept</code>\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u5f88\u591a\u751f\u6210exception\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982<code>logic_error</code>\u3002\u5982\u679c\u8981\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u6700\u597d\u4e5f\u6d3e\u751f\u81ea<code>std::exception</code>\u3002C++ \u65e2\u4e0d\u63d0\u4f9b\u4e5f\u4e0d\u9700\u8981 <code>finally</code> \u5757\u6765\u786e\u4fdd\u5728\u5f15\u53d1\u5f02\u5e38\u65f6\u91ca\u653e\u6240\u6709\u8d44\u6e90\uff0c\u800c\u662f\u501f\u52a9RAII\u3002</p> <p>C++\u4f7f\u7528try-catch\u6765\u5904\u7406\u5f02\u5e38\uff0c\u5982\u679c\u672a\u627e\u5230\u53ef\u7528\u7684 catch \u5757\uff0c\u5219\u8c03\u7528 <code>std::terminate</code> \u5e76\u4e14\u7a0b\u5e8f\u4f1a\u9000\u51fa\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u6700\u597d\u4f7f\u7528<code>noexcept</code>\u89c4\u8303\u3002</p> <pre><code>void MyFunction(int i) noexcept;\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#raii","title":"\u5f02\u5e38\u5b89\u5168\u548cRAII","text":"<p>\u8981\u5b9e\u73b0\u5f02\u5e38\u5b89\u5168\u72b6\u6001\uff0c\u51fd\u6570\u5fc5\u987b\u786e\u4fdd\u9500\u6bc1\u5176\u4f7f\u7528 <code>malloc</code> \u6216 <code>new</code> \u5206\u914d\u7684\u5bf9\u8c61\u4ee5\u53ca\u5173\u95ed\u6216\u91ca\u653e\u6240\u6709\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u53e5\u67c4\uff09\uff0c\u5373\u4f7f\u5f15\u53d1\u5f02\u5e38\u65f6\u4e5f\u662f\u5982\u6b64\u3002 </p> <p>\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316 (RAII) \u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5c06\u8d44\u6e90\u548c\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\uff0c\u53d8\u91cf\u521d\u59cb\u5316\u65f6\u83b7\u53d6\u8d44\u6e90\uff0c\u53d8\u91cf\u7ed3\u675f\u751f\u547d\u5468\u671f\u65f6\u91ca\u653e\u8d44\u6e90\u3002\u5728C++\u4e2d\uff0c\u4e3b\u8981\u662f\u4f9d\u8d56\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u5b9e\u73b0\u3002</p> <p>\u5f53\u51fd\u6570\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u6b63\u5e38\u8fd4\u56de\u6216\u56e0\u4e3a\u5f02\u5e38\uff0c\u8c03\u7528\u6240\u6709\u5b8c\u5168\u6784\u9020\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570\u3002 RAII \u5305\u88c5\u5668\u5bf9\u8c61\uff08\u5982\u667a\u80fd\u6307\u9488\uff09\u5c06\u5728\u5176\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528\u5408\u9002\u7684 delete \u6216 close \u51fd\u6570\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%9F%BA%E7%A1%80/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>\u73b0\u4ee3 C++ \u5904\u7406\u5f02\u5e38\u548c\u9519\u8bef\u7684\u6700\u4f73\u505a\u6cd5 | Microsoft Learn</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/algorithm/","title":"\u7b97\u6cd5","text":"<p>\u7b97\u6cd5\u662f C++ \u6807\u51c6\u5e93\u7684\u57fa\u7840\u90e8\u5206\u3002 \u7b97\u6cd5\u4e0d\u4e0e\u5bb9\u5668\u672c\u8eab\u4e00\u8d77\u4f7f\u7528\uff0c\u800c\u4e0e\u8fed\u4ee3\u5668\u4e00\u8d77\u4f7f\u7528\u3002\u7b97\u6cd5\u4e3b\u8981\u5305\u542b\u5728\u5934\u6587\u4ef6<code>&lt;algorithm&gt;</code>\u548c<code>&lt;numeric&gt;</code>\u4e2d\u3002\u8fd9\u4e9b\u7b97\u6cd5\u5e7f\u6cdb\u8986\u76d6\u4e86\u4ece\u6392\u5e8f\u548c\u641c\u7d22\u5230\u6570\u503c\u8ba1\u7b97\u548c\u6570\u636e\u64cd\u4f5c\u7684\u591a\u79cd\u529f\u80fd\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/algorithm/#_2","title":"\u5806","text":"<p>\u6700\u5927\u5806\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u6709\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li><code>make_heap(begin, end)</code>\uff1a\u4ece\u73b0\u6709\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(lg n)\u3002</li> <li><code>push_heap(begin, end)</code>\uff1a\u6dfb\u52a0\u5143\u7d20\u5230\u5806\u4e2d\u3002\u9700\u8981\u9996\u5148\u5c06\u5143\u7d20\u653e\u5230\u8fed\u4ee3\u5668\u7684\u5c3e\u90e8\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(lg n)\u3002</li> <li><code>pop_heap(begin, end)</code>\uff1a\u79fb\u9664\u5806\u9876\u5143\u7d20\u3002\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0c\u5143\u7d20\u4f1a\u88ab\u653e\u5230\u8fed\u4ee3\u5668\u7684\u5c3e\u90e8\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(lg n)\u3002</li> </ul> <p>\u4ed6\u4eec\u7684\u4f7f\u7528\u65b9\u6cd5\u5e76\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\uff0c\u53ef\u4ee5\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n  vector&lt;int&gt; apples = {1, 2, 3, 5, 2};\n  make_heap(apples.begin(), apples.end());\n  apples.push_back(6);\n  push_heap(apples.begin(), apples.end());\n  apples.push_back(0);\n  push_heap(apples.begin(), apples.end());\n  for (int i = 0; i &lt; 7; i++) {\n    pop_heap(apples.begin(), apples.end());\n    cout &lt;&lt; apples.back() &lt;&lt; \" \";\n    apples.pop_back();\n  }\n  cout &lt;&lt; endl;\n  // \u8f93\u51fa 6 5 3 2 2 1 0\n}\n</code></pre> <p>\u53e6\u5916\uff0c\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u5806\u3002\u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u201c\u66f4\u5927\u201d\u7684\u6982\u5ff5\uff08\u8fd9\u5bf9\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u5c24\u5176\u91cd\u8981\uff09\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f20\u5165\u4e00\u4e2a\u6bd4\u8f83\u5668\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u6539\u6210\u4e0b\u9762\u7684\u6700\u5c0f\u5806\uff08\u9ed8\u8ba4\u7684\u6bd4\u8f83\u5668\u662f<code>std::less</code>\uff09\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n  vector&lt;int&gt; apples = {1, 2, 3, 5, 2};\n  make_heap(apples.begin(), apples.end(), std::greater&lt;int&gt;());\n  apples.push_back(6);\n  push_heap(apples.begin(), apples.end(), std::greater&lt;int&gt;());\n  apples.push_back(0);\n  push_heap(apples.begin(), apples.end(), std::greater&lt;int&gt;());\n  for (int i = 0; i &lt; 7; i++) {\n    pop_heap(apples.begin(), apples.end(), std::greater&lt;int&gt;());\n    cout &lt;&lt; apples.back() &lt;&lt; \" \";\n    apples.pop_back();\n  }\n  cout &lt;&lt; endl;\n  // 0 1 2 2 3 5 6\n}\n</code></pre> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86<code>priority_queue</code>\u5bb9\u5668\uff0c\u6bd4\u4e0a\u9762\u624b\u52a8\u7ef4\u62a4\u5806\u66f4\u597d\u3002\u5982\u679c\u4f7f\u7528<code>priority_queue</code>\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u662f</p> <pre><code>#include &lt;queue&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; pq ;\n    vector&lt;int&gt; apples = {1, 2, 3, 5, 2};\n    for (int apple : apples) {\n        pq.push(apple);\n    }\n    pq.push(6);\n    pq.push(0);\n    while (!pq.empty()) {\n        cout &lt;&lt; pq.top() &lt;&lt; \" \";\n        pq.pop();\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u7b97\u6cd5\u5e93\u8fd8\u63d0\u4f9b\u4e86\u5806\u6392\u5e8f\u7b97\u6cd5<code>sort_heap(begin, end)</code></p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/algorithm/#_3","title":"\u6392\u5e8f","text":"<pre><code>// \u6392\u5e8f\nsort(begin, end)                 // \u6392\u5e8f\nstable_sort(begin, end)          // \u7a33\u5b9a\u6392\u5e8f\npartial_sort(begin, middle, end) // \u90e8\u5206\u6392\u5e8f\n\n// \u4e8c\u5206\u67e5\u627e\nbinary_search(begin, end, value) // \u4e8c\u5206\u67e5\u627e\nlower_bound(begin, end, value)   // \u627e\u7b2c\u4e00\u4e2a\u4e0d\u5c0f\u4e8evalue\u7684\u4f4d\u7f6e\nupper_bound(begin, end, value)   // \u627e\u7b2c\u4e00\u4e2a\u5927\u4e8evalue\u7684\u4f4d\u7f6e\n\nmerge(begin1, end1, begin2, end2, dest)  // \u5408\u5e76\u6709\u5e8f\u5e8f\u5217\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/algorithm/#_4","title":"\u96c6\u5408","text":"<pre><code>// \u96c6\u5408\u64cd\u4f5c\nset_union(begin1, end1, begin2, end2, dest)         // \u5e76\u96c6\nset_intersection(begin1, end1, begin2, end2, dest)   // \u4ea4\u96c6\nset_difference(begin1, end1, begin2, end2, dest)     // \u5dee\u96c6\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/algorithm/#_5","title":"\u5176\u4ed6","text":"<pre><code>for_each(begin, end, f)          // \u5bf9\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u64cd\u4f5c\nremove(begin, end, value)        // \u79fb\u9664\u7279\u5b9a\u503c\nremove_if(begin, end, pred)      // \u6309\u6761\u4ef6\u79fb\u9664\nreplace(begin, end, old_val, new_val) // \u66ff\u6362\u503c\nreverse(begin, end)              // \u53cd\u8f6c\u5e8f\u5217\nrotate(begin, middle, end)       // \u65cb\u8f6c\u5e8f\u5217\nshuffle(begin, end, gen)         // \u968f\u673a\u6253\u4e71\n\n// \u590d\u5236\ncopy(begin, end, dest)           // \u590d\u5236\ncopy_if(begin, end, dest, pred)  // \u6309\u6761\u4ef6\u590d\u5236\ncopy_n(begin, n, dest)          // \u590d\u5236n\u4e2a\u5143\u7d20\n\n// \u8f6c\u6362\u548c\u751f\u6210\ntransform(begin, end, dest, op)  // \u8f6c\u6362\u5143\u7d20\ngenerate(begin, end, gen)        // \u751f\u6210\u5143\u7d20\nfill(begin, end, value)         // \u586b\u5145\u5143\u7d20\n\n// \u67e5\u627e\u548c\u8ba1\u6570\nfind(begin, end, value)          // \u67e5\u627e\u5143\u7d20\nfind_if(begin, end, pred)        // \u6309\u6761\u4ef6\u67e5\u627e\ncount(begin, end, value)         // \u8ba1\u6570\ncount_if(begin, end, pred)       // \u6309\u6761\u4ef6\u8ba1\u6570\n\n// \u6bd4\u8f83\nequal(begin1, end1, begin2)      // \u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\nmismatch(begin1, end1, begin2)   // \u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\n\n// \u6700\u503c\nmin(a, b)                        // \u6700\u5c0f\u503c\nmax(a, b)                        // \u6700\u5927\u503c\nminmax(a, b)                     // \u540c\u65f6\u8fd4\u56de\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\nmin_element(begin, end)          // \u627e\u6700\u5c0f\u5143\u7d20\nmax_element(begin, end)          // \u627e\u6700\u5927\u5143\u7d20\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/container/","title":"\u6570\u636e\u7ed3\u6784/\u5bb9\u5668","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/container/#_2","title":"\u5e8f\u5217\u5bb9\u5668","text":"<p>\u5e8f\u5217\u5bb9\u5668\u5728\u5185\u5b58\u4e2d\u6309\u987a\u5e8f\u5b58\u50a8\u6570\u636e\u3002</p> <ul> <li>vector\uff1a\u5411\u91cf\uff0c\u53ef\u4ee5\u52a8\u6001\u589e\u957f\uff0c\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u3002\u5728\u5c3e\u90e8\u4e4b\u5916\u7684\u4f4d\u7f6e\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u53ef\u80fd\u8f83\u6162\u3002</li> <li>deque\uff1a\u53cc\u7aef\u961f\u5217\uff0c\u652f\u6301\u5728\u5934\u5c3e\u4e24\u7aef\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002<ul> <li><code>priority_queue</code>\uff1a\u4f18\u5148\u961f\u5217\uff0c\u6216\u8005\u8bf4\u662f\u6700\u5927\u5806</li> </ul> </li> <li>list\uff1a\u53cc\u5411\u94fe\u8868\uff0c\u652f\u6301\u5728\u4efb\u4f55\u4f4d\u7f6e\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u4f46\u4e0d\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u3002</li> <li>forward_list\uff1a\u5355\u5411\u94fe\u8868\uff0c\u53ea\u652f\u6301\u5355\u5411\u987a\u5e8f\u8bbf\u95ee\uff0c\u5728\u4efb\u4f55\u4f4d\u7f6e\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u5f88\u5feb\u3002</li> <li>array\uff1a\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\uff0c\u4f46\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5fc5\u987b\u786e\u5b9a\u4e14\u4e4b\u540e\u4e0d\u80fd\u66f4\u6539\u3002</li> <li>string\uff1a\u4e0e vector \u7c7b\u4f3c\uff0c\u4e13\u95e8\u7528\u4e8e\u5b57\u7b26\u7684\u5bb9\u5668\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/container/#vector","title":"vector","text":"<p>\u6784\u9020\u51fd\u6570\u6709\u5f88\u591a\uff0c\u5e38\u7528\u7684\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a</p> <pre><code>std::vector&lt;int&gt; v(5, 10); // \u521b\u5efa\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684vector\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f10\nstd::vector&lt;int&gt; v(5); // \u521b\u5efa\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684vector\uff0c\u6bcf\u4e2a\u5143\u7d20\u9ed8\u8ba4\u521d\u59cb\u5316\uff08\u5bf9\u4e8eint\u7c7b\u578b\uff0c\u521d\u59cb\u5316\u4e3a0\uff09\nstd::vector&lt;int&gt; v = {1, 2, 3, 4, 5}; // \u4f7f\u7528\u5217\u8868\u521d\u59cb\u5316vector\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/container/#_3","title":"\u5173\u8054\u5bb9\u5668","text":"<p>\u5173\u8054\u5bb9\u5668\u4f7f\u7528\u6bd4\u8f83\u51fd\u6570\u81ea\u52a8\u6392\u5e8f\uff0c\u5e76\u63d0\u4f9b\u5feb\u901f\u7684\u67e5\u627e\u80fd\u529b\u3002</p> <ul> <li>set\uff1a\u96c6\u5408\uff0c\u5305\u542b\u952e\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u6bcf\u4e2a\u952e\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>multiset\uff1a\u591a\u91cd\u96c6\u5408\uff0c\u4e0e set \u76f8\u4f3c\uff0c\u4f46\u5141\u8bb8\u952e\u503c\u91cd\u590d\u3002</li> <li>map\uff1a\u6620\u5c04\uff0c\u57fa\u4e8e\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u952e\u53ea\u80fd\u5173\u8054\u4e00\u4e2a\u503c\u3002\u4ed6\u952e\u662f\u6309\u7167\u987a\u5e8f\u6392\u5217\u7684\uff0c\u800c\u4e0d\u662f\u54c8\u5e0c\u8868\uff0c\u5e95\u5c42\u901a\u5e38\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u5b9e\u73b0\u3002<ul> <li>C++\u7684map\uff0c\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684key\u8fdb\u884c\u7d22\u5f15\uff0c\u4f1a\u8fd4\u56devalue\u7c7b\u578b\u9ed8\u8ba4\u503c\u3002</li> </ul> </li> <li>multimap\uff1a\u591a\u91cd\u6620\u5c04\uff0c\u4e0e map \u76f8\u4f3c\uff0c\u4f46\u4e00\u4e2a\u952e\u53ef\u4ee5\u5173\u8054\u591a\u4e2a\u503c\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/container/#_4","title":"\u65e0\u5e8f\u5173\u8054\u5bb9\u5668","text":"<p>\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u63d0\u4f9b\u5e73\u5747\u5e38\u6570\u65f6\u95f4\u7684\u5feb\u901f\u8bbf\u95ee\u3002</p> <ul> <li>unordered_set\uff1a\u65e0\u5e8f\u96c6\u5408\uff0c\u5305\u542b\u952e\u7684\u96c6\u5408\uff0c\u4f46\u4e0d\u81ea\u52a8\u6392\u5e8f\u3002</li> <li>unordered_multiset\uff1a\u65e0\u5e8f\u591a\u91cd\u96c6\u5408\uff0c\u5141\u8bb8\u952e\u503c\u91cd\u590d\u3002</li> <li>unordered_map\uff1a\u65e0\u5e8f\u6620\u5c04\uff0c\u57fa\u4e8e\u952e\u503c\u5bf9\uff0c\u4f46\u4e0d\u6392\u5e8f\u3002</li> <li>unordered_multimap\uff1a\u65e0\u5e8f\u591a\u91cd\u6620\u5c04\uff0c\u4e00\u4e2a\u952e\u53ef\u4ee5\u5173\u8054\u591a\u4e2a\u503c\u3002</li> </ul> <p>\u4eceC++17\u5f00\u59cb\uff0c\u652f\u6301\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u904d\u5386\u6620\u5c04\u3002</p> <pre><code>for (auto &amp;[k,v] : map) {\n\n}\n</code></pre> <p>\u5728STL\uff08\u6807\u51c6\u6a21\u677f\u5e93\uff09\u4e2d\uff0c\u5bb9\u5668\u7684\u8bbe\u8ba1\u4f18\u5316\u65b9\u5411\u4fa7\u91cd\u4e8e\u541e\u5410\u91cf\uff08throughput\uff09 \u800c\u975e \u5ef6\u8fdf\uff08latency\uff09\u3002\u4f8b\u5982\uff0cSTL\u5bb9\u5668\u9ed8\u8ba4\u7684\u5185\u5b58\u7ba1\u7406\u7b56\u7565\uff08\u5982\u52a8\u6001\u6269\u5bb9\u3001\u5185\u5b58\u6c60\uff09\u503e\u5411\u4e8e\u51cf\u5c11\u603b\u4f53\u65f6\u95f4\u5f00\u9500\uff0c\u4f46\u53ef\u80fd\u589e\u52a0\u5355\u6b21\u64cd\u4f5c\u7684\u6ce2\u52a8\uff0c<code>std::vector</code>\u6269\u5bb9\u65f6\u9700\u590d\u5236\u539f\u6709\u6570\u636e\uff0c\u5bfc\u81f4\u5355\u6b21\u63d2\u5165\u7684\u5ef6\u8fdf\u4e0d\u7a33\u5b9a\uff0c<code>std::unordered_map</code>\u7684\u54c8\u5e0c\u51b2\u7a81\u5904\u7406\uff08\u5982\u5f00\u94fe\u6cd5\uff09\u53ef\u80fd\u5f71\u54cd\u5355\u6b21\u67e5\u8be2\u7684\u5ef6\u8fdf\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/iterator/","title":"\u8fed\u4ee3\u5668","text":"<p>\u8fed\u4ee3\u5668\u662f\u4e00\u4e2anamed requirements\u3002\u53ef\u4ee5\u5faa\u73af\u8bbf\u95ee C++ \u6807\u51c6\u5e93\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5e76\u63d0\u4f9b\u5bf9\u5404\u4e2a\u5143\u7d20\u7684\u8bbf\u95ee\u3002 C++ \u6807\u51c6\u5e93\u5bb9\u5668\u5168\u90fd\u63d0\u4f9b\u8fed\u4ee3\u5668\uff0c\u4ee5\u4fbf\u7b97\u6cd5\u53ef\u4ee5\u91c7\u7528\u6807\u51c6\u65b9\u5f0f\u8bbf\u95ee\u5176\u5143\u7d20\uff0c\u800c\u4e0d\u5fc5\u8003\u8651\u7528\u4e8e\u5b58\u50a8\u5143\u7d20\u7684\u5bb9\u5668\u7c7b\u578b\u3002</p> <p>\u8fed\u4ee3\u5668\u53c8\u53ef\u4ee5\u6839\u636e\u5176\u80fd\u529b\u5206\u6210\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u5982\u652f\u6301Random Access\u7684\u8fed\u4ee3\u5668\uff0cBi Direction\u7684\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u53ea\u8bfb\u7684\u8fed\u4ee3\u5668\uff0c\u7b49\u7b49\u3002</p> <p>\u76f8\u6bd4\u4e8eRust\u4e3b\u8981\u4f7f\u7528Trait\u6765\u5b9a\u4e49\u63a5\u53e3/\u7ea6\u675f\u7684\u673a\u5236\uff0c\u4ece\u800c\u652f\u6301\u591a\u6001\u3001\u4ee3\u7801\u590d\u7528\u3002C++\u5bf9\u7c7b\u578b\u7684\u89c4\u8303\u66f4\u52a0\u590d\u6742\uff1a 1. Abstract Class\uff1a\u901a\u8fc7\u7eaf\u865a\u51fd\u6570\u5b9a\u4e49\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7eaf\u865a\u51fd\u6570\u3002 2. Named Requirements: \u662f\u4e00\u4e2a\u6982\u5ff5\u5c42\u9762\u7684\u7ea6\u675f\uff0c\u6ca1\u6709\u5177\u4f53\u8bed\u6cd5\u8868\u793a\uff0c\u4e3b\u8981\u7528\u4e8e\u6a21\u677f\u7f16\u7a0b\uff0c\u5b9a\u4e49\u4e86\u7c7b\u578b\u5fc5\u987b\u6ee1\u8db3\u7684\u64cd\u4f5c\u548c\u8868\u8fbe\u5f0f\u3002\u6211\u611f\u89c9\u4ed6\u6709\u70b9\u7c7b\u4f3c\u4e8eGolang\u7684Interface\uff0c\u56e0\u4e3a\u7c7b\u5bf9\u5b83\u4eec\u7684\u5b9e\u73b0\u662f\u9690\u5f0f\u7684\u3002 3. Concept\uff1aC++20\u5f15\u5165\u3002\u662f\u5bf9Named Requirements\u7684\u5f62\u5f0f\u5316\uff0c\u63d0\u4f9b\u4e86\u66f4\u6e05\u6670\u7684\u8bed\u6cd5\u3002\u6211\u611f\u89c9\u4ed6\u6709\u70b9\u7c7b\u4f3c\u4e8eRust\u7684trait\uff0c\u56e0\u4e3a\u7c7b\u5bf9\u5b83\u4eec\u7684\u5b9e\u73b0\u662f\u663e\u5f0f\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/iterator/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u8fed\u4ee3\u5668 | Microsoft Learn</li> <li>Iterator library - cppreference.com</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/leveldb/","title":"LevelDB","text":"<p>LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.</p> <p>\u636e\u8bf4\u5199\u7684\u975e\u5e38\u597d\uff0c\u5fc5\u8bfb\u4ee3\u7801\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/spdlog/","title":"spdlog","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/string/","title":"string","text":"<p>C++\u7684<code>std::string</code>\u53ef\u4ee5\u8ba4\u4e3a\u662fchar\u5e8f\u5217\uff0c\u7c7b\u4f3cRust\u7684<code>Vec&lt;u8&gt;</code>\uff1bC++17\u5f15\u5165\u7684<code>string_view</code>\u5219\u7c7b\u4f3c\u4e8e<code>&amp;[u8]</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32","text":"<p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u4e32\u5c31\u662f\u4e00\u4e2a\u4ee5<code>\\0</code>\u7ed3\u5c3e\u7684<code>char *</code>\u3002\u53ef\u4ee5\u8bf4\u662f\u8fc7\u4e8e\u7b80\u964b\u4e86\u3002\u5728\u73b0\u4ee3C++\u4e2d\uff0c<code>std::string</code>\u548c<code>std::string_view</code>\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5b57\u7b26\u4e32\u62bd\u8c61\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/","title":"\u667a\u80fd\u6307\u9488","text":"<p>\u73b0\u4ee3C++\u4e2d\u7684\u667a\u80fd\u6307\u9488\u4e3b\u8981\u6709\u4e09\u79cd\u7c7b\u578b\uff1a<code>unique_ptr</code>\u3001<code>shared_ptr</code> \u548c <code>weak_ptr</code>\u3002\u5b83\u4eec\u90fd\u5b9a\u4e49\u5728 <code>&lt;memory&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff0c\u65e8\u5728\u5b89\u5168\u5730\u7ba1\u7406\u52a8\u6001\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u60ac\u7a7a\u6307\u9488\u95ee\u9898\u3002\u5efa\u8bae\u5728\u73b0\u4ee3C++\u4e2d\u5c3d\u53ef\u80fd\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u66ff\u4ee3\u539f\u59cb\u7684 <code>new</code> \u548c <code>delete</code>\u3002</p> <p>\u5982\u679c\u719f\u6089Rust\uff0c\u53ef\u4ee5\u57fa\u672c\u5c06\u4e09\u7c7b\u667a\u80fd\u6307\u9488\u505a\u5982\u4e0b\u7c7b\u6bd4\uff08\u4e8b\u5b9e\u4e0a\u667a\u80fd\u6307\u9488\u8d77\u6e90\u4e8eC++\uff0cRust\u624d\u662f\u501f\u9274\u8005\uff09\uff1a</p> C++\u667a\u80fd\u6307\u9488 Rust\u6240\u6709\u6743\u667a\u80fd\u6307\u9488 \u4e3b\u8981\u7279\u5f81 <code>unique_ptr</code> <code>Box&lt;T&gt;</code> \u72ec\u5360\u6240\u6709\u6743\uff0c\u4f5c\u7528\u57df\u7ed3\u675f\u81ea\u52a8\u91ca\u653e <code>shared_ptr</code> <code>Arc&lt;T&gt;</code> \u5171\u4eab\u6240\u6709\u6743\uff0c\u5f15\u7528\u8ba1\u6570 <code>weak_ptr</code> <code>Weak&lt;T&gt;</code> \u5f31\u5f15\u7528\uff0c\u907f\u514d\u5faa\u73af\u5f15\u7528"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#unique-ptr","title":"Unique Ptr","text":"<p><code>std::unique_ptr</code>\u662f\u4e00\u79cd\u72ec\u5360\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u610f\u5473\u7740\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u80fd\u6709\u4e00\u4e2a<code>unique_ptr</code>\u62e5\u6709\u5bf9\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u3002\u5b83\u4e0d\u80fd\u88ab\u590d\u5236\u5230\u5176\u4ed6<code>unique_ptr</code>\u5bf9\u8c61\uff0c\u53ea\u80fd\u88ab\u79fb\u52a8\uff0c\u8fd9\u786e\u4fdd\u4e86\u5176\u72ec\u5360\u6240\u6709\u6743\u7684\u7279\u6027\u3002</p> <pre><code>#include &lt;memory&gt;\n\nint main() {\n    auto ptr = std::make_unique&lt;int&gt;(10); // \u4f7f\u7528make_unique\u521b\u5efa\u4e00\u4e2aint\u7c7b\u578b\u7684unique_ptr\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E5%BA%93/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#shared-ptr-weak-ptr","title":"Shared Ptr &amp; Weak Ptr","text":"<p><code>std::shared_ptr</code>\u662f\u4e00\u79cd\u5171\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u5b9e\u4f8b\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u5f53\u6700\u540e\u4e00\u4e2a\u62e5\u6709\u5b83\u7684<code>shared_ptr</code>\u88ab\u9500\u6bc1\u6216\u8005\u91cd\u65b0\u8d4b\u503c\u540e\uff0c\u5b83\u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002\u6240\u4ee5\uff0c\u4e00\u65e6\u51fa\u73b0\u5faa\u73af\u5f15\u7528\uff0c\u53ef\u4ee5\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002\u5faa\u73af\u5f15\u7528\u65f6\u4f7f\u7528<code>std::weak_ptr</code>\u6765\u6253\u7834\u5faa\u73af\u3002</p> <p><code>std::shared_ptr</code>\u5185\u90e8\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6765\u7ba1\u7406\u5176\u5f15\u7528\u8ba1\u6570\uff0c\u8fd9\u610f\u5473\u7740\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u5bf9\u540c\u4e00<code>shared_ptr</code>\u5b9e\u4f8b\u8fdb\u884c\u62f7\u8d1d\u6784\u9020\u6216\u8d4b\u503c\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002\u5c3d\u7ba1<code>std::shared_ptr</code>\u7684\u5f15\u7528\u8ba1\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u88ab\u6307\u5411\u7684\u5bf9\u8c61\u672c\u8eab\u5e76\u4e0d\u4e00\u5b9a\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u9700\u8981\u8bbf\u95ee\u6216\u4fee\u6539\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u8eab\u9700\u8981\u8fdb\u884c\u9002\u5f53\u7684\u540c\u6b65\u64cd\u4f5c\uff0c\u5982\u4f7f\u7528\u4e92\u65a5\u9501\u3002\u6240\u4ee5\uff0c\u5728\u4e0a\u8868\u4e2d\u6211\u5c06<code>shared_ptr</code>\u7c7b\u6bd4\u4e8e<code>Arc</code>\u800c\u4e0d\u662f<code>Rc</code>\u3002</p> <p><code>shared_ptr</code>\u6709\u989d\u5916\u7684\u6027\u80fd\u5f00\u9500\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u7ef4\u62a4\u5f15\u7528\u8ba1\u6570\uff0c\u8c28\u614e\u7684\u4f7f\u7528\u5b83\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E6%9E%84%E5%BB%BA/CMake/","title":"CMake","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Cpp/%E6%9E%84%E5%BB%BA/IDE/","title":"IDE","text":"<p>\u6211\u559c\u6b22VSCode\u3002\u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0b\u4f7f\u7528VSCode\u8fdb\u884cCPP\u5f00\u53d1\uff0c\u8e29\u7684\u4e00\u4e9b\u5751\u3002</p> <p><code>clangd</code>\u662f\u6211\u6bd4\u8f83\u559c\u6b22\u7684\u63d2\u4ef6\uff0c\u6211\u6dfb\u52a0\u4e86\u4e0b\u9762\u7684\u914d\u7f6e\uff08<code>settings.json</code>\uff09\uff1a</p> <pre><code>{\n    \"clangd.arguments\": [\n        \"--fallback-style=google\",\n        \"--header-insertion=iwyu\",\n        \"--suggest-missing-includes\"\n    ]\n}\n</code></pre> <p>\u6b64\u5916Doxygen Documentation Generator, CMake \u4e5f\u5f88\u6709\u7528\u3002\u4e0d\u9700\u8981\u4ec0\u4e48\u989d\u5916\u7684\u914d\u7f6e\u3002</p> <p>\u8c03\u8bd5\u6211\u66f4\u503e\u5411\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4f7f\u7528<code>gdb</code>/<code>lldb</code>\uff0c\u4e0d\u8fc7<code>lldb</code>\u63d2\u4ef6\u4e5f\u633a\u597d\u7684\uff08<code>launch.json</code>\uff09\u3002\u4e0b\u9762\u7684\u914d\u7f6e\u4ec5\u4f9b\u53c2\u8003\u3002\u5173\u952e\u662f\u8981\u914d\u7f6e <code>preLaunchTask</code> \u6765\u6784\u5efa\u7a0b\u5e8f\uff0c\u7136\u540e\u5728<code>program</code>\u4e2d\u6307\u5b9a\u7f16\u8bd1\u51fa\u7684\u7ed3\u679c\u3002</p> <pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Current File\",\n            \"type\": \"lldb\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/build/${fileBasenameNoExtension}\",\n            \"args\": [],\n            \"cwd\": \"${workspaceFolder}\",\n            \"preLaunchTask\": \"build\",  //\n            \"stopOnEntry\": false,\n            \"internalConsoleOptions\": \"neverOpen\"\n        }\n    ]\n}\n</code></pre> <p>\u4e00\u4e2a\u7f16\u8bd1\u5355\u6587\u4ef6\u7684build\u547d\u4ee4\uff08<code>tasks.json</code>\uff09\uff1a</p> <pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"build\",\n            \"type\": \"shell\",\n            \"command\": \"mkdir -p build &amp;&amp; clang++ -g ${file} -o ${workspaceFolder}/build/${fileBasenameNoExtension}\",\n            \"group\": {\n                \"kind\": \"build\",\n                \"isDefault\": true\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/","title":"DataLog","text":"<p>DataLog \u662f\u58f0\u660e\u5f0f(declarative) \u7684\u7f16\u7a0b\u8bed\u8a00\u3002DataLog \u662f Prolog \u7684\u5b50\u96c6\uff0cDataLog \u4f7f\u7528\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\u4ee5 Horn \u5b50\u53e5\u7684\u5f62\u5f0f\u8868\u8fbe\u8ba1\u7b97\u3002DataLog \u88ab\u5e7f\u6cdb\u7684\u7528\u4e8e AI/DB/PL\u3002DataLog \u5e76\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff0c\u6240\u4ee5\u867d\u7136 DataLog \u88ab\u7528\u4e8e\u7a0b\u5e8f\u5206\u6790\uff0c\u4f46\u662f\u4e00\u4e9b\u9ad8\u7ea7\u7684\u7b97\u6cd5\u4ecd\u7136\u8fd8\u662f\u7528\u4f20\u7edf\u8bed\u8a00\u5b9e\u73b0\u7684\u3002</p> <p>DataLog: SQL with recursion / Prolog without complex terms.</p> <p>GitHub - souffle-lang/souffle\u00a0\u662f DataLog \u6700\u597d\u7684\u5f00\u6e90\u5b9e\u73b0\u3002\u4e0b\u9762\u4ecb\u7ecd\u8bed\u6cd5\u662f Souffle \u7684\u8bed\u6cd5\uff08\u6ca1\u9519\uff0c\u4e0d\u540c\u5f15\u64ce\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u6cd5\uff0c\u6ca1\u6709\u7edf\u4e00\u6807\u51c6\uff0c\u8fd9\u53ef\u80fd\u4e5f\u662fDataLog\u53d1\u5c55\u7f13\u6162\u7684\u539f\u56e0\uff09\u3002Z3\u6c42\u89e3\u5668\u5185\u90e8\u4e5f\u5e26\u4e86\u4e00\u4e2aDataLog Engine muZ\u3002</p> <p>CodeQL \u4e5f\u662f\u57fa\u4e8e DataLog \u7684\uff0c\u4ed6\u662f\u76ee\u524d DataLog \u5728\u7a0b\u5e8f\u5206\u6790\u6700\u6210\u529f\u7684\u5e94\u7528\u4e86\u3002Gigahorse \u662f\u57fa\u4e8eDataLog\u7684Ethereum Binary\u5206\u6790\u6846\u67b6\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#program","title":"Program","text":"<p>\u7b80\u5355\u7684\u7406\u89e3\uff0cDataLog \u7a0b\u5e8f\u662f\u7531\u4e00\u7ec4 relation \u7ec4\u6210\u7684\u3002\u6240\u8c13 relation \u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u6570\u636e\u7684\u6709\u5e8f\u5bf9\u3002</p> <p>relation is a set of ordered tuples (x1, \u2026, xk) where each element xi is a member of a data domain defined by a type.</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u544a\u8bc9\u7a0b\u5e8f\u54ea\u4e9b\u6570\u636e\u5177\u6709relation\u5462\uff1f\u67092\u79cd\u65b9\u5f0f\u3002fact\u548crule\u3002fact\u662f\u65e0\u6761\u4ef6\u6210\u7acb\u7684relation\uff0crule\u63d0\u4f9b\u4e86relation\u6210\u7acb\u7684\u63a8\u5bfc\u89c4\u5219\uff0csouffle\u5f15\u64ce\u4f1a\u636e\u6b64\u63a8\u5bfc\u51fa\u6240\u6709\u6210\u7acb\u7684relation\u3002  </p> <p>\u53ef\u4ee5\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6709\u5411\u56fe\u7684\u53ef\u8fbe\u6027\u5206\u6790\u3002</p> <pre><code>.decl edge(n: symbol, m: symbol)\nedge(\"a\", \"b\"). /* facts of edge */\nedge(\"b\", \"c\").\nedge(\"c\", \"b\").\nedge(\"c\", \"d\").\n\n.decl reachable (n: symbol, m: symbol)\n.output reachable // output relation reachable\n\nreachable(x, y):- edge(x, y). // base rule\nreachable(x, z):- edge(x, y), reachable(y, z). // inductive rule\n</code></pre> <ul> <li><code>.decl edge(n: symbol, m: symbol)</code>\u58f0\u660e\u4e86\u4e00\u4e2arelation\uff0c\u5176\u4e2d\u7684n,m\u53eb\u505aattribute\u3002\u9700\u8981\u58f0\u660eattribute\u7684\u7c7b\u578b\u3002</li> <li><code>edge(\"a\",\"b\")</code>\u5c31\u662f fact \uff0c\u8868\u793a\u5b58\u5728<code>a-&gt;b</code>\u7684\u8fb9\u3002\u901a\u8fc74\u4e2afact\uff0c\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b58\u5728\u7684\u56fe\u3002<ul> <li>\u6240\u4ee5\u4e5f\u53ef\u4ee5\u628a fact \u770b\u4f5c\u662f \u6570\u636e\u5e93\u3002</li> </ul> </li> <li><code>reachable(n,m):- edge(x,y)</code>\u5c31\u662f rule\uff0c\u6ee1\u8db3\u5176\u6761\u4ef6\u7684<code>(n,m)</code>\u90fd\u662f\u53ef\u8fbe\u7684\u3002<code>:-</code>\u540e\u9762\u8ddf\u7740\u7684\u5c31\u662f rule \u7684\u6761\u4ef6\uff0c\u8981\u6ee1\u8db3\u6240\u6709\u6761\u4ef6 rule \u5c31\u6210\u7acb\u3002<ul> <li>\u6240\u4ee5\u4e5f\u53ef\u4ee5\u628a rules \u770b\u4f5c\u662f \u67e5\u8be2\u8bed\u53e5\u3002</li> </ul> </li> <li><code>.output</code>\u53ef\u4ee5\u8f93\u51fa\u6240\u6709\u6210\u7acb\u7684relation\uff0c\u9ed8\u8ba4\u662f\u8f93\u51fa\u5230<code>&lt;relation name&gt;.csv</code>\u3002</li> </ul> <p>\u6ce8\u91ca\u7684\u8bed\u6cd5\u548cC\u8bed\u8a00\u76f8\u540c\u3002\u4ee5\u4e0a\u5c31\u662f\u6700\u57fa\u672c\u7684 DataLog \u7684\u5168\u90e8\u8bed\u6cd5\u4e86\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7a0b\u5e8f\u7684\u6784\u9020\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#souffle","title":"Souffle","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#how-relation-store","title":"How Relation Store","text":"<p>\u4e0b\u9762\u7684\u5185\u5bb9\u53ef\u4ee5\u5ffd\u7565\u3002</p> <p>\u4e00\u822c\u6211\u4eec\u4e0d\u8003\u8651souffle\u5728\u5185\u90e8\u5982\u4f55\u5b58\u50a8\u5173\u7cfb\uff0c\u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\uff0c\u6709\u4e0b\u9762\u8fd9\u4e9b\u9009\u9879\uff1a</p> <ul> <li>btree\uff1a\u4f7f\u7528B-Tree\u5b58\u50a8\uff0c\u8fd9\u662f\u9ed8\u8ba4\u65b9\u5f0f\u3002</li> <li>brie\uff1a\u7c7b\u4f3c\u4e8etrie\u7684\u5b58\u50a8\u65b9\u5f0f\u3002</li> <li>eqrel\uff1a\u5982\u679c\u5173\u7cfb\u662f\u7b49\u4ef7\u5173\u7cfb\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fd9\u79cd\u5b58\u50a8\u5f62\u5f0f\uff0c\u4f1a\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u4f18\u5316\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#type","title":"Type","text":"<p>Souffle\u662f\u4f1a\u68c0\u67e5\u53c2\u6570\u7684\u7c7b\u578b\u7684\uff0c\u8fd9\u5bf9\u4e8e\u5927\u578b\u7a0b\u5e8f\u7684\u7f16\u5199\u975e\u5e38\u91cd\u8981\u3002\u57fa\u672c\u7c7b\u578b\u4e00\u5171\u6709 4 \u79cd\uff0c\u4ee5 C \u7684\u7c7b\u578b\u4f5c\u4e3a\u53c2\u7167\uff1a</p> <ul> <li><code>symbol</code>: <code>char *</code></li> <li><code>number</code>: <code>int</code></li> <li><code>unsigned</code>: <code>uint</code></li> <li><code>float</code>: <code>float</code>/ <code>double</code></li> </ul> <p>\u63a5\u7740\u6211\u4eec\u770b\u66f4\u590d\u6742\u7684\u7c7b\u578b\uff1a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u7b49\u4ef7\u7c7b\u578b\uff0c\u5982<code>.type myNumber = number</code>\u3002\u90a3\u4e48\u4ed6\u4eec\u5c31\u662f\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\u7684\u3002\u8fd9\u4e2a\u548cRust\u4e2d\u7684<code>type mynumber = isize</code> \u7c7b\u4f3c\u3002</li> <li>\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u5b50\u7c7b\u578b\uff0c\u8bed\u6cd5\u4e3a <code>.type myEvenNumber &amp;lt;: number</code>\u3002\u4ed6\u548c\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u5b50\u7c7b\u7c7b\u4f3c\u3002</li> <li>Union \u7c7b\u578b</li> <li>Record \u7c7b\u578b</li> <li>ADT\uff1a\u7c7b\u4f3c\u4e8eRust\u4e2d\u7684enum\u3002</li> </ul> <p>\u5982\u679c\u9700\u8981\u505a\u7c7b\u578b\u8f6c\u5316\uff0c\u6709\u4e24\u79cd\u505a\u6cd5</p> <ul> <li>\u4f7f\u7528as\uff0c\u4ed6\u7c7b\u4f3c\u4e8eRust\u7684as\uff0c\u53ea\u505a\u7c7b\u578b\u8f6c\u5316\u4e0d\u4f5c\u503c\u7684\u8f6c\u5316\u3002</li> <li>\u4f7f\u7528\u51fd\u5b50<code>to_number</code>\u00a0\u3001\u00a0<code>to_string</code>\u00a0\u3001\u00a0<code>to_unsigned</code>\u00a0\u548c\u00a0<code>to_float</code>\u00a0\uff0c\u4ed6\u8fdb\u884c\u4e86\u503c\u7684\u8f6c\u5316\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#fact","title":"Fact","text":"<p>Fact\u5e76\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u50cf\u4e0a\u9762\u7684\u4f8b\u5b50\u4e00\u6837\u3002 \u4e0d\u8fc7\u4e3a\u4e86\u5206\u79bb\u6570\u636e\u548c\u903b\u8f91\uff0c\u53ef\u4ee5\u5c06facts\u5b58\u5728\u5176\u4ed6\u6587\u4ef6\u7528input\u8bed\u53e5\u8bfb\u53d6\u3002output\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002</p> <pre><code>.decl A(a: number, b:number)\n// \u9ed8\u8ba4\u4eceA.facts\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6570\u636e\u4e4b\u95f4\u4f7f\u7528tab\u9694\u5f00\uff0c\u4e00\u884c\u4e00\u4e2afact\n.input A \u00a0\n// \u4ece\u6307\u5b9a\u6587\u4ef6\u8bfb\u53d6\n.input A(IO=file, filename=\"path/to/infile\", columns=\"4:7\", delimiter=\",\")\n// \u4eceSQLite\u4e2d\u8bfb\u53d6\n.input A(IO=sqlite, dbname=\"path/to/sqlite3db\")\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#rule","title":"Rule","text":"<p>Rule\u7684\u4e66\u5199\u5982\u4e0a\u6240\u793a\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cRule\u7684\u6bcf\u4e00\u4e2a\u53d8\u91cf\u90fd\u5fc5\u987b grounded\uff0c\u5373\u80af\u5b9a\u5728\u89c4\u5219\u4e3b\u4f53\u4e2d\u81f3\u5c11\u51fa\u73b0\u4e00\u6b21\u3002\u4e3e\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u4f8b\u5b50\uff0c\u6765\u770b\u770b\u89c4\u5219\u4e3b\u4f53\u4e2d\u5982\u4f55\u8868\u793a\u4e0e\u6216\u975e\u903b\u8f91\u5173\u7cfb\u3002  </p> <pre><code>LivesAt(person, building) :-\n\u00a0 \u00a0 Owner(owner, building), \u00a0 // \u9017\u53f7\u662f\u4e0e\n\u00a0 \u00a0 ( person=owner ; Housemate(owner, person) ), \u00a0// \u5206\u53f7\u662f\u6216\n\u00a0 \u00a0 !Except(person). \u00a0 // \u53f9\u53f7\u662f\u975e\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#constrait","title":"Constrait","text":"<p>constrait \u662f\u89c4\u5219\u4e3b\u4f53\u4e2d \u4ea7\u751f\u771f\u503c\u548c\u5047\u503c \u7684\u8c13\u8bcd\u3002\u53ef\u4ee5\u662f\u539f\u59cb\u7c7b\u578b\u7684\u4e0d\u7b49\u5f0f\u548c\u7b49\u5f0f\uff0c\u5e76\u4e14\u5b58\u5728\u7528\u4e8e\u5339\u914d\u548c\u5305\u542b\u7684\u5b57\u7b26\u4e32\u7ea6\u675f\u3002\u4f8b\u5982\uff1a</p> <p>```Plain Text</p> <p>A(a,c) :- a &gt; c. B(a,c) :- a &lt; c. C(a,c) :- a = c. D(a,c) :- a != c. E(a,c) :- a &lt;= c F(a,c) :- a &gt;= c.</p> <p>G(a,c) :- contains(a, c). \u00a0 // a \u662f c \u7684\u5b50\u4e32 H(a,c) :- match(\"a.*\", c). \u00a0// c \u6ee1\u8db3\u901a\u914d\u7b26 <pre><code>#### Argument\n\n\u53c2\u6570\u53ef\u4ee5\u662fconstants, variables, record constructors, ADT constructors, type conversions,aggregators, and invocations to binary/unary operations, and user-defined operations.\n\n\u4f8b\u5982\uff1aZ\u7684\u53c2\u6570c\u5728\u7b2c\u516d\u884c\u5c31\u88ab\u5b9a\u4e49\u4e3acat\u51fd\u6570\uff0c\u4ed6\u548cC\u8bed\u8a00\u4e2d\u7684`strcat`\u7c7b\u4f3c\u3002\n\n```DataLog\n.decl Y(a:symbol, b:symbol)\n.decl Z(a:symbol, b:symbol, c:symbol)\n.output Z\nY(\"a\",\"b\").\nY(\"c\",\"d\").\nZ(a,b, cat(cat(a,b), a)) :- Y(a,b).\n</code></pre></p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#aggregate","title":"Aggregate","text":"<p>\u805a\u5408\u51fd\u6570\u00a0<code>min</code>\u00a0\u3001\u00a0<code>max</code>\u00a0\u3001<code>mean</code>\u3001\u00a0<code>sum</code>\u00a0\u548c\u00a0<code>count</code>\u00a0\u5728 souffle \u4e2d\u53ef\u7528\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u5728\u8bed\u6cd5\u4e0a\u7684\u6b63\u786e\u7528\u6cd5\uff1a</p> <pre><code>B(y) :- y = max z : A(\"A\", z).\nB(z) :- z = min x+y : { A(x), A(y), C(y) }.\nB(s, c) :- W(s), c = count : { C(s, _) }.\nB(s, count : { C(s, _) }) :- W(s).\nB(n, m) :- A(n, m), B(m, s), 2 * s = 2 * sum s : { A(n, s) } + 2.\nC(n) :- D(n), B(n, max p : { A(n, p) }).\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#components","title":"Components","text":"<p>\u6709\u70b9\u547d\u540d\u7a7a\u95f4\u7684\u611f\u89c9\uff0c\u7ec4\u7ec7\u5927\u578b\u7a0b\u5e8f\u65f6\u53ef\u4ee5\u7528\u5b83\u6765\u8fdb\u884c\u7a0b\u5e8f\u7684\u6a21\u5757\u5316\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Datalog/#user-defined-functions","title":"User Defined Functions","text":"<p>\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u53ef\u4ee5\u5927\u5927\u7684\u65b9\u4fbf\u89c4\u5219\u7684\u4e66\u5199\u3002Souffle\u5141\u8bb8\u7528\u6237\u4f7f\u7528C/C++\u6765\u7f16\u5199\u51fd\u6570\uff0c\u7f16\u8bd1\u6210\u52a8\u6001\u5e93<code>libfunctors.so</code>\u4e4b\u540e\u5728souffle\u8fd0\u884c\u65f6\u94fe\u63a5\u3002\u4e0b\u9762\u4ee5\u4e00\u4e2aDemo\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u7f16\u5199User Defined Functions\u3002</p> <p>\u6211\u4eec\u7f16\u5199\u4e86\u4e24\u4e2a\u7b80\u5355\u7684C++\u51fd\u6570\uff1a</p> <pre><code>#include &lt;cstdint&gt;\nextern \"C\" {\n\u00a0 int32_t f(int32_t x) {\n\u00a0 \u00a0 \u00a0 return x + 1;\n\u00a0 }\n\u00a0 const char *g() {\n\u00a0 \u00a0 \u00a0 return \"Hello world\";\n\u00a0 }\n}\n</code></pre> <p>\u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e00\u822c\u6211\u4eec\u7f16\u8bd1\u4e3alibfunctors.so\u3002</p> <pre><code>g++ functors.cpp -c -fPIC -o functors.o\ng++ -shared -o libfunctors.so functors.o\n</code></pre> <p>\u4e4b\u540e\u6211\u4eec\u9700\u8981\u6307\u5b9a\u94fe\u63a5\u5e93\u5730\u5740</p> <pre><code>export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}`pwd`\n</code></pre> <p>\u63a5\u7740\u6211\u4eec\u5c31\u53ef\u4ee5\u5728DataLog\u6587\u4ef6\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u4e86\u3002\u9996\u5148\u9700\u8981\u58f0\u660e<code>@&amp;lt;name&amp;gt;(&amp;lt;arg1&amp;gt;,...,&amp;lt;argk&amp;gt;)</code>\uff0c\u4e4b\u540e\u4f7f\u7528<code>@name(&amp;lt;arg1&amp;gt;,...,&amp;lt;argk&amp;gt;)</code>\u5bf9\u51fd\u6570\u8fdb\u884c\u8c03\u7528\u3002</p> <pre><code>// introduce new functor f: number -&gt; number\n.functor f(x:number):number\n\n.decl A(x:number)\n.output A\nA(1).\nA(@f(i)) :- A(i), @f(i) &lt; 100.\n</code></pre> <p>https://github.com/plast-lab/souffle-addon\u8fd9\u4e2a\u4ed3\u5e93\u63d0\u4f9b\u4e86\u5bf9256 bits\u6570\u5b57\u8fd0\u7b97\u7684\u652f\u6301\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ul> <li>https://souffle-lang.github.io/tutorial</li> <li>https://souffle-lang.github.io/program#rules</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/","title":"Golang","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#_1","title":"\u6570\u636e\u7ed3\u6784","text":"<p>Golang \u7684\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u5305\u62ec \u6570\u7ec4\u3001\u5207\u7247\u3001\u54c8\u5e0c\u8868\u3002</p> <p>Golang \u4e2d\u7684 \u5207\u7247Slice \u7c7b\u4f3c\u4e8e Rust \u4e2d\u7684 <code>Vector</code>\uff0c\u800c\u4e0d\u7c7b\u4f3c\u4e8e Rust \u4e2d\u7684 \u5207\u7247Slice\u3002</p> <p>\u6807\u51c6\u5e93\u7684\u6570\u636e\u7ed3\u6784\u6bd4\u8f83\u5c11\uff0c\u4f8b\u5982\u6ca1\u6709Hashset\uff08\u867d\u7136\u53ef\u4ee5\u7528<code>map[T]struct{}</code>\u5e73\u66ff\uff09\u3002GoDS \u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p><code>make</code>\u5173\u952e\u5b57\u662fGolang\u4e13\u95e8\u7528\u6765\u521b\u5efa\u8fd9\u4e9b\u81ea\u5e26\u7684\u6570\u636e\u7ed3\u6784\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#go-ai","title":"Go \u8bed\u8a00\u7684\u63a5\u53e3 ^ai","text":"<p>Go \u8bed\u8a00\u5e76\u4e0d\u662f\u4e00\u4e2a\u5178\u578b\u7684\u9e2d\u5b50\u7c7b\u578b\uff08duck typing\uff09\u8bed\u8a00\u3002\u9e2d\u5b50\u7c7b\u578b\u662f\u4e00\u4e2a\u52a8\u6001\u7c7b\u578b\u6982\u5ff5\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u201c\u5982\u679c\u5b83\u8d70\u8def\u50cf\u9e2d\u5b50\uff0c\u53eb\u58f0\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u9e2d\u5b50\u201d\u3002\u8fd9\u79cd\u7c7b\u578b\u7cfb\u7edf\u4e0d\u5728\u4e4e\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u800c\u662f\u5728\u4e4e\u5bf9\u8c61\u662f\u5426\u6709\u67d0\u79cd\u884c\u4e3a\uff08\u5373\u5bf9\u8c61\u7684\u65b9\u6cd5\u6216\u5c5e\u6027\uff09\u3002</p> <p>Go \u8bed\u8a00\u91c7\u7528\u7684\u662f\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u786e\u5b9a\uff0c\u800c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u3002\u4f46\u662f\uff0cGo \u8bed\u8a00\u652f\u6301\u4e00\u79cd\u7279\u6027\uff0c\u4e5f\u8ba9\u5b83\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5c55\u73b0\u51fa\u7c7b\u4f3c\u9e2d\u5b50\u7c7b\u578b\u7684\u884c\u4e3a\uff0c\u8fd9\u5c31\u662f\u63a5\u53e3\uff08interface\uff09\u3002</p> <p>Go \u7684\u63a5\u53e3\u7c7b\u578b\u662f\u4e00\u79cd\u62bd\u8c61\u7c7b\u578b\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b9\u6cd5\u96c6\u3002\u4efb\u4f55\u5177\u6709\u8fd9\u4e9b\u65b9\u6cd5\u7684\u7c7b\u578b\u90fd\u81ea\u52a8\u6ee1\u8db3\u8be5\u63a5\u53e3\uff0c\u65e0\u9700\u663e\u5f0f\u58f0\u660e\u5b9e\u73b0\u4e86\u54ea\u4e2a\u63a5\u53e3\u3002\u8fd9\u79cd\u673a\u5236\u88ab\u79f0\u4e3a\u9690\u5f0f\u63a5\u53e3\u5b9e\u73b0\u3002\u4f8b\u5982\uff1a</p> <pre><code>type Talker interface {\n    Talk() string\n}\n\ntype Dog struct {}\n\nfunc (d Dog) Talk() string {\n    return \"Woof!\"\n}\n\ntype Cat struct {}\n\nfunc (c Cat) Talk() string {\n    return \"Meow!\"\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>Dog</code> \u548c <code>Cat</code> \u7c7b\u578b\u90fd\u6ca1\u6709\u663e\u5f0f\u58f0\u660e\u5b83\u4eec\u5b9e\u73b0\u4e86 <code>Talker</code> \u63a5\u53e3\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u4eec\u90fd\u5b9a\u4e49\u4e86 <code>Talk</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u5b83\u4eec\u90fd\u6ee1\u8db3 <code>Talker</code> \u63a5\u53e3\u3002</p> <p>\u5728\u4f7f\u7528\u63a5\u53e3\u7684\u5730\u65b9\uff0cGo \u8868\u73b0\u51fa\u4e0e\u9e2d\u5b50\u7c7b\u578b\u7c7b\u4f3c\u7684\u884c\u4e3a\uff1a\u53ea\u8981\u4e00\u4e2a\u7c7b\u578b\u5177\u6709\u63a5\u53e3\u6240\u9700\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u5b83\u5c31\u53ef\u4ee5\u88ab\u89c6\u4e3a\u8be5\u63a5\u53e3\u7c7b\u578b\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u9690\u5f0f\u5730\u5b9e\u73b0\u4e86\u63a5\u53e3\uff09\u3002\u8fd9\u5141\u8bb8\u5728\u4e0d\u77e5\u9053\u5bf9\u8c61\u786e\u5207\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u63a5\u53e3\u64cd\u4f5c\u8fd9\u4e9b\u5bf9\u8c61\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u884c\u4e3a\u4ecd\u7136\u5728\u9759\u6001\u7c7b\u578b\u7684\u6846\u67b6\u5185\u8fdb\u884c\uff0c\u56e0\u4e3a\u6240\u6709\u68c0\u67e5\u90fd\u662f\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u3002</p> <p>\u867d\u7136 Go \u7684\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\u7684\u65b9\u5f0f\u6765\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u9e2d\u5b50\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u51b3\u5b9a\u3002Go \u7684\u63a5\u53e3\u66f4\u591a\u5730\u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u591a\u6001\u673a\u5236\uff0c\u4f7f\u5f97\u4ee3\u7801\u53ef\u4ee5\u5728\u4fdd\u6301\u7c7b\u578b\u5b89\u5168\u7684\u540c\u65f6\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u6269\u5c55\u6027\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#select","title":"Select \u5173\u952e\u5b57","text":"<p><code>select</code> \u662f Linux \u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528 <code>select</code>\u3001<code>poll</code> \u548c <code>epoll</code> \u7b49\u51fd\u6570\u6784\u5efa I/O \u591a\u8def\u590d\u7528\u6a21\u578b\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u3002Go \u8bed\u8a00\u7684 <code>select</code> \u4e0e Linux \u4e2d\u7684 <code>select</code> \u6bd4\u8f83\u76f8\u4f3c\u3002<code>select</code> \u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u540c\u65f6\u76d1\u542c\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u53ef\u8bfb\u6216\u8005\u53ef\u5199\u7684\u72b6\u6001\uff0cGo \u8bed\u8a00\u4e2d\u7684 <code>select</code> \u4e5f\u80fd\u591f\u8ba9 Goroutine \u540c\u65f6\u7b49\u5f85\u591a\u4e2a Channel \u53ef\u8bfb\u6216\u8005\u53ef\u5199\uff0c\u5728\u591a\u4e2a\u6587\u4ef6\u6216\u8005 Channel\u72b6\u6001\u6539\u53d8\u4e4b\u524d\uff0c<code>select</code> \u4f1a\u4e00\u76f4\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\u6216\u8005 Goroutine\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#_2","title":"\u53c2\u6570\u4f20\u9012","text":"<p>Golang \u4f7f\u7528\u4e86\u503c\u4f20\u9012\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u3002\u65e0\u8bba\u662f\u4f20\u9012\u57fa\u672c\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u8fd8\u662f\u6307\u9488\uff0c\u90fd\u4f1a\u5bf9\u4f20\u9012\u7684\u53c2\u6570\u8fdb\u884c\u62f7\u8d1d\u3002\u56e0\u6b64\uff0c\u5728\u4f20\u9012\u6570\u7ec4\u6216\u8005\u5185\u5b58\u5360\u7528\u975e\u5e38\u5927\u7684\u7ed3\u6784\u4f53\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u7c7b\u578b\u6765\u907f\u514d\u53d1\u751f\u6570\u636e\u62f7\u8d1d\u8fdb\u800c\u5f71\u54cd\u6027\u80fd\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#_3","title":"\u53cd\u5c04","text":"<p>\u8fd0\u884c\u65f6\u53cd\u5c04\u662f\u7a0b\u5e8f\u5728\u8fd0\u884c\u671f\u95f4\u68c0\u67e5\u5176\u81ea\u8eab\u7ed3\u6784\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u53cd\u5c04\u5e26\u6765\u7684\u7075\u6d3b\u6027\u662f\u4e00\u628a\u53cc\u5203\u5251\uff0c\u53cd\u5c04\u4f5c\u4e3a\u4e00\u79cd\u5143\u7f16\u7a0b\u65b9\u5f0f\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff0c\u4f46\u662f\u8fc7\u91cf\u7684\u4f7f\u7528\u53cd\u5c04\u4f1a\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u903b\u8f91\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u5e76\u4e14\u8fd0\u884c\u7f13\u6162\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u4f7f\u7528\u53cd\u5c04\u7684\u4f8b\u5b50\u662fJSON\u7684\u53cd\u5e8f\u5217\u5316\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/#chan","title":"Chan","text":"<p>\u901a\u9053\u5173\u95ed\u540e\u7684\u884c\u4e3a\uff1a</p> <ol> <li>\u5f53\u4e00\u4e2a\u901a\u9053\u88ab\u5173\u95ed\u540e\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4ece\u8be5\u901a\u9053\u63a5\u6536\u6570\u636e\uff0c\u76f4\u5230\u901a\u9053\u4e2d\u7684\u7f13\u51b2\u6570\u636e\u88ab\u5b8c\u5168\u8bfb\u53d6\u5b8c\u6bd5\u3002</li> <li>\u4e00\u65e6\u901a\u9053\u4e2d\u7684\u6570\u636e\u88ab\u8bfb\u53d6\u5b8c\u6bd5\uff0c\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u63a5\u6536\u64cd\u4f5c\u5c06\u7acb\u5373\u5b8c\u6210\uff0c\u5e76\u8fd4\u56de\u8be5\u901a\u9053\u5143\u7d20\u7c7b\u578b\u7684\u96f6\u503c\u3002</li> <li>\u5411\u5df2\u5173\u95ed\u7684\u901a\u9053\u53d1\u9001\u6570\u636e\u5c06\u5bfc\u81f4\u8fd0\u884c\u65f6 panic\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/pprof/","title":"pprof","text":"<p>Golang\u5728\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u5bf9\u7a0b\u5e8f\u8fdb\u884cprofile\u7684\u5de5\u5177\uff0c\u5e2e\u52a9\u68c0\u6d4b\u4e00\u4e0b\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff1a</p> <ul> <li>goroutine \u2014 stack traces of all current goroutines</li> <li>heap \u2014 a sampling of memory allocations of live objects</li> <li>allocs \u2014 a sampling of all past memory allocations</li> <li>threadcreate \u2014 stack traces that led to the creation of new OS threads</li> <li>block \u2014 stack traces that led to blocking on synchronization primitives</li> <li>mutex \u2014 stack traces of holders of contended mutexes</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/pprof/#heap","title":"Heap","text":"<p>\u867d\u7136Golang\u6709\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u4f46\u662f\u4ecd\u7136\u53ef\u80fd\u4f1a\u5b58\u5728\u5185\u5b58\u6cc4\u6f0f\u3002\u901a\u8fc7\u5bf9heap\u8fdb\u884cprofile\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u5185\u5b58\u6cc4\u6f0f\u7684\u539f\u56e0\u3002\u4ed6\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5f00\u67d0\u4e2a\u7aef\u53e3\u5f00\u542fpprof\u7684\u670d\u52a1\u5373\u53ef\uff1a</p> <pre><code>import (  \"net/http\"  _ \"net/http/pprof\")\n\nfunc main() {\n    ...\n    http.ListenAndServe(\"localhost:8080\", nil)\n    ...\n}\n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u7aef\u53e3\u8bbf\u95ee\u5230pprof\u7684\u7ed3\u679c\uff0c\u4f7f\u7528<code>go tool pprof</code>\u5206\u6790</p> <pre><code>curl -sK -v http://localhost:8080/debug/pprof/heap &gt; heap.out\ngo tool pprof heap.out\n# \u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u547d\u4ee4\ngo tool pprof http://127.0.0.1:6060/debug/pprof/heap\n</code></pre> <p>\u53ef\u4ee5\u5728\u6267\u884cheap\u5206\u6790\u4e4b\u524d\u5148\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u907f\u514d\u4e00\u4e9b\u6682\u672a\u56de\u6536\u7684\u5185\u5b58\u5bf9\u5206\u6790\u9020\u6210\u5e72\u6270\u3002\u901a\u8fc7\u6307\u5b9a\\(gc\\)\u53c2\u6570\u5b8c\u6210\u3002</p> <pre><code>go tool pprof http://127.0.0.1:6060/debug/pprof/heap?gc=1\n</code></pre> <p>\u9ed8\u8ba4\u662f\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u5185\u5b58\u91cf\uff08<code>inuse_space</code>\uff09\uff0c\u4e5f\u53ef\u4ee5\u67e5\u770b\u51fd\u6570\u5386\u53f2\u7533\u8bf7\u91cf\u7684\u603b\u548c\uff0c\u4f7f\u7528<code>--alloc_space</code>\u9009\u9879\uff0c\u5982\u4e0b\u3002\u8fd8\u6709<code>alloc_objects</code>\u548c<code>inuse_objects</code>\u67e5\u770b\u5bf9\u8c61\u6570\u91cf\u800c\u4e0d\u662f\u5185\u5b58\u5927\u5c0f\u3002</p> <pre><code>go tool pprof --alloc_space http://127.0.0.1:6060/debug/pprof/heap\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/pprof/#demo","title":"Demo","text":"<p>\u4e0b\u9762\u662f\u6211\u5bf9\u6211\u7a0b\u5e8f\u5206\u6790\u7684\u6b65\u9aa4\uff0c\u4ece\u8fdb\u5165\u4ea4\u4e92\u5f0f\u754c\u9762\u5f00\u59cb\u3002\u9996\u5148\u6267\u884c<code>top</code>\u547d\u4ee4\uff0c\u89c2\u5bdf\u5185\u5b58\u4f7f\u7528\u6700\u591a\u7684\u51fd\u6570\uff1a</p> <pre><code>(pprof) top\nShowing nodes accounting for 5848.78kB, 100% of 5848.78kB total\nShowing top 10 nodes out of 37\n      flat  flat%   sum%        cum   cum%\n 3796.44kB 64.91% 64.91%  3796.44kB 64.91%  scam-analyzer/utils.(*Set[go.shape.[20]uint8]).Add\n  514.63kB  8.80% 73.71%   514.63kB  8.80%  math/rand.newSource\n  513.12kB  8.77% 82.48%   513.12kB  8.77%  golang.org/x/net/http2/hpack.newInternalNode\n  512.56kB  8.76% 91.25%   512.56kB  8.76%  encoding/json.typeFields\n  512.02kB  8.75%   100%   512.02kB  8.75%  github.com/ethereum/go-ethereum/core/vm.newFrontierInstructionSet\n         0     0%   100%   512.56kB  8.76%  encoding/json.(*decodeState).object\n         0     0%   100%   512.56kB  8.76%  encoding/json.(*decodeState).unmarshal\n         0     0%   100%   512.56kB  8.76%  encoding/json.(*decodeState).value\n         0     0%   100%   512.56kB  8.76%  encoding/json.Unmarshal\n         0     0%   100%   512.56kB  8.76%  encoding/json.cachedTypeFields\n</code></pre> <p>flat\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u4ecd\u65e7\u6ca1\u6709\u88ab\u91ca\u653e\u7684\u7a7a\u95f4\u3002\u6700\u5927\u7684\u662f<code>(*Set[go.shape.[20]uint8]).Add</code>\u8fd9\u4e2a\u51fd\u6570\u7533\u8bf7\u7684\u7a7a\u95f4\uff0c\u8fd9\u662f\u6211\u5bf9\u53ef\u7591\u5730\u5740\u7684\u7f13\u5b58\uff0c\u662f\u5408\u7406\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/pprof/#cpu","title":"CPU","text":"<p>\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4f1a\u572860\u79d2\u5185\u5bf9CPU\u4f7f\u7528\u60c5\u51b5\u8fdb\u884c\u91c7\u6837\uff1a</p> <pre><code>go tool pprof http://127.0.0.1:7001/debug/pprof/profile?seconds=60\n</code></pre> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ul> <li>Golang Heap \u5206\u6790</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/%E5%BA%93/context/","title":"context","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/%E5%BA%93/context/#context_1","title":"Context","text":"<p>Go \u8bed\u8a00\u7684 <code>context</code> \u5305\u662f\u4e13\u4e3a\u7b80\u5316\u8de8 API \u8fb9\u754c\u548c goroutines \u7684\u4f20\u9012\u53d6\u6d88\u4fe1\u53f7\u3001\u8d85\u65f6\u3001\u622a\u6b62\u65f6\u95f4\u4ee5\u53ca\u5176\u4ed6\u8bf7\u6c42\u8303\u56f4\u7684\u503c\u800c\u8bbe\u8ba1\u7684\u3002\u8fd9\u4e2a\u5305\u5728\u5e76\u53d1\u63a7\u5236\u4e2d\u5c24\u5176\u6709\u7528\uff0c\u5b83\u5e2e\u52a9\u7ba1\u7406\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u64cd\u4f5c\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u6d89\u53ca\u591a\u4e2a goroutines \u7684\u64cd\u4f5c\u3002Context \u662f Go \u8bed\u8a00\u4e2d\u72ec\u7279\u7684\u8bbe\u8ba1\uff0c\u5728\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6211\u4eec\u5f88\u5c11\u89c1\u5230\u7c7b\u4f3c\u7684\u6982\u5ff5\u3002</p> <p><code>context.Context</code> \u662f Go \u8bed\u8a00\u5728 1.7 \u7248\u672c\u4e2d\u5f15\u5165\u6807\u51c6\u5e93\u7684\u63a5\u53e31\uff0c\u8be5\u63a5\u53e3\u5b9a\u4e49\u4e86\u56db\u4e2a\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u62ec\uff1a</p> <ol> <li><code>Deadline</code> \u2014 \u8fd4\u56de <code>context.Context</code> \u88ab\u53d6\u6d88\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u5b8c\u6210\u5de5\u4f5c\u7684\u622a\u6b62\u65e5\u671f\uff1b</li> <li><code>Done</code> \u2014 \u8fd4\u56de\u4e00\u4e2a Channel\uff0c\u8fd9\u4e2a Channel \u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u5b8c\u6210\u6216\u8005\u4e0a\u4e0b\u6587\u88ab\u53d6\u6d88\u540e\u5173\u95ed\uff0c\u591a\u6b21\u8c03\u7528 <code>Done</code> \u65b9\u6cd5\u4f1a\u8fd4\u56de\u540c\u4e00\u4e2a Channel\uff1b</li> <li><code>Err</code> \u2014 \u8fd4\u56de <code>context.Context</code> \u7ed3\u675f\u7684\u539f\u56e0\uff0c\u5b83\u53ea\u4f1a\u5728 <code>Done</code> \u65b9\u6cd5\u5bf9\u5e94\u7684 Channel \u5173\u95ed\u65f6\u8fd4\u56de\u975e\u7a7a\u7684\u503c\uff1b<ol> <li>\u5982\u679c <code>context.Context</code> \u88ab\u53d6\u6d88\uff0c\u4f1a\u8fd4\u56de <code>Canceled</code> \u9519\u8bef\uff1b</li> <li>\u5982\u679c <code>context.Context</code> \u8d85\u65f6\uff0c\u4f1a\u8fd4\u56de <code>DeadlineExceeded</code> \u9519\u8bef\uff1b</li> </ol> </li> <li><code>Value</code> \u2014 \u4ece <code>context.Context</code> \u4e2d\u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u4e0a\u4e0b\u6587\u6765\u8bf4\uff0c\u591a\u6b21\u8c03\u7528 <code>Value</code> \u5e76\u4f20\u5165\u76f8\u540c\u7684 <code>Key</code> \u4f1a\u8fd4\u56de\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u4f20\u9012\u8bf7\u6c42\u7279\u5b9a\u7684\u6570\u636e\uff1b</li> </ol> <pre><code>type Context interface {\n    Deadline() (deadline time.Time, ok bool)\n    Done() &lt;-chan struct{}\n    Err() error\n    Value(key interface{}) interface{}\n}\n</code></pre> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u5728\u53d1\u51fa\u7684 goroutine \u4e2d\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u4e00\u65e6<code>ctx.Done()</code>\u8fd9\u4e2achannal\u4e2d\u63a5\u6536\u5230\u6d88\u606f\u6216\u901a\u9053\u5173\u95ed\uff08\u901a\u5e38\u662f\u540e\u8005\uff09\uff0c\u5219\u53ef\u4ee5\u7ed3\u675f goroutine\u3002</p> <pre><code>ctx, cancel := context.WithCancel(context.Background())\n\n// \u5728\u67d0\u79cd\u60c5\u51b5\u8c03\u7528 cancel()\n\ngo func(){\n    select {\n        case &lt;-ctx.Done():\n            fmt.Println(\"main\", ctx.Err())\n            return\n        }\n        ...\n    }\n}()\n</code></pre> <p>\u4f8b\u5982\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\uff0c\u5f53\u63a5\u6536\u5230\u8bf7\u6c42\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u542f\u52a8\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u64cd\u4f5c\uff0c\u4f46\u5982\u679c\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u6216\u670d\u52a1\u7aef\u8bbe\u5b9a\u7684\u5904\u7406\u65f6\u95f4\u8d85\u8fc7\u9884\u671f\uff0c\u4f60\u53ef\u80fd\u60f3\u8981\u53d6\u6d88\u8fd9\u4e2a\u64cd\u4f5c\uff1a</p> <pre><code>func handleRequest(req *Request) {\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n\n    go func() {\n        select {\n        case &lt;-ctx.Done():\n            fmt.Println(\"handleRequest\", ctx.Err())\n            // \u53ef\u80fd\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u6e05\u7406\u64cd\u4f5c\n        case result := &lt;-processLongRunningTask(req):\n            // \u5904\u7406\u7ed3\u679c\n            fmt.Println(\"Result:\", result)\n        }\n    }()\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/%E5%BA%93/net/","title":"net","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/%E5%BA%93/net/#nethttp","title":"net/http","text":"<p><code>net/http</code>\u5305\u63d0\u4f9b\u4e86\u6784\u5efaHTTP\u670d\u52a1\u5668\u7684\u57fa\u672c\u5de5\u5177\u3002</p> <ol> <li>\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7<code>http.ResponseWriter</code>\u548c<code>*http.Request</code>\u4f5c\u4e3a\u53c2\u6570\u3002<code>http.ResponseWriter</code>\u7528\u4e8e\u53d1\u9001HTTP\u54cd\u5e94\u6570\u636e\uff0c\u800c<code>*http.Request</code>\u5305\u542b\u4e86\u5173\u4e8e\u5f53\u524d\u8bf7\u6c42\u7684\u6240\u6709\u4fe1\u606f\uff0c\u6bd4\u5982URL\u3001\u5934\u4fe1\u606f\u548c\u5176\u4ed6\u53ef\u80fd\u7684\u6570\u636e\u3002</li> <li>\u4f7f\u7528<code>http.HandleFunc</code>\u51fd\u6570\u6ce8\u518c\u4f60\u7684\u5904\u7406\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4e00\u4e2aURL\u8def\u5f84\u548c\u4e00\u4e2a\u5904\u7406\u51fd\u6570\u7ed1\u5b9a\u8d77\u6765\u3002</li> <li>\u4f7f\u7528<code>http.ListenAndServe</code>\u542f\u52a8\u670d\u52a1\u5668\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u7aef\u53e3\u53f7\u548c\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u5982\u679c\u4f60\u4f7f\u7528<code>http.HandleFunc</code>\u6ce8\u518c\u5904\u7406\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012<code>nil</code>\u4f5c\u4e3a\u5904\u7406\u5668\u3002</li> </ol> <p>\u4f8b\u5982\uff1a</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n)\n\n// helloHandler \u5904\u7406 /hello \u8def\u5f84\u7684HTTP\u8bf7\u6c42\nfunc helloHandler(w http.ResponseWriter, r *http.Request) {\n    // \u53d1\u9001HTTP\u54cd\u5e94\u5230\u5ba2\u6237\u7aef\n    fmt.Fprintf(w, \"Hello, you've requested: %s\\n\", r.URL.Path)\n}\n\nfunc main() {\n    // \u6ce8\u518cURL\u8def\u5f84\u548c\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\n    http.HandleFunc(\"/hello\", helloHandler)\n\n    // \u542f\u52a8HTTP\u670d\u52a1\u5668\uff0c\u76d1\u542c8080\u7aef\u53e3\n    fmt.Println(\"Server is running on http://localhost:8080/\")\n    if err := http.ListenAndServe(\":8080\", nil); err != nil {\n        fmt.Println(\"Error starting server:\", err)\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/","title":"_Index","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/HTTP/","title":"HTTP","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/HTTP/#request","title":"Request","text":"<p>Request \u662f Python \u4e45\u8d1f\u76db\u540d\u7684 HTTP \u8bf7\u6c42\u5e93\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/json/","title":"JSON","text":"<p>Python\u7684\u6807\u51c6\u5e93\u5c31\u652f\u6301JSON\u3002</p> <p>Python \u7684 dict/list \u548c JSON \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u5e94\u3002\u5e8f\u5217\u5316 <code>dumps</code> \u548c\u53cd\u5e8f\u5217\u5316 <code>loads</code> \u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c<code>dump</code> \u548c <code>load</code> \u7684\u53c2\u6570\u662f\u6587\u4ef6\u3002</p> <pre><code>&gt;&gt;&gt; import json\n&gt;&gt;&gt; json.dumps(['foo', {'bar': ('baz', None, 1.0, 2)}])\n'[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]'\n&gt;&gt;&gt; json.loads('[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]')\n['foo', {'bar': ['baz', None, 1.0, 2]}]\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; json.load(Path(\"./a.json\").open())   # \u5982\u679c\u662f\u4e00\u4e2a\u7b80\u5355\u811a\u672c\u76f4\u63a5\u8fd9\u6837\u6700\u7b80\u6d01\uff0c\u53ea\u5f00\u4e0d\u5173\n&gt;&gt;&gt; json.loads(Path(\"./a.json\").read_text())   # \u5982\u679c\u662f\u4e00\u4e2a\u7b80\u5355\u811a\u672c\u76f4\u63a5\u8fd9\u6837\u6700\u7b80\u6d01\n</code></pre> <p>\u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u548c\u7c7b\u578b\uff0cJSON \u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u5728 Python \u4e2d\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u5e94\u3002</p> Python JSON dict object list, tuple array str string int, float, enum number True true False false None null"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%96%87%E4%BB%B6/","title":"File","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%96%87%E4%BB%B6/#pathlib","title":"Pathlib","text":"<p>pathlib\u662f\u5199\u811a\u672c\u5904\u7406\u6587\u4ef6\u7684\u795e\u5668\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%97%A5%E5%BF%97/","title":"Log","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%97%A5%E5%BF%97/#logging","title":"Logging","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%97%A5%E5%BF%97/#loguru","title":"Loguru","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%97%B6%E9%97%B4/","title":"Time","text":"<p>python\u7684<code>time</code>,<code>datetime</code>,<code>calandar</code>\u6a21\u5757\u90fd\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u65f6\u95f4\u3002\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b<code>time</code>\u6a21\u5757\uff0c\u4ed6\u7b80\u5355\u5c01\u88c5\u4e86POSIX API\uff0c\u4f46\u662f\u505a\u4e86\u4e00\u4e9b\u4fee\u6539\u3002<code>time</code>\u6a21\u5757\u7684\u7ed3\u6784\u5316\u65f6\u95f4\u8868\u793a\u7c7b\u578b\u4e3a<code>time.struct_time</code>\u3002</p> <ul> <li>\u83b7\u5f97 <code>timestamp</code>: <code>time.time()</code>\uff0c\u7c7b\u578b\u5c31\u662ffloat</li> <li>\u83b7\u5f97 <code>struct_time</code>\uff0c\u65f6\u533a\u4e3aGMT/UTC: <code>time.gmtime()</code></li> <li>\u83b7\u5f97 <code>struct_time</code>\uff0c\u65f6\u533a\u4e3a\u672c\u5730\u65f6\u533a: <code>time.localtime()</code></li> <li>\u6784\u9020\u7279\u5b9a\u65f6\u95f4\u7684<code>struct_time</code>: \u53ef\u4ee5\u4f46\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5e72\uff0c\u5efa\u8bae\u4f7f\u7528<code>datetime</code>\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u6211\u5728\u4e1c\u516b\u533a\u8c03\u7528<code>time.localtime</code>\u3002<code>tm_gmtoff</code>\u662f\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684UTC\u4ee5\u4e1c\u504f\u79bb\u3002</p> <pre><code>&gt;&gt;&gt; time.localtime()\ntime.struct_time(tm_year=2024, tm_mon=3, tm_mday=25, tm_hour=22, tm_min=41, tm_sec=40, tm_wday=0, tm_yday=85, tm_isdst=0)\n&gt;&gt;&gt; time.localtime().tm_gmtoff / 3600\n8.0\n</code></pre> <p>\u5e93\u63d0\u4f9b<code>struct_time</code> \u548c <code>timestamp</code>\u7684\u76f8\u4e92\u8f6c\u5316\u7684\u51fd\u6570\u3002\u6709\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u65f6\u95f4\u8f6c\u5316\u6210\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u65b9\u4fbf\u8f93\u51fa\uff0c\u5e93\u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u51fd\u6570\uff0c\u683c\u5f0f\u5316\u6307\u4ee4\u53c2\u8003\u6587\u6863\u3002\u8f6c\u5316\u51fd\u6570\u89c1\u4e0b\u8868\u3002\u6709\u65f6\u6211\u4eec\u53ea\u60f3\u7b80\u5355\u7684\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u8981\u6c42\u7279\u5b9a\u7684\u683c\u5f0f\uff0c<code>time.ctime</code>\u53ef\u4ee5\u8f93\u51fa\u672c\u5730\u65f6\u95f4\u7684\u6807\u51c6\u5b57\u7b26\u4e32\u3002</p> From To Function <code>timestamp</code> Local <code>struct_time</code> <code>localtime()</code> <code>timestamp</code> UTC <code>struct_time</code> <code>gmtime()</code> <code>struct_time</code> <code>timestamp</code> <code>mktime()</code> (\u6ce8\u610f\uff0c\u4ed6\u4e0d\u4f1acare\u65f6\u533a\uff0c\u4ed6\u4f1a\u628a <code>struct_time</code> \u5f53\u4f5cUTC\u65f6\u95f4\u5904\u7406) <code>struct_time</code> string <code>strftime()</code> string <code>struct_time</code> <code>strptime()</code> <p><code>datetime</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u548c\u4eba\u6027\u5316\u7684\u5c01\u88c5\u3002\u4ed6\u5bf9\u7ed3\u6784\u5316\u65f6\u95f4\u8868\u793a\u7c7b\u578b\u4e3a<code>datetime.datetime</code>\uff0c\u65f6\u533a\u4fe1\u606f\u4f7f\u7528<code>timezone</code>\u5c01\u88c5\uff0c\u65f6\u95f4\u5dee\u4f7f\u7528<code>timedelta</code>\u5c01\u88c5\u3002</p> <ul> <li>\u83b7\u5f97 <code>datetime</code>\uff0c\u65f6\u533a\u4e3aGMT/UTC: <code>datetime.utcnow()</code></li> <li>\u83b7\u5f97 <code>datetime</code>\uff0c\u65f6\u533a\u4e3a\u672c\u5730\u65f6\u533a: <code>datetime.now(None)</code> (\u53ef\u4ee5\u6307\u5b9a\u65f6\u533a)</li> <li>\u6784\u9020\u7279\u5b9a\u65f6\u95f4\u7684<code>datetime</code>: <code>datetime.datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)</code> </li> </ul> From To Function <code>timestamp</code> Local <code>datetime</code> <code>fromtimestamp()</code> <code>timestamp</code> UTC <code>datetime</code> <code>utcfromtimestamp()</code> <code>datetime</code> <code>timestamp</code> <code>timestamp()</code> <code>struct_time</code> string <code>strftime()</code> string <code>struct_time</code> <code>strptime()</code> <p>\u65f6\u95f4</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E5%BA%93/%E6%97%B6%E9%97%B4/#python","title":"Python","text":"<p>python\u7684<code>time</code>,<code>datetime</code>,<code>calandar</code>\u6a21\u5757\u90fd\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u65f6\u95f4\u3002\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b<code>time</code>\u6a21\u5757\uff0c\u4ed6\u7b80\u5355\u5c01\u88c5\u4e86POSIX API\uff0c\u4f46\u662f\u505a\u4e86\u4e00\u4e9b\u4fee\u6539\u3002<code>time</code>\u6a21\u5757\u7684\u7ed3\u6784\u5316\u65f6\u95f4\u8868\u793a\u7c7b\u578b\u4e3a<code>time.struct_time</code>\u3002</p> <ul> <li>\u83b7\u5f97 <code>timestamp</code>: <code>time.time()</code>\uff0c\u7c7b\u578b\u5c31\u662ffloat</li> <li>\u83b7\u5f97 <code>struct_time</code>\uff0c\u65f6\u533a\u4e3aGMT/UTC: <code>time.gmtime()</code></li> <li>\u83b7\u5f97 <code>struct_time</code>\uff0c\u65f6\u533a\u4e3a\u672c\u5730\u65f6\u533a: <code>time.localtime()</code></li> <li>\u6784\u9020\u7279\u5b9a\u65f6\u95f4\u7684<code>struct_time</code>: \u53ef\u4ee5\u4f46\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5e72\uff0c\u5efa\u8bae\u4f7f\u7528<code>datetime</code>\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u6211\u5728\u4e1c\u516b\u533a\u8c03\u7528<code>time.localtime</code>\u3002<code>tm_gmtoff</code>\u662f\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684UTC\u4ee5\u4e1c\u504f\u79bb\u3002</p> <pre><code>&gt;&gt;&gt; time.localtime()\ntime.struct_time(tm_year=2024, tm_mon=3, tm_mday=25, tm_hour=22, tm_min=41, tm_sec=40, tm_wday=0, tm_yday=85, tm_isdst=0)\n&gt;&gt;&gt; time.localtime().tm_gmtoff / 3600\n8.0\n</code></pre> <p>\u5e93\u63d0\u4f9b<code>struct_time</code> \u548c <code>timestamp</code>\u7684\u76f8\u4e92\u8f6c\u5316\u7684\u51fd\u6570\u3002\u6709\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u65f6\u95f4\u8f6c\u5316\u6210\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u65b9\u4fbf\u8f93\u51fa\uff0c\u5e93\u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u51fd\u6570\uff0c\u683c\u5f0f\u5316\u6307\u4ee4\u53c2\u8003\u6587\u6863\u3002\u8f6c\u5316\u51fd\u6570\u89c1\u4e0b\u8868\u3002\u6709\u65f6\u6211\u4eec\u53ea\u60f3\u7b80\u5355\u7684\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u8981\u6c42\u7279\u5b9a\u7684\u683c\u5f0f\uff0c<code>time.ctime</code>\u53ef\u4ee5\u8f93\u51fa\u672c\u5730\u65f6\u95f4\u7684\u6807\u51c6\u5b57\u7b26\u4e32\u3002</p> From To Function <code>timestamp</code> Local <code>struct_time</code> <code>localtime()</code> <code>timestamp</code> UTC <code>struct_time</code> <code>gmtime()</code> <code>struct_time</code> <code>timestamp</code> <code>mktime()</code> (\u6ce8\u610f\uff0c\u4ed6\u4e0d\u4f1acare\u65f6\u533a\uff0c\u4ed6\u4f1a\u628a <code>struct_time</code> \u5f53\u4f5cUTC\u65f6\u95f4\u5904\u7406) <code>struct_time</code> string <code>strftime()</code> string <code>struct_time</code> <code>strptime()</code> <p><code>datetime</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u548c\u4eba\u6027\u5316\u7684\u5c01\u88c5\u3002\u4ed6\u5bf9\u7ed3\u6784\u5316\u65f6\u95f4\u8868\u793a\u7c7b\u578b\u4e3a<code>datetime.datetime</code>\uff0c\u65f6\u533a\u4fe1\u606f\u4f7f\u7528<code>timezone</code>\u5c01\u88c5\uff0c\u65f6\u95f4\u5dee\u4f7f\u7528<code>timedelta</code>\u5c01\u88c5\u3002</p> <ul> <li>\u83b7\u5f97 <code>datetime</code>\uff0c\u65f6\u533a\u4e3aGMT/UTC: <code>datetime.utcnow()</code></li> <li>\u83b7\u5f97 <code>datetime</code>\uff0c\u65f6\u533a\u4e3a\u672c\u5730\u65f6\u533a: <code>datetime.now(None)</code> (\u53ef\u4ee5\u6307\u5b9a\u65f6\u533a)</li> <li>\u6784\u9020\u7279\u5b9a\u65f6\u95f4\u7684<code>datetime</code>: <code>datetime.datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)</code> </li> </ul> From To Function <code>timestamp</code> Local <code>datetime</code> <code>fromtimestamp()</code> <code>timestamp</code> UTC <code>datetime</code> <code>utcfromtimestamp()</code> <code>datetime</code> <code>timestamp</code> <code>timestamp()</code> <code>struct_time</code> string <code>strftime()</code> string <code>struct_time</code> <code>strptime()</code>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/","title":"Build","text":"<p>\u4ecb\u7ecd\u4e00\u4e9bPython\u751f\u6001\u5305\u7ba1\u7406\u3001\u6784\u5efa\u3001\u5b89\u88c5\u7cfb\u7edf\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#vitrualenv","title":"vitrualenv","text":"<p>\u5728\u4e00\u4f17\u5305\u7ba1\u7406\u7a0b\u5e8f\u51fa\u73b0\u4e4b\u524d\uff0cvirtualenv\u662f\u6211\u6700\u559c\u6b22\u7684\u9632\u6b62\u73af\u5883\u6c61\u67d3\u7684\u529e\u6cd5\u3002</p> <p>\u5b89\u88c5</p> <pre><code>sudo apt install python3-virtualenv\n</code></pre> <p>\u4f7f\u7528</p> <pre><code>virtualenv .env\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#pipx","title":"pipx","text":"<p>pipx: \u5728\u9694\u79bb\u73af\u5883\u4e2d\u5b89\u88c5\u548c\u8fd0\u884c\u00a0Python\u00a0\u5e94\u7528\u7a0b\u5e8f\u3002\u76f4\u63a5\u4f7f\u7528pip\u5b89\u88c5python\u53d1\u5e03\u7684\u7a0b\u5e8f\uff0c\u53ef\u80fd\u4f1a\u5bf9\u73af\u5883\u9020\u6210\u6c61\u67d3\u3002\u7528pipx\u5c31\u6ca1\u6709\u8fd9\u4e2a\u56f0\u6270\u4e86\u3002</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>sudo apt install pipx\npipx ensurepath\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#poetry","title":"poetry","text":"<p>Poetry \u662f Python \u4e2d\u7684\u4f9d\u8d56\u7ba1\u7406\u548c\u6253\u5305\u5de5\u5177\u3002\u5b83\u5141\u8bb8\u60a8\u58f0\u660e\u60a8\u7684\u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5e93\uff0c\u5e76\u4e14\u5b83\u5c06\u4e3a\u60a8\u7ba1\u7406\uff08\u5b89\u88c5/\u66f4\u65b0\uff09\u5b83\u4eec\u3002 Poetry \u63d0\u4f9b\u4e86\u4e00\u4e2a\u9501\u5b9a\u6587\u4ef6\u6765\u786e\u4fdd\u53ef\u91cd\u590d\u5b89\u88c5\uff0c\u5e76\u53ef\u4ee5\u6784\u5efa\u60a8\u7684\u9879\u76ee\u4ee5\u8fdb\u884c\u5206\u53d1\u3002\u548cRust\u7684Cargo\u975e\u5e38\u7c7b\u4f3c\u3002</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>pipx install poetry\n</code></pre> <p>\u4e00\u4e2a\u8ba9\u4eba\u6bd4\u8f83\u5173\u5fc3\u7684\u95ee\u9898\u662f\uff0cpoery\u4f1a\u628a\u4f9d\u8d56\u5b89\u88c5\u5728\u54ea\u91cc\uff1f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPoetry \u5728\u00a0<code>{cache-dir}/virtualenvs</code>\u00a0\u4e2d\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91 Poetry \u914d\u7f6e\u6765\u66f4\u6539\u00a0<code>cache-dir</code>\u00a0\u503c\u3002\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u00a0<code>virtualenvs.in-project</code>\u00a0\u914d\u7f6e\u53d8\u91cf\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\u521b\u5efa\u865a\u62df\u73af\u5883\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5148\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff0c\u518d\u4f7f\u7528Poetry\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#use-with-docker","title":"Use with Docker","text":"<p>\u6309\u7167\u4e00\u822c\u7684\u65b9\u5f0f\u4f7f\u7528poetry\u5b89\u88c5\u4f9d\u8d56\uff0c\u9700\u8981\u5c06\u6574\u4e2a\u6587\u4ef6\u5939\u590d\u5236\u5230docker\u4e2d\uff0c\u7136\u540e\u6267\u884c<code>poetry install</code>\u3002\u8fd9\u5bf9docker\u7684\u7f13\u5b58\u673a\u5236\u975e\u5e38\u7684\u4e0d\u53cb\u597d\uff0c\u4efb\u4f55\u7684\u6539\u52a8\u90fd\u8981\u91cd\u65b0\u5b89\u88c5\u4e00\u904d\u4f9d\u8d56\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u4ee3\u66ff</p> <pre><code>COPY pyproject.toml poetry.lock ./\nRUN poetry install --no-root --no-directory --with bin\n\n# Copy folder\nCOPY . /root/esim\nRUN cd /root/esim &amp;&amp; poetry install\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#publish-a-package","title":"Publish a package","text":"<p>\u5982\u679c\u4f7f\u7528poetry\u7684\u8bdd\uff0c\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\u4f7f\u7528<code>poetry build</code>\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f1a\u5728<code>dist</code>\u6587\u4ef6\u5939\u4e0b\u653e\u6784\u5efa\u7684\u5305\u3002\u7528<code>pip install xxx.whl</code>\u5c31\u53ef\u4ee5\u5b89\u88c5\u4e86\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E6%9E%84%E5%BB%BA/#pytest","title":"pytest","text":"<p>python\u6700\u6d41\u884c\u7684\u6d4b\u8bd5\u6846\u67b6\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/","title":"Rust","text":"<p>Rust \u53ef\u80fd\u662f\u5b66\u4e60\u66f2\u7ebf\u6700\u9661\u5ced\u7684\u7a0b\u5e8f\u8bed\u8a00\u4e86\uff0c\u4f60\u5fc5\u987b\u5341\u5206\u4e86\u89e3\u5b83\u624d\u80fd\u7528\u5b83\u6765\u5b8c\u6210\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u534a\u751f\u4e0d\u719f\u5c31\u5f00\u59cb\u5199\u4ee3\u7801\u4f1a\u88ab\u7f16\u8bd1\u5668\u6298\u78e8\u5230\u53d1\u75af\u3002\u4e0d\u8fc7\u5982\u679c\u4f60\u6709\u4e00\u4e9b\u5bf9\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u7684\u8ba4\u8bc6\uff0c\u7406\u89e3\u8fd9\u4e9bRust\u7684\u7279\u70b9\u5e76\u4e0d\u56f0\u96be\u3002\u4e0a\u624b\u4e86\u611f\u89c9\u4e5f\u8fd8\u597d\uff0c\u751a\u81f3\u6709\u70b9\u4f9d\u8d56\u5f3a\u5927\u7684\u7f16\u8bd1\u5668\u3002\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e3b\u8981\u53c2\u8003\u4ee5\u4e0b\u8d44\u6599\u548c\u7f51\u4e0a\u7684\u4e00\u4e9bBlog\uff1a</p> <ul> <li>https://doc.rust-lang.org/book/ Rust\u201c\u5723\u7ecf\u201d</li> <li>\u6df1\u5165\u6d45\u51faRust - \u8303\u957f\u6625</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/","title":"\u5f02\u6b65\u548c\u5e76\u53d1","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#send-sync","title":"Send &amp; Sync","text":"<p>\u5728 Rust \u4e2d\uff0c<code>Send</code> \u548c <code>Sync</code> \u662f\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684 trait\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u7c7b\u578b\u5728\u5e76\u53d1\u73af\u5883\u4e0b\u7684\u5b89\u5168\u6027\u3002\u7406\u89e3\u8fd9\u4e24\u4e2a trait \u7684\u542b\u4e49\u548c\u5e94\u7528\u662f\u8fdb\u884c Rust \u5e76\u53d1\u7f16\u7a0b\u7684\u5173\u952e\u3002</p> <p><code>Send</code> \u6807\u8bb0 trait \u8868\u793a\u4e00\u4e2a\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u5b89\u5168\u5730\u4ece\u4e00\u4e2a\u7ebf\u7a0b\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u578b <code>T</code> \u5b9e\u73b0\u4e86 <code>Send</code>\uff0c\u90a3\u4e48\u4e00\u4e2a\u8be5\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u53bb\u4f7f\u7528\u3002\u5927\u591a\u6570 Rust \u7684\u7c7b\u578b\u90fd\u662f <code>Send</code>\u3002\u4e0d\u662f <code>Send</code> \u7684\u4f8b\u5b50\u5305\u62ec <code>Rc&lt;T&gt;</code>\uff08\u5f15\u7528\u8ba1\u6570\u667a\u80fd\u6307\u9488\uff09\uff0c\u56e0\u4e3a <code>Rc&lt;T&gt;</code> \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u591a\u4e2a\u7ebf\u7a0b\u589e\u51cf\u5f15\u7528\u8ba1\u6570\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u7ade\u4e89\u3002<code>Arc&lt;T&gt;</code> \u662f\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u5f15\u7528\u8ba1\u6570\u667a\u80fd\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u5728\u591a\u7ebf\u7a0b\u4e2d\u5171\u4eab\uff0c\u56e0\u4e3a\u5185\u90e8\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6765\u7ba1\u7406\u5f15\u7528\u8ba1\u6570\u3002</p> <p><code>Sync</code> \u6807\u8bb0 trait \u8868\u793a\u4e00\u4e2a\u7c7b\u578b\u7684\u5f15\u7528\uff08<code>&amp;T</code>\uff09\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u3002\u5982\u679c\u7c7b\u578b <code>T</code> \u662f <code>Sync</code> \u7684\uff0c\u610f\u5473\u7740 <code>&amp;T</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u5728\u5185\u90e8\u6ca1\u6709\u53ef\u53d8\u72b6\u6001\uff0c\u6216\u8005\u7c7b\u578b\u4f7f\u7528\u5185\u90e8\u9501\uff08\u5982 <code>Mutex</code> \u6216 <code>RwLock</code>\uff09\u6765\u7ba1\u7406\u5185\u90e8\u72b6\u6001\u7684\u8bbf\u95ee\u3002\u4e0d\u662f <code>Sync</code> \u7684\u4f8b\u5b50\u5305\u62ec <code>RefCell&lt;T&gt;</code> \u548c <code>Cell&lt;T&gt;</code>\uff0c\u56e0\u4e3a\u5b83\u4eec\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5176\u5185\u90e8\u503c\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u9501\u6216\u5176\u4ed6\u7ebf\u7a0b\u5b89\u5168\u7684\u673a\u5236\u6765\u4fdd\u62a4\u5176\u72b6\u6001\u3002</p> <p>\u4ed6\u4eec\u7684\u5b9e\u73b0\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u7406\u7684\uff0c\u9664\u975e\u4f60\u4f7f\u7528<code>unsafe</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#future-poll","title":"Future &amp; Poll","text":"<p>\u5f02\u6b65\u7f16\u7a0b\u662f\u4e00\u9879\u91cd\u8981\u529f\u80fd\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u7b49\u5f85\u67d0\u4e9b\u64cd\u4f5c\u5b8c\u6210\uff08\u4f8b\u5982 I/O \u64cd\u4f5c\uff09\u65f6\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002Rust \u7684\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\u5efa\u7acb\u5728 <code>Future</code> trait \u548c <code>Poll</code> \u7c7b\u578b\u4e0a\u3002\u5728 Rust \u4e2d\uff0c<code>Future</code> \u662f\u4e00\u4e2a trait\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\u7684\u6700\u7ec8\u5b8c\u6210\u7ed3\u679c\u3002<code>Future</code> \u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u6210\u7684\u8ba1\u7b97\u503c\u3002\u5f53\u4e00\u4e2a <code>Future</code> \u88ab polled \u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u63a8\u8fdb\u5176\u5185\u90e8\u72b6\u6001\uff0c\u5982\u679c\u64cd\u4f5c\u5b8c\u6210\u5219\u8fd4\u56de\u7ed3\u679c\uff0c\u5982\u679c\u672a\u5b8c\u6210\u5219\u8868\u793a\u4ecd\u7136\u5728\u7b49\u5f85\u3002</p> <pre><code>pub trait Future {\n    type Output;\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Self::Output&gt;;\n}\n</code></pre> <p>\u8fd9\u91cc\u7684\u5173\u952e\u70b9\u662f\uff1a</p> <ul> <li><code>Output</code>\uff1a\u8fd9\u662f <code>Future</code> \u5b8c\u6210\u540e\u8fd4\u56de\u7684\u7c7b\u578b\u3002</li> <li><code>poll</code> \u65b9\u6cd5\uff1a\u8fd9\u662f <code>Future</code> \u88ab\u8c03\u7528\u4ee5\u5c1d\u8bd5\u5411\u524d\u63a8\u8fdb\u5176\u72b6\u6001\u7684\u65b9\u6cd5\u3002\u5b83\u63a5\u6536\u4e00\u4e2a <code>Context</code> \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u63d0\u4f9b\u4e86 <code>Waker</code>\uff0c\u7528\u4e8e\u5728 <code>Future</code> \u51c6\u5907\u597d\u518d\u6b21\u88ab polled \u65f6\u901a\u77e5\u6267\u884c\u5668\u3002</li> </ul> <p><code>Poll</code> \u662f\u4e00\u4e2a\u679a\u4e3e\uff0c\u5b9a\u4e49\u5728 <code>std::task</code> \u6a21\u5757\u4e2d\uff0c\u7528\u4e8e\u8868\u793a <code>Future</code> \u7684\u5b8c\u6210\u72b6\u6001\uff1a</p> <pre><code>pub enum Poll&lt;T&gt; {\n    Ready(T),\n    Pending,\n}\n</code></pre> <ul> <li><code>Ready(T)</code>\uff1a\u8868\u793a <code>Future</code> \u5df2\u7ecf\u5b8c\u6210\uff0c\u643a\u5e26\u7740\u6700\u7ec8\u7ed3\u679c <code>T</code>\u3002</li> <li><code>Pending</code>\uff1a\u8868\u793a <code>Future</code> \u5c1a\u672a\u5b8c\u6210\uff0c\u9700\u8981\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u523b\u518d\u6b21\u5c1d\u8bd5\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#async-await","title":"async &amp; await","text":"<p><code>async</code> \u548c <code>await</code> \u662f\u7528\u4e8e\u7b80\u5316\u5f02\u6b65\u7f16\u7a0b\u7684\u5173\u952e\u5173\u952e\u5b57\u3002\u5b83\u4eec\u8ba9\u7f16\u5199\u5f02\u6b65\u4ee3\u7801\u51e0\u4e4e\u50cf\u5199\u540c\u6b65\u4ee3\u7801\u4e00\u6837\u7b80\u5355\uff0c\u5e76\u5728\u5e95\u5c42\u81ea\u52a8\u5904\u7406 <code>Future</code> \u548c <code>Poll</code> \u7684\u590d\u6742\u6027\u3002</p> <p><code>async</code> \u5173\u952e\u5b57\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\u6216\u5f02\u6b65\u5757\u3002\u5f53\u4f60\u5728\u51fd\u6570\u524d\u52a0\u4e0a <code>async</code> \u5173\u952e\u5b57\u65f6\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Future</code> trait \u7684\u7c7b\u578b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u8fd9\u4e2a\u51fd\u6570\u672c\u8eab\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u5c06\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u523b\u5b8c\u6210\u7684 <code>Future</code>\u3002\u5f53\u4f60\u4f7f\u7528 <code>async</code> \u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0cRust \u7684\u7f16\u8bd1\u5668\u5c06\u8fd9\u4e2a\u51fd\u6570\u8f6c\u6362\u6210\u4e00\u4e2a\u72b6\u6001\u673a\u3002\u8fd9\u4e2a\u72b6\u6001\u673a\u80cc\u540e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Future</code> trait \u7684\u7c7b\u578b\u3002\u6bcf\u5f53\u8fd9\u4e2a <code>Future</code> \u7684 <code>poll</code> \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u6839\u636e\u5185\u90e8\u72b6\u6001\u51b3\u5b9a\u662f\u7ee7\u7eed\u6267\u884c\u3001\u6682\u505c\u8fd8\u662f\u5b8c\u6210\u3002</p> <p><code>await</code> \u5173\u952e\u5b57\u7528\u4e8e\u5728\u5f02\u6b65\u51fd\u6570\u6216\u5f02\u6b65\u5757\u5185\u90e8\u201c\u7b49\u5f85\u201d\u53e6\u4e00\u4e2a <code>Future</code> \u7684\u5b8c\u6210\u3002\u5b83\u53ea\u80fd\u5728 <code>async</code> \u5757\u6216\u51fd\u6570\u4e2d\u4f7f\u7528\u3002\u4f7f\u7528 <code>await</code> \u53ef\u4ee5\u6682\u505c\u5f53\u524d\u51fd\u6570\u7684\u6267\u884c\uff0c\u76f4\u5230 <code>Future</code> \u5b8c\u6210\u4e3a\u6b62\uff0c\u4e0d\u4f1a\u963b\u585e\u7ebf\u7a0b\u3002\u6bcf\u6b21\u4f7f\u7528 <code>await</code> \u64cd\u4f5c\u7b26\u65f6\uff0c\u5982\u679c\u88ab\u7b49\u5f85\u7684 <code>Future</code> \u5c1a\u672a\u5b8c\u6210\uff08\u5373\u8fd4\u56de <code>Poll::Pending</code>\uff09\uff0c\u5f53\u524d <code>Future</code> \u4e5f\u4f1a\u8fd4\u56de <code>Poll::Pending</code> \u5e76\u5c06\u63a7\u5236\u6743\u4ea4\u56de\u7ed9\u6267\u884c\u5668(yeild)\u3002\u8fd9\u5141\u8bb8\u6267\u884c\u5668\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u4efb\u52a1\u3002\u5f53\u88ab\u7b49\u5f85\u7684 <code>Future</code> \u51c6\u5907\u597d\u7ee7\u7eed\u6267\u884c\u65f6\uff0c\u6267\u884c\u5668\u4f1a\u518d\u6b21 <code>poll</code> \u5f53\u524d <code>Future</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#pin-unpin","title":"Pin &amp; Unpin","text":"<p><code>Pin</code>\u7684\u51fa\u73b0\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3 \u81ea\u5f15\u7528\u7c7b\u578b \u95ee\u9898\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5bf9\u8c61\u4fdd\u5b58\u4e86\u81ea\u5df1\u7684\u5730\u57400x20\uff0c\u90a3\u4e48\u5f53\u4ed6\u88ab\u79fb\u52a8\u52300x40\u7684\u65f6\u5019\uff0c0x20\u5c31\u53d8\u6210\u4e00\u4e2a\u60ac\u7a7a\u6307\u9488\u3002\u6211\u4eec\u4e00\u822c\u60c5\u51b5\u4e0d\u4f1a\u5199\u51fa \u81ea\u5f15\u7528\u7c7b\u578b \u7684\u6570\u636e\u7ed3\u6784\u3002\u4f46\u662f\uff0c<code>Future</code> \u5c31\u53ef\u80fd\u662f\u3002\uff08\u6b64\u5916\uff0cLinux\u5185\u6838\u5e38\u7528\u7684\u4fb5\u5165\u5f0f\u53cc\u94fe\u8868\u5982\u679c\u60f3\u5728Rust\u5b9e\u73b0\uff0c\u4e5f\u9700\u8981<code>Pin</code>\uff09</p> <p><code>Pin</code>\u4ed6\u5185\u90e8\u5305\u88f9\u4e86\u53e6\u5916\u4e00\u4e2a\u6307\u9488P\uff0c\u5e76\u4e14\u53ea\u8981P\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff08\u6211\u4eec\u79f0\u4e3aT\uff09\u6ca1\u6709\u5b9e\u73b0Unpin\uff0c\u5219\u53ef\u4ee5\u4fdd\u8bc1T\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u79fb\u52a8\uff08move\uff09\u3002\u672c\u8d28\u4e0a\uff0cPin \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6807\u8bb0\uff0c\u5411\u7f16\u8bd1\u5668\u4fdd\u8bc1\u201c\u5982\u679c\u6211\u6307\u5411\u7684\u5bf9\u8c61\uff08T\uff09\u4e0d\u80fd\u5728\u5185\u5b58\u4e2d\u81ea\u7531\u7684\u79fb\u52a8\uff08!Unpin\uff09\uff0c\u90a3\u4e48\u4ed6\u5c31\u80af\u5b9a\u4e0d\u4f1a\u5728\u5185\u5b58\u4e2d\u88ab\u79fb\u52a8\u201d\u3002</p> <p><code>Pin</code> \u901a\u8fc7\u963b\u6b62 <code>&amp;mut T</code> \u5230 <code>&amp;mut U</code> \u7684\u8f6c\u6362\u6765\u786e\u4fdd\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u901a\u5e38\u8fd9\u79cd\u8f6c\u6362\u5141\u8bb8\u901a\u8fc7\u66ff\u6362\u503c\u6765\u79fb\u52a8\u6570\u636e\u3002</p> <p><code>Unpin</code> \u662f\u4e00\u4e2a\u81ea\u52a8\u5b9e\u73b0\u7684 trait\uff0c\u5f53\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 <code>Unpin</code> trait\uff0c\u8868\u793a\u5b83\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u201c\u79fb\u52a8\u201d\uff0c\u5373\u4f7f\u5b83\u5df2\u88ab\u56fa\u5b9a\u3002\u5927\u591a\u6570 Rust \u7684\u5185\u7f6e\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86 <code>Unpin</code>\uff0c\u4f46\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5305\u542b\u4e0d\u53ef\u79fb\u52a8\u7684\u5b57\u6bb5\uff08\u5982\u901a\u8fc7 <code>Pin</code> \u5305\u88c5\u7684\u5b57\u6bb5\uff09\uff0c\u5219\u8be5\u7c7b\u578b\u53ef\u80fd\u4e0d\u4f1a\u81ea\u52a8\u5b9e\u73b0 <code>Unpin</code>\u3002</p> <p>\u770b\u4e00\u4e0bpin_mut\u5b8f\u7684\u5b9e\u73b0\uff0c\u5f88\u6709\u610f\u601d\u3002\u9996\u5148shadow\u539f\u672c\u7684\u53d8\u91cf\uff0c\u7136\u540e<code>new_unchecked</code>\u3002\u5c31\u5b8c\u4e8b\u4e86\u3002\u51ed\u4ec0\u4e48\u5bf9\u8c61\u5c31\u88abPin\u4f4f\u4e86\u5462\uff1f\u56e0\u4e3a\u539f\u672c\u7684\u5bf9\u8c61\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\u4e86\uff0c\u518d\u591a\u52a0\u4e86\u4e00\u4e2aPin\u4e4b\u540e\u53ea\u662f\u591a\u4e86\u4e00\u4e2a\u7f16\u8bd1\u5668\u7684\u6807\u8bb0\uff0c\u963b\u6b62 <code>&amp;mut T</code> \u5230 <code>&amp;mut U</code> \u7684\u8f6c\u6362\u3002\u6240\u4ee5\u662f\u5b89\u5168\u7684\u3002\u8fd9\u662f\u5c06\u503cPin\u5728\u6808\u4e0a\u7684\u65b9\u6cd5\u3002Pin\u5728\u5806\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528<code>Box::pin</code>\u3002</p> <pre><code>#[macro_export]\nmacro_rules! pin_mut {\n    ($($x:ident),* $(,)?) =&gt; { $(\n        // Move the value to ensure that it is owned\n        let mut $x = $x;\n        // Shadow the original binding so that it can't be directly accessed\n        // ever again.\n        #[allow(unused_mut)]\n        let mut $x = unsafe {\n            $crate::core_reexport::pin::Pin::new_unchecked(&amp;mut $x)\n        };\n    )* }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#executor","title":"Executor","text":"<p>Executor\u662f\u771f\u6b63\u8d1f\u8d23\u8c03\u5ea6\u6267\u884cFuture\u7684\u4e1c\u897f\u3002\u4f8b\u5982</p> <ul> <li>futures::executor::block_on \u662f\u6700\u7b80\u5355\u7684Executor\uff0c\u963b\u585e\u7ebf\u7a0b\u76f4\u5230Future\u6267\u884c\u5b8c\u6210\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#join-select","title":"Join &amp; Select","text":"<p>\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u5c06\u666e\u901a\u51fd\u6570\u53d8\u6210\u5f02\u6b65\u51fd\u6570\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u4ee3\u7801\u7684\u5e76\u53d1\u6027\u548c\u4e4b\u524d\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u4ecd\u7136\u662f\u987a\u5e8f\u6267\u884c\u3002\u8981\u63d0\u9ad8\u4ee3\u7801\u5e76\u53d1\u6027\u7684\u5173\u952e\u662f\u8981\u8ba9 Futures \u53ef\u4ee5\u4e00\u8d77\u6267\u884c\u3002</p> <p><code>Join</code>\u4ee3\u8868\u7684\u6267\u884c\u5173\u7cfb\u5c31\u662f Futures \u53ef\u4ee5\u540c\u65f6\u5f00\u59cb\u6267\u884c\uff0c\u7136\u540e\u7b49\u5f85\u4ed6\u4eec\u5168\u90e8\u5b8c\u6210\u540e\u8fd4\u56de\u3002\u4e3a\u6b64\uff0cfutures\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5b8f<code>join</code>\u548c<code>try_join</code>\uff0c\u540e\u8005\u5982\u679c Futures \u4e2d\u6709\u4e00\u4e2a\u8fd4\u56de Err \uff0c\u5219\u7acb\u523b\u8fd4\u56deErr\u3002</p> <pre><code>// `join!` is variadic, so you can pass any number of futures\nlet c = async { 3 };\nlet d = async { 4 };\nlet e = async { 5 };\nassert_eq!(join!(c, d, e), (3, 4, 5));\n</code></pre> <p><code>Select</code>\u4ee3\u8868\u7684\u6267\u884c\u5173\u7cfb\u662f Futures \u53ef\u4ee5 \u540c\u65f6\u5f00\u59cb\u6267\u884c\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u5b8c\u6210\u540e\u7acb\u523b\u8fd4\u56de\u3002\u4e3a\u6b64\uff0cfutures\u63d0\u4f9b\u4e86\u5b8f<code>select</code>\u3002\u5b83\u7684\u7528\u6cd5\u4f1a\u66f4\u590d\u6742\u4e00\u70b9\u3002</p> <p>\u9664\u4e86\u8fd9\u4e24\u79cd\u6267\u884c\u5173\u7cfb\uff0c\u8fd8\u6709</p> <ul> <li>\u4e24\u4e2aFuture\u540c\u65f6\u5f00\u59cb\u6267\u884c\uff0c\u4f46\u662f\u5f7c\u6b64\u4e4b\u95f4\u6beb\u65e0\u5173\u7cfb\u3002\u6bd4\u5982\u6211\u4eec\u5728\u5904\u7406\u5b8c\u6570\u636e\u4e4b\u540e\uff0c\u4e00\u8fb9\u5c06\u6570\u636e\u8fdb\u884c\u7f13\u5b58\uff0c\u4e00\u8fb9\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u5355\u72ec\u5f00\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7f13\u5b58\u64cd\u4f5c\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#stream","title":"Stream","text":"<p><code>Stream</code> \u5c31\u662f\u4e00\u4e2a\u5f02\u6b65\u7684 <code>Iterator</code>\u3002\u66f4\u51c6\u786e\u7684\u8bf4\u6cd5\u5982\u4e0b\uff1a</p> <p>If <code>Future&lt;Output = T&gt;</code> is an asynchronous version of <code>T</code>, then <code>Stream&lt;Item = T&gt;</code> is an asynchronous version of <code>Iterator&lt;Item = T&gt;</code></p> <p>\u5728\u4f7f\u7528Stream\u6709\u4e00\u4e2a\u5f88\u5751\u7684\u5730\u65b9\uff0c\u56e0\u4e3a<code>next</code> \u65b9\u6cd5\u4e0d\u4f1a\u4f7f\u7528Stream\u7684\u6240\u6709\u6743\uff0c\u6240\u4ee5<code>Stream</code>\u9700\u8981\u540c\u65f6\u6ee1\u8db3<code>Unpin</code>\uff0c</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#_3","title":"\u57fa\u7840\u8bbe\u65bd","text":"<p>\u8981\u5b8c\u6574\u7684\u4f7f\u7528 <code>async</code> \u5f02\u6b65\u7f16\u7a0b\uff0c\u4f60\u9700\u8981\u4f9d\u8d56\u4ee5\u4e0b\u7279\u6027\u548c\u5916\u90e8\u5e93\uff1a</p> <ul> <li>\u5173\u952e\u5b57 <code>async/await</code> \u7531 Rust \u8bed\u8a00\u63d0\u4f9b\uff0c\u5e76\u8fdb\u884c\u4e86\u7f16\u8bd1\u5668\u5c42\u9762\u7684\u652f\u6301</li> <li>\u6240\u5fc5\u987b\u7684\u7279\u5f81(\u4f8b\u5982 <code>Future</code> )\u3001\u7c7b\u578b\u548c\u51fd\u6570\uff0c\u7531\u6807\u51c6\u5e93\u63d0\u4f9b\u5b9e\u73b0</li> <li>\u4f17\u591a\u5b9e\u7528\u7684\u7c7b\u578b\u3001\u5b8f\u548c\u51fd\u6570\u7531\u5b98\u65b9\u5f00\u53d1\u7684 <code>futures</code> \u5305\u63d0\u4f9b(\u4e0d\u662f\u6807\u51c6\u5e93)\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55 <code>async</code> \u5e94\u7528\u4e2d\uff0c\u4f46\u662f\u4e0d\u5305\u62ecExecutor\uff08\u4e0d\u7b97<code>block_on</code>\uff09\uff01</li> <li><code>async</code> \u4ee3\u7801\u7684\u6267\u884c\u3001<code>IO</code> \u64cd\u4f5c\u3001\u4efb\u52a1\u521b\u5efa\u548c\u8c03\u5ea6\u7b49\u7b49\u590d\u6742\u529f\u80fd\u7531\u793e\u533a\u7684 <code>async</code> \u8fd0\u884c\u65f6\u63d0\u4f9b\uff0c\u4f8b\u5982 <code>tokio</code> \u548c <code>async-std</code>\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#futures","title":"futures","text":"<p><code>futures</code> \u5e93\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5f02\u6b65\u7f16\u7a0b\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u6765\u652f\u6301\u5f02\u6b65\u7f16\u7a0b\u3002</p> <ol> <li>\u7ec4\u5408\u5668: futures\u5e93\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u6765\u7ec4\u5408\u548c\u94fe\u63a5Future\u3002\u4f8b\u5982,<code>join</code>\u5141\u8bb8\u540c\u65f6\u8fd0\u884c\u591a\u4e2aFuture\u5e76\u7b49\u5f85\u5b83\u4eec\u5168\u90e8\u5b8c\u6210\u3002</li> <li>\u9009\u62e9\u5668: <code>select!</code>\u5b8f\u5141\u8bb8\u540c\u65f6\u7b49\u5f85\u591a\u4e2aFuture,\u5e76\u5728\u4efb\u4f55\u4e00\u4e2a\u5b8c\u6210\u65f6\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</li> <li>Stream\uff1a\u7c7b\u4f3c\u4e8e\u540c\u6b65\u7f16\u7a0b\u4e2d\u7684<code>Iterator</code>,\u4f46\u662f\u7528\u4e8e\u5f02\u6b65\u573a\u666f\u3002\u5b83\u4ee3\u8868\u4e00\u7cfb\u5217\u53ef\u4ee5\u5f02\u6b65\u83b7\u53d6\u7684\u503c\u3002Stream trait\u5b9a\u4e49\u4e86<code>next</code>\u65b9\u6cd5,\u8fd4\u56de\u4e00\u4e2aFuture,\u8fd9\u4e2aFuture\u89e3\u6790\u4e3a<code>Option&lt;Item&gt;</code>\u3002</li> <li>Sink\u4ee3\u8868\u4e00\u4e2a\u53ef\u4ee5\u5f02\u6b65\u63a5\u6536\u503c\u7684\u76ee\u6807\u3002\u5b83\u53ef\u4ee5\u770b\u4f5c\u662fStream\u7684\u5bf9\u7acb\u9762\uff1aStream\u4ea7\u751f\u503c,\u800cSink\u6d88\u8d39\u503c\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#tokio","title":"tokio","text":"<p>Tokio\u662fRust\u751f\u6001\u7cfb\u7edf\u4e2d\u6700\u6d41\u884c\u7684\u5f02\u6b65\u8fd0\u884c\u65f6\u5e93\u4e4b\u4e00\u3002\u5b83\u4e3a\u6784\u5efa\u53ef\u9760\u3001\u9ad8\u6548\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u57fa\u7840\u8bbe\u65bd\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E5%92%8C%E5%B9%B6%E5%8F%91/#_4","title":"\u4ee3\u7801","text":"<ul> <li>https://course.rs/advance/async/intro.html</li> <li>https://folyd.com/blog/rust-pin-unpin/</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u53c2\u8003Rust Book\uff0c\u9519\u8bef\u5904\u7406\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\uff0c\u53ef\u6062\u590d\u7684\u9519\u8bef\u548c\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002\u53ef\u6062\u590d\u7684\u9519\u8bef\u5bf9\u5e94<code>Result</code>\uff0c\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u5bf9\u5e94 <code>panic</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#result","title":"Result","text":"<p>Result \u662f\u53ef\u6062\u590d\u9519\u8bef\u5904\u7406\u7684\u57fa\u7840\uff0c\u5e38\u89c1\u7684\u5bf9 Result \u7684\u7b80\u5355\u5904\u7406\u6709\u4ee5\u4e0b\u65b9\u6cd5\uff1a</p> <pre><code>result.unwrap();        // \u9002\u5408\u76f8\u4fe1\u4e00\u5b9a\u4e0d\u4f1a\u5931\u8d25\uff0c\u6216\u8005\u5199demo\nresult.expect(\"xxx\");   // \u9002\u5408\u5931\u8d25\u4e86\u4e5f\u6ca1\u6709\u529e\u6cd5\u5904\u7406\uff0c\u62a5\u4e2a\u9519panic\n// \u9002\u5408\u5931\u8d25\u4e86\u4e5f\u53ef\u4ee5\u5904\u7406\nif let Ok(x) = result {\n    todo!();\n} else {\n    todo!();\n}\nresult.unwrap_or(); // \u5931\u8d25\u4e86\u5c31\u7ed9\u4e2a\u9ed8\u8ba4\u503c\n</code></pre> <p>\u6839\u636e\u7f16\u7801\u89c4\u8303\u7684\u5efa\u8bae\uff0c\u5e94\u8be5\u5728\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u51fd\u6570\uff0c\u4ee5\u53ca\u4f1a Panic \u7684\u51fd\u6570\u6dfb\u52a0\u4ec0\u4e48\u65f6\u5019\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u8bf4\u660e\u3002</p> <pre><code>#![warn(clippy::missing_errors_doc)]\n#![warn(clippy::missing_panics_doc)]\n\n/// # Errors\n///\n/// Will return `Err` if ...\n/// \n/// # Panics\n///\n/// Will panic if ...\npub fn read(filename: String) -&gt; io::Result&lt;String&gt; {\n    unimplemented!();\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#try","title":"? \u548c Try","text":"<p><code>?</code>\u662fRust\u63d0\u4f9b\u7684\u8bed\u6cd5\u7cd6\uff0c\u8ba9\u6211\u4eec\u514d\u4e8e\u7f16\u5199\u9519\u8bef\u5904\u7406\u51fd\u6570\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u9519\u8bef\u8fd4\u56de\uff0c\u8ba9\u8c03\u7528\u8005\u8d1f\u8d23\u5904\u7406\u9519\u8bef\u3002 </p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>?</code> \u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u9519\u8bef\u7c7b\u578b\u9700\u8981\u548c\u51fd\u6570\u53c2\u6570\u5339\u914d\uff0c\u4e0d\u662f\u6240\u6709\u7684\u8fd4\u56de Result \u7684\u51fd\u6570\u90fd\u80fd\u7528 <code>?</code> \u4e00\u628a\u68ad\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u7528 <code>Result&lt;T,Box&lt;dyn Error&gt;&gt;</code>\uff0c\u4f46\u8fd9\u6837\u5e76\u4e0d\u597d\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u4ecb\u7ecd\u7684\u51fd\u6570\u5f0f\u505a\u4e00\u4e9b\u5904\u7406\u3002</p> <p>\u5982\u679c\u4e3a\u4e86\u7701\u4e8b\uff0c\u53ef\u4ee5\u7528 Anyhow \u8fd9\u4e2a\u5e93\u3002\u4f60\u5c31\u53ef\u4ee5\u968f\u4fbf\u7528 <code>?</code> \u4e86\u3002\u66f4\u79d1\u5b66\u7684\u505a\u6cd5\u662f\u4e3a\u81ea\u5df1\u7a0b\u5e8f\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\u5b9a\u4e49\u597d\u9519\u8bef\u7c7b\u578b\uff0cthiserror \u5e93\u53ef\u4ee5\u5e2e\u5fd9\u3002</p> <p>\u4e0b\u9762\u63a2\u7a76\u4e00\u4e0b <code>?</code> \u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3 trait <code>Try</code></p> <pre><code>pub trait Try: FromResidual&lt;Self::Residual&gt; {\n    type Output;\n    type Residual;\n    fn from_output(output: Self::Output) -&gt; Self;\n    fn branch(self) -&gt; ControlFlow&lt;Self::Residual, Self::Output&gt;;\n}\npub enum ControlFlow&lt;B, C = ()&gt; {\n    Continue(C),\n    Break(B),\n}\n</code></pre> <p>\u5f53\u6211\u4eec\u5728\u5199 <code>x?</code> \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6211\u4eec\u7684\u610f\u601d\u662f\u3002</p> <pre><code>// x: X\nmatch x.branch() {\n    ControlFlow::Continue(a) =&gt; a,\n    ControlFlow::Break(a) =&gt; return X::from_output(a)\n}\n</code></pre> <p>\u4e0d\u96be\u77e5\u9053 <code>Result</code> \u5e94\u8be5\u5b9e\u73b0\u4e86 <code>Try</code> Trait. \u4e0b\u9762\u662f\u5b9e\u73b0\u4ee3\u7801\u3002</p> <pre><code>// \u548c\u6807\u51c6\u5e93\u6709\u51fa\u5165https://doc.rust-lang.org/src/core/result.rs.html#1893-1900\nimpl &lt;T,E&gt; ops::Try for Result&lt;T,E&gt; {\n    type Output = T;\n    type Residual = Result&lt;convert::Infallible, E&gt;;\n\n    fn from_output(output: Self::Output) -&gt; Self {\n        Ok(output)\n    }\n\n    fn branch(self) -&gt; ControlFlow&lt;Self::Residual, Self::Output&gt; {\n        match self {\n            Ok(v) =&gt; ControlFlow::Continue(v),\n            Err(e) =&gt; ControlFlow::Break(Err(e))\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#_2","title":"\u51fd\u6570\u5f0f\u5904\u7406","text":"<p>\u4e0b\u9762\u662f\u4e00\u7cfb\u5217\u201c\u8bed\u6cd5\u7cd6\u201d\uff0c\u5176\u5b9e\u90fd\u53ef\u4ee5\u7528 match \u505a\u8fdb\u4e00\u6b65\u7684\u5904\u7406\u3002\u6bd4\u5982\u6709\u4e0b\u9762\u56db\u4e2a</p> \u65b9\u6cd5 \u539f\u578b \u8bf4\u660e and <code>pub fn and&lt;U&gt;(self, res: Result&lt;U, E&gt;) -&gt; Result&lt;U, E&gt;</code> Returns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> value of <code>self</code>. and_then <code>pub fn and_then&lt;U, F&gt;(self, op: F) -&gt; Result&lt;U, E&gt; where F: FnOnce(T) -&gt; Result&lt;U, E&gt;,</code> Calls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> value of <code>self</code>. or <code>pub fn or&lt;F&gt;(self, res: Result&lt;T, F&gt;) -&gt; Result&lt;T, F&gt;</code> Returns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> value of <code>self</code>. or_else <code>pub fn or_else&lt;F, O&gt;(self, op: O) -&gt; Result&lt;T, F&gt; where O: FnOnce(E) -&gt; Result&lt;T, F&gt;,</code> Calls <code>op</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> value of <code>self</code>. <p><code>and</code> \u548c <code>and_then</code> \u5728\u8bed\u4e49\u4e0a\u5176\u5b9e\u975e\u5e38\u7c7b\u4f3c\uff0c\u5982\u679c\u662f Ok \u7684\u8bdd\u518d\u505a\u8fdb\u4e00\u6b65\u7684\u5904\u7406\u3002\u4e0d\u8fc7 and \u7684\u53c2\u6570\u662f\u8fdb\u4e00\u6b65\u5904\u7406\u7684 \u7ed3\u679c\uff0c\u800c and_then \u7684\u53c2\u6570\u662f\u8fdb\u4e00\u6b65\u5904\u7406\u7684 \u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4 and_then \u53ef\u4ee5\u8d77\u5230 \u5ef6\u8fdf\u8ba1\u7b97 \u7684\u6548\u679c\u3002\u5982\u679c and \u7684\u8fdb\u4e00\u6b65\u5904\u7406\u6709\u4e00\u5b9a\u7684\u4ee3\u4ef7\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u9009\u62e9 and_then\u3002<code>or</code> \u548c <code>or_else</code> \u7684\u5173\u7cfb\u4e5f\u662f\u5b8c\u5168\u7c7b\u4f3c\u7684\u3002</p> <p>\u9664\u6b64\u5916\u8fd8\u6709 <code>map</code>, <code>map_or</code>, <code>map_err</code>, <code>mar_or_else</code>, <code>unwrap</code>, <code>unwrap_or</code>, <code>unwrap_or_else</code>\uff0c\u53ef\u4ee5\u5e2e\u4f60\u628a\u9519\u8bef\u5904\u7406\u5904\u7406\u51fa\u82b1\u513f\u6765\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#panic","title":"Panic","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\uff08std\uff09\u4e0b\uff0cpanic\u5c06\u6253\u5370\u5931\u8d25\u6d88\u606f\u3001\u5c55\u5f00\u3001\u6e05\u7406\u5806\u6808\u5e76\u9000\u51fa\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8ba9 Rust \u5728\u53d1\u751f panic \u65f6\u663e\u793a\u8c03\u7528\u5806\u6808\uff0c\u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u8ffd\u8e2a\u6050\u614c\u7684\u6765\u6e90\u3002</p> <p>\u4e0d\u8fc7\u7a0b\u5e8f\u662f\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49 panic handler \u7684\uff0c\u867d\u7136\u4e00\u822c\u60c5\u51b5\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e2a\u7279\u6027\uff0c</p> <p>\u5728no_std\u73af\u5883\u4e0b\u6211\u4eec\u5fc5\u987b\u81ea\u5b9a\u4e49 Panic handler\uff0c\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u53c2\u8003https://doc.rust-lang.org/nomicon/panic-handler.html\u3002</p> <pre><code>#[panic_handler]\nfn panic(info: &amp;PanicInfo) -&gt; ! {\n    let mut host_stderr = HStderr::new();\n\n    // logs \"panicked at '$reason', src/main.rs:27:4\" to the host stderr\n    writeln!(host_stderr, \"{}\", info).ok();\n\n    loop {}\n}\n</code></pre> <p>std \u73af\u5883\u4e2d\u60f3\u8981\u81ea\u5b9a\u4e49panic handler\uff0c\u53ef\u4ee5\u4f7f\u7528<code>std::panic::set_hook</code>\u65b9\u6cd5\u3002</p> <pre><code>fn main() {\n    std::panic::set_hook(Box::new(move |_panic_info| {\n        eprintln!(\"{}\", panic_info);\n    }));\n}\n</code></pre> <p>\u53ef\u4ee5\u501f\u52a9 color-eyre \u7684\u5e2e\u5fd9\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#crates","title":"Crates","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#anyhow","title":"anyhow","text":"<p><code>anyhow</code> \u662f Rust \u8bed\u8a00\u4e2d\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u9519\u8bef\u5904\u7406\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5904\u7406\u9519\u8bef\uff0c\u7279\u522b\u662f\u5728\u90a3\u4e9b\u4e0d\u9700\u8981\u7279\u522b\u590d\u6742\u9519\u8bef\u5904\u7406\u7684\u573a\u666f\u4e2d\uff08\u4f8b\u5982\u9876\u5c42\u7684\u7b80\u5355\u5e94\u7528\uff09\u3002</p> <p>\u5b83\u63d0\u4f9b\u4e86<code>anyhow::Error</code>\u7c7b\u578b\u3002\u4f7f\u7528\u4e0a\u7c7b\u4f3c<code>Box&lt;dyn std::error::Error&gt;</code>\uff0c\u4efb\u4f55\u5b9e\u73b0\u4e86<code>std::error::Error</code>\u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u7528\u5b83\u4ee3\u66ff\uff08\u56e0\u4e3a\u5b9e\u73b0\u4e86<code>AsRef</code>\uff1f\uff09\u3002<code>anyhow::Result&lt;T&gt;</code> = <code>Result&lt;T, anyhow::Error&gt;</code>\u3002\u56e0\u6b64\uff0c\u6700\u7b80\u5355\u7684\u7528\u6cd5\u5c31\u662f\u5c06\u8fd4\u56de\u503c\u58f0\u660e\u4e3a<code>anyhow::Result</code>\uff0c\u7136\u540e\u78b0\u5230<code>Result</code>\u5c31<code>?</code>\u3002</p> <pre><code>use anyhow::Result;\n\nfn get_cluster_info() -&gt; Result&lt;ClusterMap&gt; {\n    let config = std::fs::read_to_string(\"cluster.json\")?;\n    let map: ClusterMap = serde_json::from_str(&amp;config)?;\n    Ok(map)\n}\n</code></pre> <p>\u67092\u79cd\u8fdb\u9636\u7684\u7528\u6cd5\uff0c\u4e00\u4e2a\u662f\u5728\u539f\u5148\u7684Error\u4e0a\u6dfb\u52a0\u4fe1\u606f\u4f9b\u4f7f\u7528\u8005\u8c03\u8bd5\uff0c\u4e00\u79cd\u662f\u7b80\u5355\u7684\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Error\u3002</p> <ul> <li><code>anyhow::Context</code> \u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff08lazy or not\uff09\u6765\u7ed9Result\u6dfb\u52a0\u989d\u5916\u4fe1\u606f\u3002</li> <li><code>anyhow!(\"XXX error\")</code> \u53ef\u4ee5\u7528\u6765\u7b80\u5355\u7684\u521b\u5efa\u4e00\u4e2aError\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#thiserror","title":"thiserror","text":"<p><code>thiserror</code> \u66f4\u9002\u5408\u7528\u4e8e\u5e93\u7684\u5f00\u53d1\uff0c\u5176\u4e2d\u9519\u8bef\u7c7b\u578b\u901a\u5e38\u9700\u8981\u66f4\u660e\u786e\u548c\u7ed3\u6784\u5316\u3002<code>thiserror</code> \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5e2e\u52a9\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e0e\u9519\u8bef\u76f8\u5173\u7684 trait\uff0c\u4f7f\u5f97\u9519\u8bef\u5904\u7406\u66f4\u52a0\u89c4\u8303\u548c\u6613\u4e8e\u7ef4\u62a4\u3002</p> <ol> <li>\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b: <code>thiserror</code> \u5141\u8bb8\u5f00\u53d1\u8005\u5b9a\u4e49\u81ea\u5df1\u7684\u9519\u8bef\u7c7b\u578b\uff0c\u6bcf\u79cd\u7c7b\u578b\u53ef\u4ee5\u5173\u8054\u7279\u5b9a\u7684\u6570\u636e\u548c\u4e0a\u4e0b\u6587\uff0c\u8fd9\u6709\u52a9\u4e8e\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u9519\u8bef\u5904\u7406\u548c\u4f20\u64ad\u3002</li> <li>\u81ea\u52a8\u5b9e\u73b0 <code>std::error::Error</code>: \u4f7f\u7528 <code>thiserror</code> \u7684 <code>#[derive(Error)]</code> \u5b8f\uff0c\u53ef\u4ee5\u81ea\u52a8\u4e3a\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b\u5b9e\u73b0 <code>std::error::Error</code> trait\uff0c\u7b80\u5316\u4e86\u9519\u8bef\u5b9e\u73b0\u7684\u590d\u6742\u6027\u3002</li> <li>\u9519\u8bef\u6d88\u606f\u6a21\u677f: <code>thiserror</code> \u652f\u6301\u5728\u9519\u8bef\u5b9a\u4e49\u4e2d\u76f4\u63a5\u4f7f\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4f5c\u4e3a\u9519\u8bef\u6d88\u606f\uff0c\u8fd9\u4e9b\u6d88\u606f\u53ef\u4ee5\u5305\u542b\u5173\u8054\u6570\u636e\u7684\u5b57\u6bb5\uff0c\u4ece\u800c\u63d0\u4f9b\u4e30\u5bcc\u7684\u9519\u8bef\u4fe1\u606f\u3002</li> <li>\u900f\u660e\u7684\u9519\u8bef\u8f6c\u53d1: <code>thiserror</code> \u63d0\u4f9b\u4e86 <code>#[error(transparent)]</code> \u5c5e\u6027\uff0c\u5141\u8bb8\u9519\u8bef\u7c7b\u578b\u900f\u660e\u5730\u5305\u88c5\u5176\u5b83\u9519\u8bef\u7c7b\u578b\uff0c\u4f7f\u5f97\u539f\u59cb\u9519\u8bef\u7c7b\u578b\u548c\u6d88\u606f\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\u51fa\u53bb\u3002</li> </ol> <p>### color eyre</p> <p><code>color-eyre</code> \u662f\u4e00\u4e2a Rust \u5e93\uff0c\u7528\u4e8e\u6539\u8fdb\u9519\u8bef\u62a5\u544a\u7684\u4f53\u9a8c\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8e\u9700\u8981\u9ad8\u8d28\u91cf\u9519\u8bef\u62a5\u544a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002<code>color-eyre</code> \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u7279\u6027\uff0c\u4f7f\u5f97\u5b83\u5728\u9519\u8bef\u62a5\u544a\u65b9\u9762\u8868\u73b0\u51fa\u8272\uff1a</p> <ol> <li>\u5f69\u8272\u548c\u683c\u5f0f\u5316\u7684\u9519\u8bef\u8f93\u51fa\uff1a<code>color-eyre</code> \u4f7f\u7528\u5f69\u8272\u548c\u6837\u5f0f\u5316\u7684\u6587\u672c\u6765\u589e\u5f3a\u9519\u8bef\u6d88\u606f\u7684\u53ef\u8bfb\u6027\u3002\u8fd9\u5305\u62ec\u4e3a\u4e0d\u540c\u7684\u9519\u8bef\u4fe1\u606f\u90e8\u5206\u4f7f\u7528\u4e0d\u540c\u7684\u989c\u8272\u548c\u683c\u5f0f\uff0c\u5982\u9519\u8bef\u7684\u7c7b\u578b\u3001\u6e90\u6587\u4ef6\u3001\u884c\u53f7\u7b49\u3002</li> <li>\u8be6\u7ec6\u7684\u9519\u8bef\u94fe\u8f93\u51fa\uff1a\u4e0e <code>anyhow</code> \u548c <code>eyre</code> \u7c7b\u4f3c\uff0c<code>color-eyre</code> \u652f\u6301\u9519\u8bef\u94fe\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u67e5\u770b\u5bfc\u81f4\u5f53\u524d\u9519\u8bef\u7684\u539f\u59cb\u9519\u8bef\u3002<code>color-eyre</code> \u4ee5\u4e00\u79cd\u6613\u4e8e\u8ffd\u8e2a\u7684\u65b9\u5f0f\u683c\u5f0f\u5316\u8fd9\u4e9b\u9519\u8bef\u94fe\u3002</li> <li>\u53ef\u914d\u7f6e\u6027\uff1a<code>color-eyre</code> \u63d0\u4f9b\u591a\u79cd\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u5f00\u53d1\u8005\u53ef\u4ee5\u8c03\u6574\u9519\u8bef\u62a5\u544a\u7684\u6837\u5f0f\u548c\u5185\u5bb9\uff0c\u5982\u542f\u7528\u6216\u7981\u7528\u5f69\u8272\u8f93\u51fa\uff0c\u6216\u8005\u66f4\u6539\u62a5\u544a\u7684\u5404\u4e2a\u90e8\u5206\u7684\u6837\u5f0f\u3002</li> <li>\u56de\u6eaf\u652f\u6301\uff1a<code>color-eyre</code> \u53ef\u4ee5\u96c6\u6210 Rust \u7684\u56de\u6eaf\u4fe1\u606f\uff0c\u5373\u5728\u53d1\u751f\u9519\u8bef\u65f6\u7684\u51fd\u6570\u8c03\u7528\u5806\u6808\u3002\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u548c\u786e\u5b9a\u9519\u8bef\u53d1\u751f\u539f\u56e0\u81f3\u5173\u91cd\u8981\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%AE%9E%E8%B7%B5/%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F/","title":"\u9759\u6001\u53d8\u91cf","text":"<p>\u4e0d\u540c\u4e8eC\u8bed\u8a00\uff0c\u5728Rust\u4e2d\u521b\u5efa\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\u5e76\u4e0d\u662f\u4e00\u4ef6\u975e\u5e38\u81ea\u7136\u7684\u4e8b\u60c5\u3002\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u9759\u6001\u53d8\u91cf\u8981\u80fd\u88ab\u591a\u7ebf\u7a0b\u5b89\u5168\u7684\u8bbf\u95ee\uff0c\u52a0\u4e86\u5f88\u591a\u9650\u5236\u3002</p> <p>\u57281.80 \u7248\u672c\u53d1\u5e03\u4e4b\u524d\uff0c\u60f3\u8981\u76f4\u63a5\u8c03\u7528\u975econst\u51fd\u6570\u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cf\u9700\u8981\u501f\u52a9\u7b2c\u4e09\u65b9\u5e93<code>lazy_static</code>\u7684\u5e2e\u52a9\u3002\u4f46\u662f\u65b0\u5f15\u5165\u7684<code>LazyCell</code> and <code>LazyLock</code>\u53ef\u4ee5\u8ba9\u6211\u4eec\u907f\u514d\u7b2c\u4e09\u65b9\u5e93\u7684\u5f15\u5165\u3002\u4f8b\u5982\uff1a</p> <pre><code>static LOG_INVOKE_RE: LazyLock&lt;Regex&gt; =\n    LazyLock::new(|| Regex::new(r\"Program ([a-zA-Z0-9]+) invoke \\[(\\d)\\]\").unwrap());\n</code></pre> <p><code>LazyLock</code> \u548c <code>LazyCell</code> \u7684\u6700\u5927\u533a\u522b\u662f\u524d\u8005\u7ebf\u7a0b\u5b89\u5168\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u592a\u61c2Rust\u5bf9\u7ebf\u7a0b\u5b89\u5168\u7684\u89c4\u8303\uff0c\u76f4\u63a5\u65e0\u8111\u4f7f\u7528<code>LazyLock</code>\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>impl&lt;T: Sync + Send, F: Send&gt; Sync for LazyLock&lt;T, F&gt;\nimpl&lt;T, F = fn() -&gt; T&gt; !Sync for LazyCell&lt;T, F&gt;\n</code></pre> <p>btw, <code>LazyLock</code> \u867d\u7136\u540d\u5b57\u91cc\u5e26 Lock\uff0c\u4f46\u662f\u4ed6\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u9501\uff0c\u4e0d\u80fd\u628a\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u578b\u53d8\u6210\u7ebf\u7a0b\u5b89\u5168\u3002\u6240\u4ee5\u5982\u679c\u60f3\u8981\u53ef\u53d8\u5f15\u7528\uff0c\u8fd8\u662f\u5f97\u8001\u8001\u5b9e\u5b9e\u52a0\u9501\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Binrw/","title":"Binrw","text":"<p><code>binrw</code>\u662f\u4e00\u4e2a\u4e13\u95e8\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u7684\uff08\u53cd\uff09\u5e8f\u5217\u5316\u5e93\uff0c\u5b83\u4e0e\u5176\u4ed6\u5e8f\u5217\u5316\u5e93\u5982<code>serde</code>\u6709\u663e\u8457\u7684\u4e0d\u540c\u3002<code>serde</code>\u4e3b\u8981\u5173\u6ce8\u4e8e\u5982\u4f55\u5c06Rust\u7ed3\u6784\u4f53\uff08struct\uff09\u8f7b\u677e\u4e14\u51c6\u786e\u5730\u6620\u5c04\u5230<code>serde</code>\u7684\u5185\u90e8\u6570\u636e\u6a21\u578b\u3002\u5728<code>serde</code>\u4e2d\uff0c\u5c06\u8fd9\u4e9b\u6570\u636e\u6a21\u578b\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6210\u6587\u4ef6\u683c\u5f0f\u7684\u6b65\u9aa4\u9700\u8981\u81ea\u884c\u5b9e\u73b0\u76f8\u5e94\u7684\u540e\u7aef\uff0c\u867d\u7136\u5bf9\u4e8e\u4e00\u4e9b\u901a\u7528\u683c\u5f0f\uff08\u5982 JSON \u548c XML\uff09\u6765\u8bf4\uff0c\u8fd9\u4e9b\u540e\u7aef\u901a\u5e38\u5df2\u7ecf\u5b58\u5728\u3002</p> <p>\u4e0e\u6b64\u76f8\u5bf9\uff0c<code>binrw</code>\u4e13\u6ce8\u4e8e\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u5177\u4f53\u6267\u884c\u8fc7\u7a0b\u3002\u5b83\u5141\u8bb8\u7528\u6237\u66f4\u52a0\u4fbf\u6377\u5730\u63cf\u8ff0Rust\u7ed3\u6784\u4f53\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u4e2d\u6bcf\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u7701\u53bb\u4e86\u624b\u52a8\u7f16\u5199\u5e8f\u5217\u5316\u5668\uff08<code>Serializer</code>\uff09\u548c\u53cd\u5e8f\u5217\u5316\u5668\uff08<code>Deserializer</code>\uff09\u7684\u9700\u8981\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/","title":"Serde","text":"<p><code>serde</code> \u662f\u4e00\u4e2a\u7528\u4e8e\u9ad8\u6548\u4e14\u901a\u7528\u5730\u5e8f\u5217\u5316Serialize\u548c\u53cd\u5e8f\u5217\u5316Deserialize Rust \u6570\u636e\u7ed3\u6784\u7684\u6846\u67b6\u3002\u53e6\u5916\uff0c<code>serde</code>\u4e3b\u8981\u5173\u6ce8\u4e8e\u5982\u4f55\u5c06Rust\u7ed3\u6784\u4f53\uff08struct\uff09\u8f7b\u677e\u4e14\u51c6\u786e\u5730\u6620\u5c04\u5230<code>serde</code>\u7684\u5185\u90e8\u6570\u636e\u6a21\u578b\uff0c\u800c\u5c06<code>serde</code>\u7684\u5185\u90e8\u6570\u636e\u6a21\u578b\u4e0e\u5b9e\u9645\u7684\u6587\u4ef6\u683c\u5f0f\u8fdb\u884c\u8f6c\u6362\u7684\u8fc7\u7a0b\uff0c\u4e0d\u662f<code>serde</code>\u5e93\u672c\u8eab\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8e<code>serde-json</code>\u8fd9\u79cd\u5e93\u5b8c\u6210\u7684\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_1","title":"\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u53c2\u8003Using derive \u00b7 Serde\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u60c5\u51b5\uff08\u5982\u53cd\u5e8f\u5217\u5316\u4e2aJSON\u6587\u4ef6\uff09\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7684\u5b9a\u4e00\u4e2a\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6dfb\u52a0\u4e2a\u5b8f\u5c31\u591f\u4e86\u3002\u4ee5JSON\u4e3a\u4f8b\uff1a</p> <p>\u5728\u89e3\u6790 JSON \u6587\u672c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u6709\u4e24\u79cd\u9700\u6c42\uff0c\u4ee5\u53ca\u76f8\u53cd\u7684\u5e8f\u5217\u5316\u7684\u9700\u6c42\u3002</p> <ol> <li>\u89e3\u6790\u6210\u4e00\u4e2a strongly typed Rust data structure\u3002\u6bd4\u5982\u4e00\u4e9b API \u5df2\u7ecf\u89c4\u5b9a\u597d\u4e86\u8fd4\u56de\u7684\u6570\u636e\u683c\u5f0f\u3002</li> <li>\u89e3\u6790\u6210\u4e00\u4e2a untyped or loosely typed representation\u3002\u4e00\u4e9b\u66f4\u666e\u901a\u7684\u60c5\u51b5\u3002</li> </ol> <p>Demo For Strong Type\uff1a \u6211\u4eec\u4e00\u822c\u4f7f\u7528 <code>#[derive(Serialize, Deserialize)]</code> \u6765\u4fee\u9970\u8981\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u578b\u3002\u7136\u540e\u5728 <code>serde_json::from_str</code> \u7684\u65f6\u5019\u6307\u5b9a\u7c7b\u578b\u3002</p> <pre><code>use serde::{Deserialize, Serialize};\nuse serde_json::Result;\n\n#[derive(Serialize, Deserialize)]\nstruct Person {\n    name: String,\n    age: u8,\n    phones: Vec&lt;String&gt;,\n}\n\nfn typed_example() -&gt; Result&lt;()&gt; {\n    // Some JSON input data as a &amp;str. Maybe this comes from the user.\n    let data = r#\"\n        {\n            \"name\": \"John Doe\",\n            \"age\": 43,\n            \"phones\": [\n                \"+44 1234567\",\n                \"+44 2345678\"\n            ]\n        }\"#;\n\n    // Parse the string of data into a Person object. This is exactly the\n    // same function as the one that produced serde_json::Value above, but\n    // now we are asking it for a Person as output.\n    let p: Person = serde_json::from_str(data)?;\n\n    // Do things just like with any other Rust data structure.\n    println!(\"Please call {} at the number {}\", p.name, p.phones[0]);\n\n    Ok(())\n}\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u518d\u5c06 Person \u5e8f\u5217\u5316\u6210 json \u6587\u672c\uff0c\u53ef\u4ee5\u8c03\u7528 <code>serde_json::to_string</code></p> <pre><code>    // Serialize it to a JSON string.\n    let j = serde_json::to_string(&amp;p)?;\n\n    // Print, write to a file, or send to an HTTP server.\n    println!(\"{}\", j);\n</code></pre> <p>Demo For Loose Type: <code>serde_json::Value</code> \u662f\u8fd9\u79cd\u677e\u6563\u7c7b\u578b\u7684\u4e00\u822c\u8868\u793a\u3002\u5728 <code>serde_json::from_str</code> \u7684\u65f6\u5019\u6307\u5b9a\u7c7b\u578b\u4e3a Value \u5373\u53ef\u3002</p> <pre><code>use serde_json::{Result, Value};\n\nfn untyped_example() -&gt; Result&lt;()&gt; {\n    // Some JSON input data as a &amp;str. Maybe this comes from the user.\n    let data = r#\"\n        {\n            \"name\": \"John Doe\",\n            \"age\": 43,\n            \"phones\": [\n                \"+44 1234567\",\n                \"+44 2345678\"\n            ]\n        }\"#;\n\n    // Parse the string of data into serde_json::Value.\n    let v: Value = serde_json::from_str(data)?;\n\n    // Access parts of the data by indexing with square brackets.\n    println!(\"Please call {} at the number {}\", v[\"name\"], v[\"phones\"][0]);\n\n    Ok(())\n}\n</code></pre> <p>\u4e0d\u96be\u60f3\u5230\uff0c\u5e8f\u5217\u5316\u5c31\u662f\u5148\u6784\u9020\u677e\u6563\u7c7b\u578b\u7684 <code>Value</code> \u7c7b\u578b\u6570\u636e\uff0c\u518d <code>to_string</code>\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>json!</code> \u5b8f\u6765\u6784\u9020 <code>Value</code> \u7c7b\u578b\u6570\u636e\u3002</p> <pre><code>use serde_json::json;\n\nfn main() {\n    // The type of `john` is `serde_json::Value`\n    let john = json!({\n        \"name\": \"John Doe\",\n        \"age\": 43,\n        \"phones\": [\n            \"+44 1234567\",\n            \"+44 2345678\"\n        ]\n    });\n\n    println!(\"first phone number: {}\", john[\"phones\"][0]);\n\n    // Convert to a string of JSON and print it out\n    println!(\"{}\", john.to_string());\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_2","title":"\u5de5\u4f5c\u539f\u7406","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_3","title":"\u5e8f\u5217\u5316","text":"<p>\u6839\u636e\u5e93\u7684\u8bbe\u8ba1\uff0c\u5bf9\u4e00\u4e2a\u5bf9\u8c61\uff08<code>value</code>\uff09\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u57fa\u672c\u65b9\u5f0f\u4e3a\uff1a</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 \u5e8f\u5217\u5316\u5668\uff0c\u4e00\u822c\u4f1a\u4f20\u5165\u4e00\u4e2a`io::Write`\u7528\u6765\u5199\u5e8f\u5217\u5316\u7684\u7ed3\u679c\nlet mut ser = Serializer::new(writer);\n// \u5c06 value \u5e8f\u5217\u5316\u7684\u7ed3\u679c\u4fdd\u5b58\u5230 ser \u4e2d\uff0c\u4e00\u822c\u5c31\u662f\u5199\u5230\u76f8\u5e94\u7684writer\u4e2d\nvalue.serialize(&amp;mut ser)?;\n</code></pre> <p><code>serialize</code>\u662f<code>trait ser::Serialize</code>\u4e2d\u5b9a\u4e49\u7684\u552f\u4e00\u7684\u65b9\u6cd5\uff0c\u4ed6\u4f1a\u6839\u636e\u7528\u6237\u4f20\u5165\u7684\u5e8f\u5217\u5316\u5668\uff0c\u5bf9\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u64cd\u4f5c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u8c61\u7684Serialize\u65b9\u6cd5\u90fd\u662f\u4f7f\u7528<code>#derive(Serialize)</code>\u81ea\u52a8\u751f\u6210\u7684\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4f20\u5165\u7684\u5e8f\u5217\u5316\u5668\u5fc5\u987b\u8981\u6709\u826f\u597d\u7684\u62bd\u8c61\uff0c\u624d\u80fd\u5728\u6b64\u57fa\u7840\u4e0a\u4e3a\u6240\u6709\u7684\u7ed3\u6784\u81ea\u52a8\u751f\u6210<code>serialize</code>\u65b9\u6cd5\u3002</p> <pre><code>pub trait Serialize {\n    /// Serializes this value into this serializer.\n    fn serialize&lt;S&gt;(&amp;self, serializer: &amp;mut S) -&gt; Result&lt;(), S::Error&gt;\n        where S: Serializer;\n}\npub trait Serializer: Sized {\n    ...\n    fn serialize_bool(self, v: bool) -&gt; Result&lt;Self::Ok, Self::Error&gt;;\n    ...\n}\n</code></pre> <p>\u5e8f\u5217\u5316\u5668\u8981\u6ee1\u8db3<code>pub trait Serializer</code>\uff0c\u5b83\u5305\u542b\u4e86\u5bf9Rust Type System\u4e2d29\u79cd\u5143\u7d20\u7684\u5904\u7406\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c<code>serialize_bool</code>\uff0c\u4ee5JSON\u4e3a\u4f8b\uff0c\u4e0d\u96be\u731c\u6d4b\u5e8f\u5217\u5316\u5668\u5728\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u65f6\uff0c\u4f1a\u5c06<code>v</code>\u53d8\u6210<code>true</code>\u6216<code>false</code>\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u4e0d\u96be\u731c\u6d4b\u2014\u2014\u81ea\u52a8\u751f\u6210\u7684<code>serialize</code>\u65b9\u6cd5\uff0c\u5176\u5b9e\u89c4\u5b9a\u4e86\u904d\u5386\u5bf9\u8c61\u7684\u987a\u5e8f\uff0c\u6839\u636e\u904d\u5386\u5bf9\u8c61\u7684\u7c7b\u578b\u9012\u5f52\u7684\u8c03\u7528\u6bcf\u4e2a\u7c7b\u578b\u76f8\u5e94\u7684\u65b9\u6cd5\uff1f\u7531\u4e8e\u5b8f\u7684\u4ee3\u7801\u592a\u96be\u8bfb\u61c2\u4e86\uff0c\u4e0d\u59a8\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u770b\u5b8f\u7684\u5c55\u5f00\u7ed3\u679c\uff08\u4f7f\u7528<code>cargo-expand</code>\uff09\u3002\u7ed3\u8bba\u662f\u601d\u8def\u5dee\u4e0d\u591a\u3002</p> <p>\u6574\u4e2a\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u72b6\u6001\u673a\u7684\u601d\u8def\uff0c\u72b6\u6001\u673a\u7684\u4ee3\u7801\u4e00\u822c\u7531<code>#derive(Serialize)</code>\u81ea\u52a8\u751f\u6210\uff0c\u72b6\u6001-&gt;\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u5316\u89c4\u5219\u4e5f\u662f\u3002\u800c\u6bcf\u4e2a\u72b6\u6001\u8f6c\u5316\u8fc7\u7a0b\u4e2d\uff0c\u9020\u6210\u7684\u526f\u4f5c\u7528\uff0c\u5219\u662f\u7531\u7528\u6237\u7684\u5e8f\u5217\u5316\u5668\u51b3\u5b9a\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_4","title":"\u53cd\u5e8f\u5217\u5316","text":"<p>\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4f3c\u4e4e\u6ca1\u6709\u90a3\u4e48\u76f4\u767d\u3002\u6bd5\u7adf\u5e8f\u5217\u5316\u9762\u5bf9\u7684\u662fRust\u7684\u89c4\u6574\u6570\u636e\u7ed3\u6784\uff0c\u53cd\u5e8f\u5217\u5316\u9762\u5bf9\u7684\u5219\u662f\u5b57\u8282\u4e32\u3002\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4ece\u57fa\u672c\u7528\u6cd5\u5165\u624b\uff1a</p> <pre><code>let mut de = Deserializer::new(read);\nlet value = de::Deserialize::deserialize(&amp;mut de)?;\nde.end();\n</code></pre> <p>\u4e4d\u4e00\u770b\uff0c\u61f5\u4e86\u3002\u4e3a\u4ec0\u4e48\u548c\u5e8f\u5217\u5316\u4e0d\u4e00\u6837\uff1f\u600e\u4e48\u5149\u6709\u53cd\u5e8f\u5217\u5316\u5668\u6ca1\u6709\u6570\u636e\uff1f\u5176\u5b9e\u6570\u636e\u4e00\u822c\u901a\u8fc7<code>io::Read</code>\u8bfb\u5165\u3002\u63a5\u7740\u8c03\u7528<code>deserialize</code>\u65b9\u6cd5\u53cd\u5e8f\u5217\u5316\u6210Rust\u7684\u6570\u636e\u7ed3\u6784\u3002\u7c7b\u4f3c\u7684\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u822c\u4e5f\u662f\u901a\u8fc7<code>#derive(Deserialize)</code>\u81ea\u52a8\u751f\u6210\u7684\u3002</p> <pre><code>pub trait Deserialize&lt;'de&gt;: Sized {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt; where D: Deserializer&lt;'de&gt;;\n    }\n\npub trait Deserializer&lt;'de&gt;: Sized {\n    fn deserialize_any&lt;V&gt;(self, visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n    where\n        V: Visitor&lt;'de&gt;;\n\n    /// Hint that the `Deserialize` type is expecting a `bool` value.\n    fn deserialize_bool&lt;V&gt;(self, visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n    where\n        V: Visitor&lt;'de&gt;;\n    ...\n}\n</code></pre> <p>\u53cd\u5e8f\u5217\u5316\u5668\u8981\u6ee1\u8db3<code>pub trait Deserializer</code>\uff0c\u5b83\u4e5f\u89c4\u5b9a\u4e86\u5bf9Rust Type System\u4e2d29\u79cd\u5143\u7d20\u7684\u5904\u7406\u65b9\u5f0f\u3002 \u6bcf\u4e00\u4e2a\u65b9\u6cd5\u90fd\u8981\u4f20\u5165\u4e00\u4e2a<code>Visitor</code>\uff0c\u8fd4\u56de\u4e00\u4e2a<code>Visitor::Value</code>\uff0cVisitor\u7684\u4f5c\u7528\u5c31\u662f\u7ed9\u5b9a\u6570\u636e\uff0c\u8fd4\u56deRust\u7c7b\u578b\u3002\u4e0d\u96be\u731c\u6d4b\uff0c\u5bf9\u4e8eJSON\u6765\u8bf4\uff0c\u5f53\u9047\u5230<code>\"true\"</code>\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u7684\u5927\u6982\u5c31\u662f<code>Visitor::Value::Bool(True)</code>\u3002\u5982\u679c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684JSON\u5c31\u5305\u542b\u4e00\u4e2a<code>bool</code>\uff0c\u90a3\u5c31\u8c03\u7528<code>deserialize_bool</code>\u3002</p> <p>\u7c7b\u4f3c\u7684\uff0c\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e5f\u662f\u4e00\u4e2a\u72b6\u6001\u673a\u7684\u601d\u8def\u3002\u72b6\u6001\u673a\u7684\u72b6\u6001\u8f6c\u79fb\u7531<code>#derive(Deserialize)</code>\u81ea\u52a8\u751f\u6210\u3002\u6211\u8fd8\u6ca1\u6709\u7279\u522b\u641e\u660e\u767d\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_5","title":"\u7f16\u5199\u81ea\u5b9a\u4e49\u89c4\u5219","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#nom","title":"NOM","text":"<p>nom\u662f\u4e00\u4e2a\u89e3\u6790\u5668\u7ec4\u5408\u5668\u5e93\uff0c\u4e13\u6ce8\u4e8e\u5b89\u5168\u89e3\u6790\u3001\u6d41\u6a21\u5f0f\u548c\u5c3d\u53ef\u80fd\u591a\u7684\u96f6\u590d\u5236\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#pest","title":"PEST","text":"<p>pest \u662f\u4e00\u4e2a\u652f\u6301PEG \u6587\u6cd5\u7684\u901a\u7528 parser\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_6","title":"\u53c2\u8003\u94fe\u63a5","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/Serde/#_7","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>https://github.com/serde-rs/json/tree/v0.6.0/json/src</li> <li>https://serde.rs/</li> <li>https://www.joshmcguigan.com/blog/understanding-serde/</li> <li>https://aptend.github.io/2020/01/08/serde-what-are-you-doing-de-part2/</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32","text":"<p>Rust\u7684\u539f\u751f<code>String</code>\u7c7b\u578b\uff0c\u5e76\u4e0d\u7b49\u4ef7\u4e8e<code>Vec&lt;u8&gt;</code>\uff0c\u800c\u5fc5\u987b\u662f\u5408\u6cd5\u7684UTF-8\u4e32\u3002\u5982\u679c\u4e0d\u548c\u5916\u90e8\u4ea4\u4e92\uff0c\u8fd9\u51e0\u4e4e\u4e0d\u4f1a\u5e26\u6765\u4ec0\u4e48\u95ee\u9898\u3002\u4f46\u662f\u5982\u4f55\u8981\u548cC\u8bed\u8a00\u4ea4\u4e92\u3001\u548c\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\uff0c\u5c31\u9ebb\u70e6\u4e86\u3002\u6240\u4ee5\u6709\u5f88\u591ameme\u8c03\u4f83\u8fd9\u4e00\u70b9\u3002\u7c7b\u578b\u4f5c\u4e3a\u7ea6\u675f\u6570\u636e\u7684\u89c4\u8303\uff0c\u6b63\u662f\u56e0\u4e3a\u6709\u8fd9\u4e48\u591a\u4e0d\u7edf\u4e00\u7684\u89c4\u8303\u624d\u6709\u8fd9\u4e48\u591a\u4e0d\u7edf\u4e00\u7684\u7c7b\u578b\u3002\u7eb5\u7136\u5f88\u591a\u65f6\u5019\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u89c4\u8303\u53ea\u6709\u7ec6\u5fae\u7684\u5dee\u8ddd\uff0c\u4f46\u662f\u4e3a\u4e86\u7a0b\u5e8f\u7684\u5b89\u5168\uff0c\u8003\u8651\u5dee\u8ddd\u662f\u5fc5\u8981\u7684\u3002</p> <p></p> <p>[!Note]  UTF-8\u4e32\u4e2d\uff0c\u4e00\u4e2a\u5b57\u7b26\u5360\u7684\u5b57\u8282\u6570\u662f\u4e0d\u56fa\u5b9a\u7684\u3002\u6240\u4ee5\u5bf9<code>String</code>\u8fdb\u884c\u7d22\u5f15\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662fO(n)\u3002</p>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E5%AD%97%E7%AC%A6%E4%B8%B2/#string","title":"String","text":"<p>\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u62e5\u6709\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4e5f\u90fd\u4f1a\u63d0\u4f9b\u8bf8\u5982\u67e5\u627e\u3001\u5927\u5c0f\u5199\u8f6c\u6362\u7b49\u529f\u80fd\u3002Rust\u7684\u6807\u51c6\u5e93\u6587\u6863\u505a\u7684\u5f88\u597d\uff0c\u6b64\u5904\u4e0d\u505a\u590d\u5236\u7c98\u8d34\uff0c\u53ef\u4ee5\u53c2\u8003<code>std::string::String</code>\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u4e8b<code>&amp;str</code>\u548c<code>String</code>\u7684\u533a\u522b\u3002</p> <ul> <li><code>String</code> \u662f\u4e00\u4e2a\u53ef\u589e\u957f\u3001\u53ef\u53d8\u3001\u62e5\u6709\u6240\u6709\u6743\u7684 UTF-8 \u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u5b83\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6269\u5c55\u6216\u7f29\u51cf\u3002</li> <li><code>&amp;str</code> \u901a\u5e38\u79f0\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\uff08string slice\uff09\uff0c\u662f\u4e00\u4e2a\u6307\u5411\u6709\u6548 UTF-8 \u5e8f\u5217\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\u3002\u5b83\u901a\u5e38\u6307\u5411\u5b57\u7b26\u4e32\u6570\u636e\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u6570\u636e\u672c\u8eab\u53ef\u4ee5\u5b58\u50a8\u5728\u4efb\u4f55\u5730\u65b9\uff0c\u5982\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3001\u5e38\u91cf\u6570\u636e\u533a\u6216 <code>String</code> \u4e2d\u3002<code>&amp;str</code> \u672c\u8eab\u5e76\u4e0d\u62e5\u6709\u5b83\u6307\u5411\u7684\u6570\u636e\u3002</li> <li>\u6240\u4ee5\uff0c\u4ece <code>&amp;str</code> \u5230 <code>String</code> \u7684\u8f6c\u6362\u9700\u8981\u8fdb\u884c\u5185\u5b58\u5206\u914d\uff0c\u901a\u5e38\u901a\u8fc7 <code>to_string()</code> \u6216 <code>String::from()</code> \u5b9e\u73b0\uff0c\u800c\u5c06<code>String</code>\u8f6c\u6362\u6210<code>&amp;str</code>\u5219\u57fa\u672c\u6ca1\u6709\u5f00\u9500\u3002</li> </ul> <p>\u7c7b\u4f3c\u4e8ePython\u7684format string\uff0cRust\u6709<code>format!</code>\u5b8f\u53ef\u4ee5\u5b8c\u6210\u7c7b\u4f3c\u7684\u5de5\u4f5c\u3002\u5360\u4f4d\u7b26\u4e5f\u662f<code>{}</code></p> <pre><code>let name = \"Alice\";\nlet age = 30;\nlet sentence = format!(\"My name is {} and I am {} years old.\", name, age);\nprintln!(\"{}\", sentence);\n</code></pre>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E5%AD%97%E7%AC%A6%E4%B8%B2/#regex","title":"Regex","text":"<p>Rust\u5e76\u6ca1\u6709\u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u653e\u8fdb\u6807\u51c6\u5e93\uff0c\u800c\u662f\u7531\u7b2c\u4e09\u65b9\u5e93<code>regex</code>\u5b9e\u73b0\u3002</p> <pre><code>use regex::Regex;\n\nfn main() {\n    let re = Regex::new(r\"(\\w+)-(\\d+)\").unwrap();\n    let text = \"Example-1234\";\n\n    match re.captures(text) {\n        Some(caps) =&gt; {\n            println!(\"Matched: {} {}\", &amp;caps[1], &amp;caps[2]);\n        }\n        None =&gt; println!(\"No match found\"),\n    }\n}\n</code></pre>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E5%AD%97%E7%AC%A6%E4%B8%B2/#serde","title":"Serde","text":"<p>Serde \u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u201c\u6807\u51c6\u6846\u67b6\u201d\u3002</p>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E6%96%87%E4%BB%B6/","title":"\u6587\u4ef6\u548cIO","text":"<p>Rust \u901a\u8fc7\u5728<code>std::io</code>\u6a21\u5757\u4e2d\u7684\u51e0\u4e2a\u6838\u5fc3\u7279\u6027\uff08trait\uff09\u6765\u5b9a\u4e49 I/O \u529f\u80fd\uff0c\u4f7f\u5f97 I/O \u64cd\u4f5c\u53ef\u4ee5\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u6d41\u4e0a\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u6267\u884c\uff1a</p> <ul> <li><code>Read</code> \u7279\u6027\uff1a\u7528\u4e8e\u5b9a\u4e49\u4ece\u6570\u636e\u6e90\u8bfb\u53d6\u6570\u636e\u7684\u529f\u80fd\u3002\u5b9e\u73b0\u4e86 <code>Read</code> \u7684\u7c7b\u578b\u53ef\u4ee5\u4ece\u5e95\u5c42\u6570\u636e\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7f51\u7edc\u3001\u5185\u5b58\u7f13\u51b2\u533a\u7b49\uff09\u8bfb\u53d6\u6570\u636e\u3002</li> <li><code>Write</code> \u7279\u6027\uff1a\u7528\u4e8e\u5b9a\u4e49\u5411\u6570\u636e\u63a5\u6536\u5668\u5199\u5165\u6570\u636e\u7684\u529f\u80fd\u3002\u5b9e\u73b0\u4e86 <code>Write</code> \u7684\u7c7b\u578b\u53ef\u4ee5\u5411\u5404\u79cd\u8f93\u51fa\u6d41\uff08\u5982\u6587\u4ef6\u3001\u7f51\u7edc\u3001\u5185\u5b58\u7f13\u51b2\u533a\u7b49\uff09\u5199\u5165\u6570\u636e\u3002</li> <li><code>Seek</code> \u7279\u6027\uff1a\u7528\u4e8e\u5728\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u6570\u636e\u6d41\u4e2d\u79fb\u52a8\u8bfb\u5199\u4f4d\u7f6e\u3002</li> <li><code>BufRead</code> \u7279\u6027\uff1a\u57fa\u4e8e <code>Read</code>\uff0c\u4e3a\u7f13\u51b2\u7684\u8bfb\u64cd\u4f5c\u63d0\u4f9b\u63a5\u53e3\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E6%96%87%E4%BB%B6/#_1","title":"\u6587\u4ef6\u8bfb\u5199","text":"<p>\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u4e00\u4e2a\u5178\u578b\u7684Rust\u8bfb\u5199\u6587\u4ef6\u7a0b\u5e8f\uff1a</p> <ol> <li>\u901a\u8fc7<code>create</code>\u6216<code>open</code>\u6253\u5f00\u6587\u4ef6\uff0c\u5229\u7528\u6587\u4ef6\u7684Drop\u65b9\u6cd5\u81ea\u52a8\u91ca\u653e\u3002</li> <li>\u901a\u8fc7<code>BufWriter</code>\u548c<code>BufReader</code>\u5305\u88c5\uff0c\u7ed9\u8bfb\u5199\u6dfb\u52a0\u7f13\u51b2\u3002</li> <li>\u5f15\u5165<code>Write</code>\u548c<code>Read</code>\u7279\u6027\uff0c\u8c03\u7528\u76f8\u5173\u65b9\u6cd5\u5b8c\u6210\u8bfb\u5199\u3002</li> <li>\u4f7f\u7528<code>?</code>\u6765\u5904\u7406\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\u3002</li> </ol> <pre><code>use std::fs::File;\nuse std::io::{BufReader, BufWriter, Write, Read};\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    // Buffered writing\n    let file = File::create(\"output.txt\")?;\n    let mut writer = BufWriter::new(file);\n    writer.write_all(b\"Hello, buffered world!\")?;\n\n    // Buffered reading\n    let file = File::open(\"output.txt\")?;\n    let mut reader = BufReader::new(file);\n    let mut contents = String::new();\n    reader.read_to_string(&amp;mut contents)?;\n    println!(\"File contents: {}\", contents);\n\n    Ok(())\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E6%97%A5%E5%BF%97/","title":"\u65e5\u5fd7","text":"<p><code>log</code> \u662f Rust \u65e5\u5fd7\u63a5\u53e3\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u6240\u6709\u7684\u65e5\u5fd7\u6d88\u8d39\u8005\u5e93\u90fd\u652f\u6301\u5b83\u3002\u5728\u5b83\u7684\u4e3b\u9875\u4e5f\u63a8\u8350\u4e86\u5176\u4ed6\u7684\u65e5\u5fd7\u6d88\u8d39\u8005\u5e93\uff0c\u5982<code>env_logger</code> \u3001 <code>fern</code>\u548c <code>flexi_logger</code>\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6dfb\u52a0\u6bcf\u65e5\u53d8\u5316log\u6587\u4ef6\u7684\u914d\u7f6e\u9009\u9879\uff1a</p> <pre><code>fn init_logger() {\n    use flexi_logger::{opt_format, FileSpec, Logger};\n    Logger::with(LevelFilter::Info)\n        .log_to_file(\n            FileSpec::default()\n                .directory(\"log\")\n                .basename(\"price\")\n                .suffix(\"log\"),\n        )\n        .rotate(\n            flexi_logger::Criterion::Age(flexi_logger::Age::Day),\n            flexi_logger::Naming::TimestampsDirect,\n            flexi_logger::Cleanup::KeepLogFiles(7),\n        )\n        .format_for_files(opt_format)\n        .start()\n        .expect(\"Logger initialization failed\");\n}\n</code></pre>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E6%97%A5%E5%BF%97/#rust-tracing","title":"Rust - tracing","text":"<p><code>tracing</code>\u662ftokio\u56e2\u961f\u7ef4\u62a4\u7684\uff0c\u66f4\u9002\u5408Rust\u5f02\u6b65\u7a0b\u5e8f\u4f7f\u7528\u7684\u65e5\u5fd7\u63a5\u53e3\u5e93\u3002\u4e0e\u4e4b\u76f8\u914d\u5408\u7684\u662f<code>tracing-subscriber</code>\u3002</p> <p>\u7406\u89e3Tracing\u5e93\uff0c\u8981\u7406\u89e3\u4e24\u4e2a\u6982\u5ff5\uff1aspans\uff08\u8303\u56f4\uff09, events\uff08\u4e8b\u4ef6\uff09\u3002</p> <p>\u4e00\u4e2a <code>span</code> \u8868\u793a\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u533a\u95f4\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u3001\u4e00\u4e2a\u8bf7\u6c42\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u6216\u8005\u662f\u4efb\u4f55\u9700\u8981\u88ab\u8ffd\u8e2a\u7684\u65f6\u95f4\u6bb5\u3002<code>span</code> \u53ef\u4ee5\u5d4c\u5957\uff0c\u5141\u8bb8\u4f60\u6784\u9020\u4e00\u4e2a\u8bf7\u6c42\u6216\u4efb\u52a1\u7684\u8be6\u7ec6\u6267\u884c\u8def\u5f84\u3002\u5728\u7f16\u7a0b\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528<code>instrument</code>\u5b8f\u6765\u4fee\u9970\u51fd\u6570\uff0c\u521b\u9020<code>span</code>\u3002</p> <p><code>event</code> \u662f <code>tracing</code> \u4e2d\u7684\u4e00\u4e2a\u70b9\u4e8b\u4ef6\uff0c\u76f8\u5f53\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55\u3002\u5b83\u4eec\u7528\u4e8e\u8868\u793a\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u901a\u5e38\u7528\u4e8e\u8bb0\u5f55\u9519\u8bef\u3001\u7528\u6237\u64cd\u4f5c\u3001\u72b6\u6001\u53d8\u66f4\u7b49\u3002<code>event</code> \u901a\u5e38\u5728\u67d0\u4e2a <code>span</code> \u7684\u4e0a\u4e0b\u6587\u4e2d\u8bb0\u5f55\uff0c\u4ece\u800c\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u4ec0\u4e48\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u3002</p> <p>\u5bf9\u5e94\u4e0a\u6587\u63d0\u51fa\u7684\u95ee\u9898\u3002\u5bf9\u4e8ea1, a2 \u4e8b\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5728a1\u5f00\u59cb\u4e4b\u524d\u521b\u5efaspan\uff0ca2\u7ed3\u675f\u4e4b\u540e\u7ec8\u6b62span\u3002</p> <p><code>tracing-log</code>\u5e93\u5141\u8bb8\u6355\u83b7\u4ece <code>log</code> \u53d1\u51fa\u7684\u65e5\u5fd7\u6d88\u606f\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a <code>tracing</code> \u4e8b\u4ef6\u5904\u7406\u3002\u8fd9\u6837\uff0c\u4f60\u53ef\u4ee5\u5728\u4f7f\u7528 <code>tracing</code> \u7684\u540c\u65f6\uff0c\u4fdd\u7559\u90a3\u4e9b\u8fd8\u5728\u4f7f\u7528 <code>log</code> \u63a5\u53e3\u7684\u5e93\u6216\u5e94\u7528\u90e8\u5206\u7684\u65e5\u5fd7\u8bb0\u5f55\u3002<code>tracing_subscriber</code>\u4f7f\u7528\u4e86\u4ed6\u5e76\u9ed8\u8ba4\u652f\u6301<code>log</code>\u3002</p> <pre><code>fn init_logger() -&gt; tracing_appender::non_blocking::WorkerGuard {\n    use tracing_subscriber::{filter, fmt, layer::SubscriberExt, util::SubscriberInitExt, Layer};\n    let file_appender = tracing_appender::rolling::daily(\"log\", \"price.log\");\n    let (non_blocking, guard) = tracing_appender::non_blocking(file_appender);\n    let file_layer = fmt::layer()\n        .json()\n        .with_writer(non_blocking)\n        .with_file(true)\n        .with_line_number(true)\n        .with_ansi(false)\n        .with_span_events(fmt::format::FmtSpan::NEW | fmt::format::FmtSpan::CLOSE)\n        .with_filter(filter::LevelFilter::INFO);\n\n    let console_layer = fmt::layer()\n        .with_file(false)\n        .with_span_events(fmt::format::FmtSpan::NEW | fmt::format::FmtSpan::CLOSE)\n        .with_filter(filter::LevelFilter::INFO);\n\n    // \u521d\u59cb\u5316 Subscriber\n    tracing_subscriber::registry()\n        .with(file_layer)\n        .with(console_layer)\n        .init();\n\n    tracing::info!(\"Logger initialized\");\n    guard\n}\n</code></pre>","tags":[]},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E6%97%B6%E9%97%B4/","title":"\u65f6\u95f4","text":"<p>Rust\u6807\u51c6\u5e93\u53ea\u5bf9\u65f6\u95f4\u8fdb\u884c\u4e86\u975e\u5e38\u6709\u9650\u7684\u652f\u6301\u3002\u6240\u4ee5\u60f3\u8981\u5904\u7406\u65f6\u95f4\u4e00\u822c\u90fd\u501f\u52a9\u7b2c\u4e09\u65b9\u5e93time-rs \u548c chrono\u3002</p> <p>Rust \u6807\u51c6\u5e93\u4e3b\u8981\u5c06\u65f6\u95f4\u62bd\u8c61\u6210\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f\u00a0<code>Instant</code>\uff08\u4ee3\u8868\u65f6\u523b\uff09\u548c\u00a0<code>Duration</code>\uff08\u4ee3\u8868\u65f6\u95f4\u8de8\u5ea6\uff09\u3002\u81ea\u7136\u7684\uff0c\u6211\u4eec\u6709</p> <ul> <li><code>Instant - Instant = Duration</code></li> <li><code>Instant +/- Duration = Instant</code></li> </ul> <p><code>Instant::now()</code>\u53ef\u4ee5\u83b7\u5f97\u7cfb\u7edf\u65f6\u95f4\u3002\u4f46\u662f\u7531\u4e8eRust std\u60f3\u8981\u66f4\u597d\u7684cross-platform\u5e76\u4e14\u53c8\u4e0d\u613f\u610f\u8fc7\u5ea6\u5c01\u88c5\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4ece<code>Instant</code>\u76f4\u63a5\u83b7\u53d6UTC timestamp\uff0c\u5982\u679c\u4e0d\u60f3\u501f\u52a9\u7b2c\u4e09\u65b9\u5e93\u7684\u5e2e\u52a9\uff0c\u53ef\u4ee5\u8fd9\u6837\u83b7\u5f97timestamp</p> <pre><code>#![allow(unused)]\nuse std::time::SystemTime;\n\nfn main() {\n    match SystemTime::now().duration_since(SystemTime::UNIX_EPOCH) {\n        Ok(n) =&gt; println!(\"1970-01-01 00:00:00 UTC was {} seconds ago!\", n.as_secs()),\n        Err(_) =&gt; panic!(\"SystemTime before UNIX EPOCH!\"),\n    }\n}\n</code></pre> <p>\u4e0d\u8fc7\u60f3\u8981\u8fdb\u884c\u590d\u6742\u7684\u65f6\u95f4\u5904\u7406\uff0c\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u3002\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecdtime-rs\u3002\u7ed3\u6784\u5316\u65f6\u95f4\u7684\u6570\u636e\u7ed3\u6784\u662f <code>time::OffsetDateTime</code>\u3002</p> <ul> <li>\u83b7\u5f97 <code>OffsetDateTime</code>\uff0c\u65f6\u533a\u4e3aGMT/UTC: <code>OffsetDateTime::now_utc()</code></li> <li>\u83b7\u5f97 <code>OffsetDateTime</code>\uff0c\u65f6\u533a\u4e3a\u672c\u5730\u65f6\u533a: <code>OffsetDateTime::now_local()</code></li> </ul> <p>\u5e93\u81ea\u7136\u4e5f\u63d0\u4f9b\u4e86\u4e0d\u540c\u7c7b\u578b\u76f8\u4e92\u8f6c\u5316\u7684\u8f85\u52a9\u51fd\u6570\u3002\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u8003\u6587\u6863\u3002</p> From To Function <code>timestamp</code> Local <code>OffsetDateTime</code> - <code>timestamp</code> UTC <code>OffsetDateTime</code> <code>OffsetDateTime::from_unix_timestamp()</code>/<code>OffsetDateTime::from_unix_timestamp_nanos</code> <code>OffsetDateTime</code> <code>timestamp</code> <code>.unix_timestamp()</code>/<code>.unix_timestamp_nanos</code> <code>struct_time</code> string <code>.format()</code> string <code>struct_time</code> <code>OffsetDateTime::parse()</code> <p>\u53e6\u5916\uff0c\u5173\u4e8e\u8fd9\u4e2a<code>OffsetDateTime</code>\u4e0d\u5f97\u4e0d\u63d0\u7684\u4e24\u4e2a\u5c0ftips\uff1a</p> <ol> <li>\u5b83\u662f\u4e00\u4e2a\u4e0d\u900f\u660e\u7684\u7c7b\uff0c\u60f3\u8981\u8bbf\u95ee\u5177\u4f53\u7684\u5e74/\u6708/\u65e5\u7b49\u4fe1\u606f\u9700\u8981\u901a\u8fc7\u65b9\u6cd5\u8bbf\u95ee/\u4fee\u6539\u3002</li> <li>\u5e93\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u4fbf\u7684\u5b8f\u6765\u6784\u9020\u7c7b\u578b\uff0c\u4f8b\u5982\u901a\u8fc7\u8fd9\u4e2a\u5b8f\u6765\u6784\u9020<code>OffsetDateTime</code>\uff1a<code>datetime!(2020-01-02 03:04:05 +06:07:08)</code></li> </ol> <p>\u8fd9\u91cc\u8054\u7cfb\u4e00\u4e0bPython\u7684\u5185\u5bb9\uff0c\u8bbe\u8ba1\u662f\u57fa\u672c\u4e00\u81f4\u7684\uff1a</p> <p><code>time::OffsetDateTime</code> = <code>datetime.datetime</code> <code>time::UtcOffset</code> = <code>datetime.timezone</code> <code>time::Duration</code> = <code>datetime.timedelta</code></p> <p>\u751a\u81f3\u4e24\u4e2a\u5e93\u90fd\u5355\u72ec\u5206\u522b\u5c01\u88c5\u4e86<code>date</code>/<code>time</code>\uff0c\u8fd9\u91cc\u6ca1\u6709\u4ecb\u7ecd\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E7%BD%91%E7%BB%9C/","title":"\u7f51\u7edc","text":"<p>\u5728 Rust \u4e2d\u5904\u7406\u7f51\u7edc\u901a\u4fe1\u6d89\u53ca\u5230\u591a\u4e2a\u6807\u51c6\u5e93\u548c\u7b2c\u4e09\u65b9\u5e93\u7684\u7ec4\u4ef6\u3002\u6807\u51c6\u5e93\u4e2d\u7684 <code>std::net</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u5904\u7406 TCP \u548c UDP \u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u672c\u6784\u5efa\u5757\uff0c\u800c\u7b2c\u4e09\u65b9\u5e93\u5219\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5f02\u6b65\u5904\u7406\u673a\u5236\u548c\u66f4\u4e30\u5bcc\u7684\u7f51\u7edc\u534f\u8bae\u652f\u6301\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E7%BD%91%E7%BB%9C/#demo","title":"Demo","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 Rust \u6807\u51c6\u5e93\u8fdb\u884c TCP \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u57fa\u672c\u793a\u4f8b\uff1a</p> <p>TCP \u670d\u52a1\u5668</p> <pre><code>use std::net::{TcpListener, TcpStream};\nuse std::io::{Read, Write};\n\nfn handle_client(mut stream: TcpStream) -&gt; std::io::Result&lt;()&gt; {\n    println!(\"Incoming connection from: {}\", stream.peer_addr()?);\n    let mut buffer = [0; 512];\n    loop {\n        let bytes_read = stream.read(&amp;mut buffer)?;\n        if bytes_read == 0 { return Ok(()); }  // Connection was closed\n        stream.write(&amp;buffer[..bytes_read])?;\n    }\n}\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let listener = TcpListener::bind(\"127.0.0.1:7878\")?;\n    println!(\"Server listening on port 7878\");\n\n    for stream in listener.incoming() {\n        let stream = stream?;\n        handle_client(stream)?;\n    }\n\n    Ok(())\n}\n</code></pre> <p>TCP \u5ba2\u6237\u7aef</p> <pre><code>use std::net::TcpStream;\nuse std::io::{Read, Write};\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut stream = TcpStream::connect(\"127.0.0.1:7878\")?;\n    println!(\"Connected to the server!\");\n\n    stream.write_all(b\"Hello, server!\")?;\n    let mut buffer = [0; 512];\n    stream.read(&amp;mut buffer)?;\n    println!(\"Received from server: {}\", String::from_utf8_lossy(&amp;buffer));\n\n    Ok(())\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E7%BD%91%E7%BB%9C/#tokio","title":"Tokio","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u7f16\u5199\u7f51\u7edc\u7a0b\u5e8f\u9762\u5bf9\u7684\u74f6\u9888\u5f80\u5f80\u662fIO\u3002\u5728\u7b49\u5f85IO\u7684\u65f6\u5019\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u662f\u6700\u6709\u6548\u7684\u4f18\u5316\u529e\u6cd5\uff0c\u6240\u4ee5\u7f51\u7edc\u7a0b\u5e8f\u5927\u90fd\u662f\u5e76\u53d1\u7a0b\u5e8f\u3002</p> <p>\u8fd9\u662f\u4f7f\u7528 <code>tokio</code> \u7684\u5f02\u6b65 TCP Echo \u670d\u52a1\u5668 Demo\u3002</p> <pre><code>use tokio::net::{TcpListener, TcpStream};\nuse tokio::io::{AsyncReadExt, AsyncWriteExt};\n\nasync fn handle_client(mut stream: TcpStream) -&gt; tokio::io::Result&lt;()&gt; {\n    let mut buffer = [0; 1024];\n    loop {\n        let bytes_read = stream.read(&amp;mut buffer).await?;\n        if bytes_read == 0 { break; }\n        stream.write_all(&amp;buffer[..bytes_read]).await?;\n    }\n    Ok(())\n}\n\n#[tokio::main]\nasync fn main() -&gt; tokio::io::Result&lt;()&gt; {\n    let listener = TcpListener::bind(\"127.0.0.1:7878\").await?;\n    println!(\"Server listening on port 7878\");\n\n    loop {\n        let (stream, _) = listener.accept().await?;\n        tokio::spawn(async move {\n            handle_client(stream).await.unwrap();\n        });\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E5%BA%93/%E7%BD%91%E7%BB%9C/#reqwest","title":"Reqwest","text":"<p>Reqwest \u662f\u4e00\u4e2a Rust \u8bed\u8a00\u7f16\u5199\u7684\u975e\u5e38\u6d41\u884c\u7684 HTTP \u5ba2\u6237\u7aef\u5e93\uff0c\u5b83\u652f\u6301\u5f02\u6b65\u548c\u540c\u6b65\u4e24\u79cd\u8bf7\u6c42\u65b9\u5f0f\u3002Reqwest \u57fa\u4e8e <code>hyper</code> \u8fd9\u4e00 HTTP \u5e93\u6784\u5efa\uff0c\u4fbf\u4e8e\u5904\u7406 HTTP \u5ba2\u6237\u7aef\u64cd\u4f5c\uff0c\u5e76\u4e14\u96c6\u6210\u4e86 <code>tokio</code> \u4f5c\u4e3a\u5f02\u6b65\u8fd0\u884c\u65f6\u3002</p> <p>\u4ed6\u7684\u63a5\u53e3\u8bbe\u8ba1\u548cPython\u7684request\u5e93\u5f88\u50cf\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E6%9E%84%E5%BB%BA/Cargo/","title":"Cargo","text":"<p>Cargo \u662fRust\u7684\u5b98\u65b9\u6784\u5efa\u548c\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u7528\u8fc7\u90fd\u8bf4\u597d\u3002\u6700\u57fa\u672c\u7684\u4f7f\u7528\u5c31\u662f<code>cargo new</code>\u521b\u5efa\u65b0\u5de5\u7a0b\uff0c\u7f16\u5199\u4ee3\u7801\u7136\u540e<code>cargo build</code>\u6216<code>cargo run</code>\u3002\u5177\u4f53\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003cargo book\u3002\u6b64\u5904\u4e0d\u505a\u4ecb\u7ecd\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E6%9E%84%E5%BB%BA/Cargo/#_1","title":"\u6307\u5b9a\u4f9d\u8d56\u9879","text":"<p>Rust\u9879\u76ee\u53ef\u4ee5\u5f15\u7528\u5728 <code>crates.io</code> \u6216 <code>GitHub</code> \u4e0a\u7684\u4f9d\u8d56\u5305\uff0c\u4e5f\u53ef\u4ee5\u5f15\u7528\u5b58\u653e\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4f9d\u8d56\u5305\u3002</p> <p>\u4f9d\u8d56\u7248\u672c\u662f\u5f88\u9ebb\u70e6\u7684\u95ee\u9898\uff0c\u5982\u679c\u7248\u672c\u51b2\u7a81\uff08\u5982\u4f60\u7684\u4ee3\u7801\u4f9d\u8d56A\u548cB\uff0c\u800cA\u548cB\u4f9d\u8d56\u4e24\u4e2a\u4e0d\u540c\u7248\u672c\u7684C\uff09\u53ea\u80fd\u56de\u9000\uff08\u56de\u9000A\u6216B\uff09\uff0c\u6216\u8005\u81ea\u5df1\u53e6fork\u4e00\u4e2a\u517c\u5bb9\u7684\u5e93\u3002</p> <pre><code>1.2.3  :=  &gt;=1.2.3, &lt;2.0.0\n1.2    :=  &gt;=1.2.0, &lt;2.0.0\n1      :=  &gt;=1.0.0, &lt;2.0.0\n0.2.3  :=  &gt;=0.2.3, &lt;0.3.0\n0.2    :=  &gt;=0.2.0, &lt;0.3.0\n0.0.3  :=  &gt;=0.0.3, &lt;0.0.4\n0.0    :=  &gt;=0.0.0, &lt;0.1.0\n0      :=  &gt;=0.0.0, &lt;1.0.0\n~1.2.3  := &gt;=1.2.3, &lt;1.3.0\n~1.2    := &gt;=1.2.0, &lt;1.3.0\n~1      := &gt;=1.0.0, &lt;2.0.0\n*     := &gt;=0.0.0\n1.*   := &gt;=1.0.0, &lt;2.0.0\n1.2.* := &gt;=1.2.0, &lt;1.3.0\n</code></pre> <p>[!NOTE] \u6240\u4ee5\u5728\u7f16\u5199\u5e93\u7684\u65f6\u5019\uff0c\u907f\u514d\u4f7f\u7528\u592a\u5177\u4f53\u7684\u7248\u672c\u4f9d\u8d56\uff0c\u4e0d\u7528\u4e0a\u4f20Cargo.lock</p> <p>\u9664\u4e86\u6307\u5b9a\u7248\u672c\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u672c\u5730\u8def\u5f84\u548cGit\u8def\u5f84\u3002\u53c2\u8003Cargo Book</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/%E6%9E%84%E5%BB%BA/Cargo/#_2","title":"\u4f9d\u8d56\u51b2\u7a81","text":"<p>\u4f9d\u8d56\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5b58\u5728\u67d0\u4e9b\u95ee\u9898\u88ab\u7ef4\u62a4\u8005\u4ece<code>crates.io</code>\u64a4\u56de\uff0c\u88ab\u6807\u8bb0\u6210<code>yanked</code>\u3002\u4f46\u662f\u4f60\u53c8\u4e0d\u5f97\u4e0d\u53bb\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528<code>patch</code>\u7279\u6027\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f8b\u5982\u4f9d\u8d56\u7684<code>parity-secp256k1</code>\u88ab\u64a4\u56de\u4e86\uff0c\u53ef\u4ee5\u5728 Cargo.toml \u6dfb\u52a0\uff1a</p> <pre><code>[patch.crates-io]\nparity-secp256k1 = { git = \"https://github.com/paritytech/rust-secp256k1\", branch = \"master\" }\n</code></pre> <p>[!WARN] \u88ab\u64a4\u56de\u591a\u534a\u662f\u51fa\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u5982\u5b89\u5168\u95ee\u9898\uff0c\u4e0d\u8981\u8d38\u7136\u4f7f\u7528\u8fd9\u4e2a\u529e\u6cd5\u3002\u8fd9\u4e2a\u529e\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u5f3a\u884c\u89e3\u51b3\u4f9d\u8d56\u51b2\u7a81\u95ee\u9898\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/","title":"\u968f\u7b14","text":"<p>\u8fd9\u91cc\u653e\u7740\u4e00\u4e9b\u672a\u5f52\u7c7b\u7684\u6587\u7ae0\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2024/11/30/%E9%9B%B6%E6%8B%B7%E8%B4%9D/","title":"\u96f6\u62f7\u8d1d","text":""},{"location":"%E9%9A%8F%E7%AC%94/2024/11/30/%E9%9B%B6%E6%8B%B7%E8%B4%9D/#_2","title":"\u51cf\u5c11\u5185\u6838\u548c\u7528\u6237\u4e4b\u95f4\u7684\u62f7\u8d1d","text":"<p>\u51fa\u4e8e\u5b89\u5168\u7684\u8003\u8651\uff0c\u5185\u6838\u4e0d\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u7528\u6237\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\uff0c\u7528\u6237\u66f4\u4e0d\u53ef\u80fd\u76f4\u63a5\u4f7f\u7528\u5185\u6838\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u3002\u4ed6\u4eec\u4e4b\u95f4\u7684\u4fe1\u606f\u4ea4\u6362\uff0c\u57fa\u672c\u90fd\u8981\u6d89\u53ca\u62f7\u8d1d\uff0c\u6bd4\u5982 Linux \u4e0a\u7684 <code>copy_to_user</code> \u548c <code>copy_from_user</code>\u3002</p> <p><code>mmap</code> \u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u4e1c\u897f\u3002\u4ec0\u4e48\u662f mmap\uff1fmmap \u662f\u4e00\u79cd\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u5373\u5c06\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5176\u5b83\u5bf9\u8c61\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5b9e\u73b0\u6587\u4ef6\u78c1\u76d8\u5730\u5740\u548c\u8fdb\u7a0b\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u4e00\u6bb5\u865a\u62df\u5730\u5740\u7684\u4e00\u4e00\u5bf9\u6620\u5173\u7cfb\u3002\u5b9e\u73b0\u8fd9\u6837\u7684\u6620\u5c04\u5173\u7cfb\u540e\uff0c\u8fdb\u7a0b\u5c31\u53ef\u4ee5\u4f7f\u7528\u64cd\u4f5c\u5185\u5b58\u7684\u65b9\u5f0f\u64cd\u4f5c\u6587\u4ef6\uff0c\u800c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u5199\u810f\u9875\u9762\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\u78c1\u76d8\u4e0a\uff0c\u5373\u5b8c\u6210\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\u800c\u4e0d\u5fc5\u518d\u8c03\u7528 read,write \u7b49\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u3002\u76f8\u53cd\uff0c\u5185\u6838\u7a7a\u95f4\u5bf9\u8fd9\u6bb5\u533a\u57df\u7684\u4fee\u6539\u4e5f\u76f4\u63a5\u53cd\u6620\u7528\u6237\u7a7a\u95f4\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u6587\u4ef6\u5171\u4eab\u3002</p> <p>\u6240\u4ee5\uff0c\u5f53\u4f60\u6709\u82e5\u5e72\u4e2a\u8fdb\u7a0b\u4ee5\u53ea\u8bfb\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e00\u4e2a\u6587\u4ef6\uff0c\u6216\u8005\u662f\u8bbf\u95ee\u8f83\u5927\u6587\u4ef6\u7684\u5927\u5757\uff0c\u7528 <code>mmap</code> \u90fd\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002<code>mmap</code> \u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u8fdb\u7a0b\u901a\u4fe1\u3002\u4e0d\u8fc7\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u7528 <code>mmap</code> \u6765\u8bbf\u95ee\uff0c\u4f8b\u5982 socket \u5c31\u53ea\u80fd\u7528\u4ed6\u4e13\u6709\u7684\u63a5\u53e3\u8bfb\u5199\uff0c\u8fd8\u6709 pipe \u7c7b\u578b\u7684\u6587\u4ef6\u5c31\u53ea\u80fd\u7528 <code>read</code>/<code>write</code> \u7b49\u3002\u4e5f\u4e0d\u662f\u6240\u6709\u80fd\u7528 <code>mmap</code> \u7684\u6587\u4ef6\u90fd\u9002\u5408\u7528 <code>mmap</code>\uff0c\u4e00\u4e2a\u548c page \u5dee\u4e0d\u591a\u5927\u7684\u6587\u4ef6\uff0c\u6216\u8005\u4f60\u5c31\u60f3\u4ece\u6587\u4ef6\u4e2d\u8bfb\u90a3\u4e48\u51e0\u4e2a\u5b57\u8282\uff0c\u7528 <code>mmap</code> \u9002\u5f97\u5176\u53cd\u3002</p> <p>\u4f7f\u7528 mmap</p> <pre><code>#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    long checksum = 0;\n    struct stat sb;\n\n    int fd = open(\"disk.dd\", O_RDONLY);\n    fstat(fd, &amp;sb);\n    void *file = mmap(0, sb.st_size, PROT_READ, MAP_PRIVATE, fd, 0);\n\n    for (long i = 0; i &lt; (sb.st_size &gt;&gt; 3); i++) {\n        checksum ^= *((long *)file + i);\n    }\n    printf(\"checksum = 0x%lx\\n\", checksum);\n    close(fd);\n}\n\n// checksum = 0xdcce4fdc7fd2151d\n// real    0m5.762s\n// user    0m2.910s\n// sys     0m2.358s\n</code></pre> <p>mmap \u4e3a\u4ec0\u4e48\u4f1a\u6bd4\u5e26 buffer \u7684 read/write \u5feb\u5462\uff0cPage Size \u662f 4K\uff0c\u6bcf\u6b21\u7f3a\u9875\u52a0\u8f7d 4K\uff0c\u548c\u6211\u4e4b\u524d\u624b\u52a8 Buffer \u4e0d\u662f\u5f88\u76f8\u4f3c\u5417\uff1f\u56e0\u4e3a \u5c11\u4e86\u4e00\u6b21 CPU \u7684\u62f7\u8d1d\u3002\u8bd5\u60f3 read \u7684\u8fc7\u7a0b\uff0cDMA \u5c06\u6570\u636e\u4ece\u786c\u76d8\u62f7\u8d1d\u5230 kernel space\uff0cCPU \u518d\u5c06\u6570\u636e\u4ece kernel space \u62f7\u8d1d\u5230 user space\uff1b\u800c mmap \u5c31\u5c11\u4e86\u4e00\u6b21\u4ece kernel space \u62f7\u8d1d\u5230 user space \u7684\u8fc7\u7a0b\u3002</p> <p>\u4e0d\u8fc7\u5728\u4f7f\u7528 mmap \u7684\u65f6\u5019\u9700\u8981\u5c0f\u5fc3\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7684\u8fdb\u7a0b\u622a\u65ad\u4e86\u6587\u4ef6\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u4e00\u4e2a\u975e\u6cd5\u7684\u5730\u5740\uff0c\u4ece\u800c\u8fdb\u7a0b\u88ab\u6740\u6b7b\u3002</p> <p>\u9664\u4e86 <code>mmap</code>\uff0c<code>sendfile</code>/<code>splice</code> \u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u7684\u51cf\u5c11\u4ece kernel space \u5230 user space \u62f7\u8d1d\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728\u540e\u9762\u4ecb\u7ecd\u3002\u4ed6\u4eec\u63d0\u4f9b\u7684\u8fd9\u79cd\u7279\u6027\u53eb\u505a \u96f6\u62f7\u8d1d Zero Copy\uff0c\u77e5\u4e4e\u4e0a\u7684\u8fd9\u7bc7\u6587\u7ae0 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\u3002</p> <p>\u5982\u679c\u8ffd\u6c42\u6781\u81f4\uff0c\u4f60\u53ef\u4ee5\u7ed5\u8fc7\u5185\u6838\u505a I/O \u64cd\u4f5c\uff0c\u4e0d\u8fc7\u4e00\u822c\u60c5\u51b5\u4e0b\u8fd9\u6837\u505a\u4f1a\u727a\u7272\u76f8\u5f53\u7684\u7075\u6d3b\u6027\u3001\u53ef\u79fb\u690d\u6027\uff0c\u800c\u4e14\u975e\u5e38\u56f0\u96be\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2024/11/30/%E9%9B%B6%E6%8B%B7%E8%B4%9D/#_3","title":"\u9488\u5bf9\u7f51\u7edc\u7684\u96f6\u62f7\u8d1d\u6280\u672f","text":"<p>\u4e0b\u9762\u6211\u4eec\u8981\u9762\u5bf9\u7684\u573a\u666f\uff0c\u662f\u6211\u4eec\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u5230\u5185\u5b58\uff0c\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5199\u5230\u7f51\u5361\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u7f51\u7edc\u5e94\u7528\u7684\u64cd\u4f5c\u3002</p> <p>\u90a3\u4e48\uff0c\u6700\u539f\u59cb\u7684\u4f7f\u7528 <code>read/write</code> \u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u81f3\u5c11\u4f1a\u6709 4 \u6b21\u62f7\u8d1d\u3002\u4e2d\u95f4\u4e24\u6b21\u662f\u5185\u5b58\u4e2d\u7684\u62f7\u8d1d\uff0c\u867d\u7136\u9700\u8981\u5185\u6838\u6001\u5230\u7528\u6237\u6001\u7684\u5207\u6362\uff0c\u4f46\u662f\u76f8\u5bf9 I/O \u6765\u8bf4\u8fd8\u662f\u5feb\u7684\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u8981\u4f18\u5316\u4e2d\u95f4 2 \u6b21\u3002</p> <ul> <li>\u786c\u76d8\u62f7\u8d1d\u5230\u5185\u5b58\uff08\u5185\u6838\u6001\uff09\uff0cDMA\uff0c\u6162</li> <li>\u5185\u6838\u6001\u62f7\u8d1d\u5230\u7528\u6237\u6001\uff0cCPU\uff0c\u5feb</li> <li>\u7528\u6237\u6001\u62f7\u8d1d\u5230\u5185\u6838\u6001\uff0cCPU\uff0c\u5feb</li> <li>\u5185\u5b58\uff08\u5185\u6838\u6001\uff09\u62f7\u8d1d\u5230\u7f51\u5361\uff0cDMA\uff0c\u6162</li> </ul> <p>\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e4b\u524d\u4ecb\u7ecd\u7684 <code>mmap</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u5230 3 \u6b21\u3002</p> <p>\u4f7f\u7528 <code>sendfile</code>\uff0c\u53ef\u4ee5\u4f18\u5316\u5230 2 \u6b21\uff0c\u786c\u76d8 -&gt;\u5185\u6838\u6001\u5185\u5b58 -&gt;\u7f51\u5361\u3002\u4f46\u662f\u4f60\u4e5f\u53d1\u73b0\u4e86\uff0c\u6ca1\u6709\u7ecf\u8fc7\u7528\u6237\u6001\u6211\u4eec\u600e\u4e48\u5904\u7406\u6570\u636e\uff0c\u7b54\u6848\u5c31\u662f \u6ca1\u6cd5\u5904\u7406\u6570\u636e\uff0c\u6240\u4ee5\u4ed6\u53ef\u80fd\u53ea\u9002\u5408\u7528\u4e8e\u9759\u6001\u670d\u52a1\u5668\u3002\u90a3\u4e48\u65e2\u7136\u90fd\u65e0\u6cd5\u5904\u7406\u4e86\uff0c\u8fd8\u62f7\u5230\u5185\u5b58\u5e72\u5565\uff1f\u80fd\u4e0d\u80fd\u76f4\u63a5\u4ece\u786c\u76d8 DMA \u5230\u7f51\u5361\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\uff0c\u65b0\u7684 Linux \u5df2\u7ecf\u8ba9 <code>sendfile</code> \u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u4e86\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u4f18\u5316\u5230 1 \u6b21\u4e86\u3002<code>splice</code> \u4e5f\u662f\u7c7b\u4f3c\u7684\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2024/11/30/%E9%9B%B6%E6%8B%B7%E8%B4%9D/#copy-on-write","title":"Copy On Write","text":"<p>\u5176\u5b9e\u8fd9\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5bf9\u4e8e\u8bfb\u591a\u5199\u5c11\u7684\u573a\u666f\u7684\u4f18\u5316\u3002\u5728\u8ffd\u6c42\u6781\u81f4\u4f18\u5316\u7684\u5185\u6838\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u4f7f\u7528\u3002\u4f60\u770b\u5230 <code>rcu</code> \u5b57\u6837\u7684\u65f6\u5019\uff0c\u591a\u534a\u5c31\u662f copy on write\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2024/12/17/appimage-%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/","title":"AppImage \u521b\u5efa\u201c\u5feb\u6377\u65b9\u5f0f\u201d","text":"<p>AppImage\u662f\u5f88 Linux \u6d41\u884c\u7684\u5e94\u7528\u6253\u5305\u65b9\u5f0f\u3002\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u4ed6\u4f1a\u5c06\u81ea\u8eab\u89e3\u538b\u5230<code>/tmp/.mount_xxx</code>\u6587\u4ef6\u5939\u4e0b\u8fd0\u884c\u3002</p> <p>\u4f46\u662f\u4e0b\u8f7dAppImage\u4e4b\u540e\uff0c\u96be\u9053\u6bcf\u6b21\u4f7f\u7528\u90fd\u8981\u6253\u5f00\u4e0b\u8f7d\u76ee\u5f55\u7136\u540e\u8fd0\u884c\u5417\uff1f\u80fd\u4e0d\u80fd\u5728\u684c\u9762\uff0c\u6216\u8005\u83dc\u5355\uff0c\u6216\u8005\u547d\u4ee4\u884c\u76f4\u63a5\u6253\u5f00\u5462\uff1f</p> <p>\u60f3\u8981\u5728\u684c\u9762/\u83dc\u5355\u6253\u5f00\uff0c\u9700\u8981\u5728<code>~/Desktop</code>/<code>~/.local/share/applications</code>\u521b\u5efa\u4e00\u4e2aDesktop\u6587\u4ef6\u3002\u53ef\u4ee5\u4ece<code>/tmp/.mount_xxx</code>\u590d\u5236Desktop\u6587\u4ef6\uff0c\u7136\u540e\u4fee\u6539\u5176\u4e2d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u53caIcon\u8def\u5f84\u3002\u5fc5\u8981\u7684\u8bdd\u5c06Icon\u6587\u4ef6\u590d\u5236\u51fa\u6765\u3002</p> <p>\u60f3\u8981\u5728\u547d\u4ee4\u884c\u6253\u5f00\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8f6f\u94fe\u63a5\u5230<code>/usr/bin</code>\u6216\u8005\u5176\u4ed6PATH\u4e2d\u7684\u8def\u5f84\u3002</p> <pre><code>ln -s xxx.AppImage /usr/bin/xxx\n</code></pre>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/15/%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/","title":"\u6570\u636e\u67e5\u8be2\u8bed\u8a00","text":"<p>SQL \u662f\u4e00\u79cd \u58f0\u660e\u5f0f \u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u5bf9\u5173\u7cfb\u578b\u6570\u636e\u5e93\u8fdb\u884c\u6570\u636e\u68c0\u7d22\u3002</p> <p>CSS \u5176\u5b9e\u4e5f\u662f \u4e00\u79cd \u58f0\u660e\u5f0f \u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u4fee\u6539HTML\u7684\u6837\u5f0f\u3002\u7c7b\u4f3c\u4e0e CSS \u4e4b\u4e8e HTML\uff0cXSL \u4e5f\u53ef\u4ee5\u7528\u6765\u5bf9 XML \u8fdb\u884c\u68c0\u7d22\u3002</p> <p>\u5bf9\u4e8e\u4f7f\u7528\u8005\u6765\u8bf4\uff0cAPI \u4f1a\u6bd4\u547d\u4ee4\u5f0f\u7684\u66f4\u52a0\u7b80\u6d01\u5bb9\u6613\uff08\u60f3\u8c61\u4f7f\u7528Javascript\u4fee\u6539HTML\u7684\u6837\u5f0f\uff09\u3002\u5e76\u4e14\u5b83\u9690\u85cf\u4e86\u5f15\u64ce\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ef\u4ee5\u5728\u65e0\u9700\u5bf9\u67e5\u8be2\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6027\u80fd\u63d0\u5347\u3002\u6700\u540e\uff0c\u58f0\u660e\u5f0f\u8bed\u8a00\u5f80\u5f80\u9002\u5408\u5e76\u884c\u6267\u884c\u3002</p> <p>MapReduce \u662f\u4e00\u4e2a\u7531 Google \u63a8\u5e7f\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u7528\u4e8e\u5728\u591a\u53f0\u673a\u5668\u4e0a\u6279\u91cf\u5904\u7406\u5927\u89c4\u6a21\u7684\u6570\u636e</p>"},{"location":"%E9%9A%8F%E7%AC%94/2024/12/12/%E9%92%89%E9%92%89%E5%9C%A8%E9%83%A8%E5%88%86%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E9%93%BE%E6%8E%A5/","title":"\u9489\u9489\u5728\u90e8\u5206\u684c\u9762\u73af\u5883\u65e0\u6cd5\u6253\u5f00\u94fe\u63a5","text":"<p>\u6211\u7684\u684c\u9762\u73af\u5883\u662fLinux Mint\u3002\u9489\u9489\u7248\u672c7.6.25-Release.4112601\uff0c\u65e0\u6cd5\u901a\u8fc7\u70b9\u51fb\u6253\u5f00\u94fe\u63a5\uff08\u4e4b\u524d\u7248\u672c\u4e5f\u662f\uff09\u3002</p> <p>\u9489\u9489\u9ed8\u8ba4\u5b89\u88c5\u5728<code>/opt/apps/com.alibabainc.dingtalk/files/&lt;version&gt;/com.alibaba.dingtalk</code>\uff0c\u4f46\u662f\u4e00\u822c\u521b\u5efa\u7684\u5feb\u6377\u65b9\u5f0f\u662f\u8fd0\u884c\u4e0a\u7ea7\u76ee\u5f55\u7684<code>Elevator.sh</code>\uff0c\u4ed6\u91cc\u9762\u94fe\u63a5\u4e86\u4e00\u4e2a\u4fdd\u62a4\u7684\u52a8\u6001\u94fe\u63a5\u5e93<code>libcef.so</code>\uff08\u6211\u5e76\u4e0d\u77e5\u9053\u5177\u4f53\u662f\u5e72\u5565\u7684\uff09\uff0c\u5bfc\u81f4\u65e0\u6cd5\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00\u94fe\u63a5\u3002</p> <p>\u53ef\u4ee5\u4fee\u6539<code>Elevator.sh</code>\u7684\u8fd9\u4e00\u884c\uff0c\u5c06<code>true</code>\u6539\u6210<code>false</code>\u3002\u6216\u8005\u901a\u8fc7\u4fee\u6539\u5176\u4ed6\u5730\u65b9\u8ba9\u5b83\u4e0d\u8981\u88ab\u52a0\u8f7d\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>...\nis_enable_cef109=true\nif [ \"${is_enable_cef109}\" = \"true\" ]; then\n    if [ \"$os_machine\" = \"aarch64\" ]; then\n        if [ \"${libc_lower_29}\" = \"true\" ]; then\n            preload_libs=\"${preload_libs} ./libm-2.31.so \"\n        fi\n    fi\n    preload_libs=\"${preload_libs} ./plugins/dtwebview/libcef.so \"\nelse\nif [ \"$os_machine\" = \"mips64\" ]; then\n    echo mips64el branch\n    preload_libs=\"${preload_libs} ./plugins/dtwebview/libcef.so \"\nfi\nfi\n...\n</code></pre>","tags":["fix"]},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/%E8%AE%B0%E4%B8%80%E6%AC%A1slow-sql%E6%8E%92%E6%9F%A5/","title":"\u8bb0\u4e00\u6b21SLOW SQL\u6392\u67e5","text":"<p>\u6ca1\u6709\u4f7f\u7528ORM\u6846\u67b6\uff0c\u4e5f\u6ca1\u6709\u5bf9SQL\u7684\u6267\u884c\u65f6\u95f4\u8fdb\u884c\u7edf\u8ba1\uff0c\u53ea\u662f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u53d1\u73b0\u74f6\u9888\u8c8c\u4f3c\u51fa\u73b0\u5728\u4e86Postgresql\u6570\u636e\u5e93\uff0c\u4e8e\u662f\u5f00\u59cb\u5c1d\u8bd5\u6392\u67e5\u3002\u3002\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/%E8%AE%B0%E4%B8%80%E6%AC%A1slow-sql%E6%8E%92%E6%9F%A5/#session","title":"session","text":"<p>\u9996\u5148\u67e5\u770bsessions\u3002\u6211\u7528\u7684\u662f<code>dbeaver</code>\uff0c\u5982\u679c\u7528SQL\u8bed\u53e5\u7684\u8bdd\u4e5f\u53ef\u4ee5\uff1a</p> <pre><code>SELECT sa.* FROM pg_catalog.pg_stat_activity sa\n</code></pre> <p>\u91cd\u70b9\u5173\u6ce8<code>xact start</code>\u8bb0\u5f55\u7684\u5f53\u524d\u4e8b\u52a1\u5f00\u59cb\u65f6\u95f4\u548c<code>query start</code>\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u67e5\u8be2\u7684\u5f00\u59cb\u65f6\u95f4\u3002\u5982\u679c\u53d1\u73b0\u4ed6\u4eec<code>state=active</code>\u800c\u4e14\u4ed6\u4eec\u8f83\u65e9\uff0c\u8bf4\u660e\u4ed6\u4eec\u76f8\u5173\u7684SQL\u8bed\u53e5\u6267\u884c\u7684\u5f88\u6162\u3002</p> <p>\u66f4\u597d\u7684\u529e\u6cd5\u5e94\u8be5\u662f\u5728\u6267\u884cSQL\u8bed\u53e5\u7684\u65f6\u5019\u8fdb\u884c\u65f6\u95f4\u7edf\u8ba1\uff0c\u5e76LOG SLOW SQL\uff0c\u8fd9\u4e5f\u662f\u5f88\u591aORM\u6846\u67b6\u7684\u81ea\u5e26\u529f\u80fd\u3002\u7531\u4e8e\u7f3a\u4e4f\u7ecf\u9a8c\u6211\u6ca1\u6709\u505a\uff0c\u53ea\u80fd\u8fd9\u6837\u6392\u67e5\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/%E8%AE%B0%E4%B8%80%E6%AC%A1slow-sql%E6%8E%92%E6%9F%A5/#explain","title":"explain","text":"<p>\u6211\u627e\u5230\u4e86\u6267\u884c\u5f88\u6162\u7684SQL\uff0c\u4f46\u662f\u6211\u81ea\u8ba4\u4e3a\u4e3a\u4ed6\u4eec\u521b\u5efa\u4e86\u7d22\u5f15\uff0c\u4e0d\u5e94\u8be5\u5982\u6b64\u4e4b\u6162\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u7528<code>explain</code>\u6765\u770b\u81ea\u5df1\u7684\u7d22\u5f15\u5230\u5e95\u6709\u6ca1\u6709\u771f\u6b63\u8d77\u4f5c\u7528\u3002<code>analyze</code>\u9009\u9879\u8868\u793a\u771f\u6b63\u6267\u884c\u8fd9\u6761SQL\u8bed\u53e5\u3002</p> <pre><code>explain analyze  SELECT \"from\", amount, number\n    FROM cashflow\n    WHERE \"to\" = $1 AND is_fund = true\n    ORDER BY number ASC LIMIT 1\n</code></pre> <p>\u8fd9\u662f<code>explain analyze</code>\u7684\u7ed3\u679c\uff1a</p> <pre><code>Limit  (cost=1654659.38..1654659.50 rows=1 width=59) (actual time=154302.162..154654.812 rows=0 loops=1)\n  -&gt;  Gather Merge  (cost=1654659.38..1654669.42 rows=86 width=59) (actual time=154045.564..154398.214 rows=0 loops=1)\n        Workers Planned: 2\n        Workers Launched: 2\n        -&gt;  Sort  (cost=1653659.36..1653659.47 rows=43 width=59) (actual time=153242.010..153242.104 rows=0 loops=3)\n              Sort Key: number\n              Sort Method: quicksort  Memory: 25kB\n              Worker 0:  Sort Method: quicksort  Memory: 25kB\n              Worker 1:  Sort Method: quicksort  Memory: 25kB\n              -&gt;  Parallel Seq Scan on cashflow  (cost=0.00..1653659.15 rows=43 width=59) (actual time=153238.328..153238.422 rows=0 loops=3)\n                    Filter: (is_fund AND ((\"to\")::text = '0x42be8d8f46f1eeae232f684878bc5506af962637'::text))\n                    Rows Removed by Filter: 19661737\nPlanning Time: 1.949 ms\nJIT:\n  Functions: 13\n  Options: Inlining true, Optimization true, Expressions true, Deforming true\n  Timing: Generation 73.339 ms (Deform 6.503 ms), Inlining 369.544 ms, Optimization 114.942 ms, Emission 130.445 ms, Total 688.269 ms\nExecution Time: 154701.653 ms\n</code></pre> <p>\u5176\u4e2d\u7684<code>cost=start_time..end_time</code>\u8868\u793a\u64cd\u4f5c\u5f00\u59cb\u7684\u4ee3\u4ef7\u548c\u64cd\u4f5c\u5b8c\u6210\u7684\u603b\u4ee3\u4ef7\u3002\u64cd\u4f5c\u5f00\u59cb\u7684\u4ee3\u4ef7\u770b\u8d77\u6765\u6709\u4e9b\u5947\u602a\uff0c\u5b83\u8868\u793a\u64cd\u4f5c\u53ef\u4ee5\u5f00\u59cb\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u9884\u8ba1\u8981\u82b1\u8d39\u7684\u4ee3\u4ef7\u3002\u5bf9\u4e8e\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5982\u6392\u5e8f\u6216\u805a\u96c6\uff0c\u6570\u636e\u5e93\u9700\u8981\u8bfb\u5165\u6240\u6709\u76f8\u5173\u6570\u636e\u5e76\u8fdb\u884c\u5904\u7406\u624d\u80fd\u4ea7\u751f\u7b2c\u4e00\u884c\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a \"\u5f00\u59cb\u4ee3\u4ef7\" \u5305\u62ec\u4e86\u8bfb\u53d6\u548c\u5904\u7406\u6570\u636e\u76f4\u5230\u7b2c\u4e00\u884c\u7ed3\u679c\u51c6\u5907\u5c31\u7eea\u6240\u9700\u7684\u9884\u8ba1\u4ee3\u4ef7\u3002\u53ef\u4ee5\u770b\u5230\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u6bcf\u4e00\u6b65\u7684\u603b\u4ee3\u4ef7\u90fd\u662f\u5341\u5206\u9ad8\u6602\u7684\u3002</p> <p>cost\u7684\u5355\u4f4d\u5e76\u4e0d\u662f\u65f6\u95f4\uff0c\u800c\u662f\u5bf9\u8d44\u6e90\u6210\u672c\u7684\u62bd\u8c61\u7edf\u8ba1\u3002\u5177\u4f53\u53ef\u4ee5\u770bPostgreSQL: Documentation: 17: 19.7.\u00a0Query Planning\u3002\u771f\u6b63\u7684\u65f6\u95f4\u9700\u8981\u6dfb\u52a0<code>analyze</code>\u771f\u6b63\u6267\u884c\u540e\u7edf\u8ba1\u3002</p> <p>\u8fd9\u662f\u6211\u4e3a<code>to, is_fund, number</code>\u6dfb\u52a0\u7d22\u5f15\u540e\u7684<code>explain analyze</code>\u7ed3\u679c\u3002\u53ef\u4ee5\u770b\u5230\u4ed6\u7528\u4e0a\u4e86\u7d22\u5f15\uff0c\u6548\u7387\u5f88\u9ad8\u3002</p> <pre><code>Limit  (cost=0.56..4.62 rows=1 width=59) (actual time=1.888..1.888 rows=0 loops=1)\n  -&gt;  Index Scan using cashflow_fund_idx on cashflow  (cost=0.56..418.62 rows=103 width=59) (actual time=1.885..1.885 rows=0 loops=1)\n        Index Cond: (((\"to\")::text = '0x42be8d8f46f1eeae232f684878bc5506af962637'::text) AND (is_fund = true))\nPlanning Time: 355.678 ms\nExecution Time: 2.136 ms\n</code></pre>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/","title":"C++\u4e2d\u7684\u56db\u79cd\u591a\u6001\uff08\u7ffb\u8bd1\uff09","text":"<p>\u901a\u5e38\u8ba8\u8bbaC++\u7684\u591a\u6001\uff0c\u6307\u7684\u662f\u901a\u8fc7\u57fa\u7c7b\u6307\u9488/\u5f15\u7528\u6765\u4f7f\u7528\u5176\u6d3e\u751f\u7c7b\uff0c\u8fd9\u53eb\u505a\u5b50\u7c7b\u591a\u6001\uff08subtype polymorphism\uff09\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd8\u6709\u5176\u4ed6\u7684\u591a\u6001\uff0c\u4f8b\u5982\u53c2\u6570\u591a\u6001\uff08parametric polymorphism\uff09\uff0c\u7279\u8bbe\u591a\u6001\uff08ad-hoc polymorphism\uff0c\u6211\u7ffb\u8bd1\u7684\u53ef\u80fd\u4e0d\u592a\u597d\uff0c\u540e\u9762\u8fd8\u662f\u7528ad-hoc\u539f\u6587\uff09\uff0c\u5f3a\u5236\u591a\u6001\uff08coercion polymorphism\uff09\u3002</p> <p>\u8fd9\u4e9b\u591a\u6001\u5728C++\u4e2d\u8fd8\u6709\u5176\u4ed6\u540d\u5b57\uff1a</p> <ul> <li>\u5b50\u7c7b\u591a\u6001\u53c8\u79f0\u4e3a\u8fd0\u884c\u65f6\u591a\u6001\uff08runtime polymorphism\uff09\u3002</li> <li>\u53c2\u6570\u591a\u6001\u53c8\u79f0\u4e3a\u7f16\u8bd1\u671f\u591a\u6001\uff08compile-time polymorphism\uff09\u3002</li> <li>ad-hoc\u591a\u6001\u53c8\u79f0\u4e3a\u91cd\u8f7d\uff08overloading\uff09\u3002</li> <li>\u5f3a\u5236\u8f6c\u6362\u591a\u6001\u53c8\u79f0\u4e3a\u7c7b\u578b\u8f6c\u6362\uff08casting\uff09\u3002</li> </ul> <p>\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u901a\u8fc7C++\u8bed\u8a00\u7684\u793a\u4f8b\u6765\u9610\u8ff0\u6240\u6709\u7684\u591a\u6001\u6027\uff0c\u5e76\u4e14\u89e3\u91ca\u5b83\u4eec\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5404\u79cd\u4e0d\u540c\u7684\u540d\u79f0\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/#_1","title":"\u5b50\u7c7b\u591a\u6001\uff08\u8fd0\u884c\u65f6\u591a\u6001\uff09","text":"<p>\u5f53\u63d0\u5230C++\u7684\u591a\u6001\u65f6\uff0c\u9ed8\u8ba4\u6307\u7684\u662f\u5b50\u7c7b\u591a\u6001\u3002\u5b83\u6307\u7684\u662f\u901a\u8fc7\u57fa\u7c7b\u6307\u9488/\u5f15\u7528\u6765\u4f7f\u7528\u5176\u6d3e\u751f\u7c7b\u7684\u80fd\u529b\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u5047\u8bbe\u4f60\u6709\u5404\u79cd\u5404\u6837\u7684\u732b\u79d1\u52a8\u7269\uff08felid\uff09\u3002\u7531\u4e8e\u5b83\u4eec\u90fd\u662f\u732b\u79d1\u52a8\u7269\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u5e94\u8be5\u80fd\u591f\u55b5\u55b5\u53eb\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u8868\u793a\u4e3a\u7ee7\u627f\u81ea<code>Felid</code>\u57fa\u7c7b\u5e76\u8986\u76d6<code>meow</code>\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\uff0c</p> <pre><code>// file cats.h\n\nclass Felid {\npublic:\n virtual void meow() = 0;\n};\n\nclass Cat : public Felid {\npublic:\n void meow() { std::cout &lt;&lt; \"Meowing like a regular cat! meow!\\n\"; }\n};\n\nclass Tiger : public Felid {\npublic:\n void meow() { std::cout &lt;&lt; \"Meowing like a tiger! MREOWWW!\\n\"; }\n};\n\nclass Ocelot : public Felid {\npublic:\n void meow() { std::cout &lt;&lt; \"Meowing like an ocelot! mews!\\n\"; }\n};\n</code></pre> <p>\u73b0\u5728\u4e3b\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7<code>Felid</code>\uff08\u57fa\u7c7b\uff09\u6307\u9488\u6765\u8c03\u7528<code>Cat</code>, <code>Tiger</code> \u548c <code>Ocelot</code>\u7684\u65b9\u6cd5\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include \"cats.h\"\n\nvoid do_meowing(Felid *cat) {\n cat-&gt;meow();\n}\n\nint main() {\n Cat cat;\n Tiger tiger;\n Ocelot ocelot;\n\n do_meowing(&amp;cat);\n do_meowing(&amp;tiger);\n do_meowing(&amp;ocelot);\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u4e3b\u7a0b\u5e8f\u5c06\u6307\u5411<code>Cat</code>, <code>Tiger</code> \u548c <code>Ocelot</code>\u7684\u6307\u9488\u4f20\u9012\u7ed9\u4e00\u4e2a\u671f\u671b\u63a5\u6536\u6307\u5411<code>Felid</code>\u7684\u6307\u9488\u7684<code>do_meowing</code>\u51fd\u6570\u3002\u7531\u4e8e\u5b83\u4eec\u90fd\u662f<code>Felid</code>\u7684\u5b50\u7c7b\uff0c\u7a0b\u5e8f\u4f1a\u4e3a\u6bcf\u4e2a<code>Felid</code>\u8c03\u7528\u6b63\u786e\u7684<code>meow</code>\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>Meowing like a regular cat! meow!\nMeowing like a tiger! MREOWWW!\nMeowing like an ocelot! mews!\n</code></pre> <p>\u5b50\u7c7b\u591a\u6001\u4e5f\u88ab\u79f0\u4e3a\u8fd0\u884c\u65f6\u591a\u6001\uff0c\u8fd9\u4e2a\u540d\u79f0\u7684\u7531\u6765\u6709\u5f88\u5145\u5206\u7684\u7406\u7531\u3002\u591a\u6001\u51fd\u6570\u8c03\u7528\u7684\u89e3\u6790\u662f\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u8868\uff08virtual table\uff09\u7684\u95f4\u63a5\u5f15\u7528\u6765\u5b8c\u6210\u7684\u3002\u53e6\u4e00\u79cd\u89e3\u91ca\u662f\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5e76\u4e0d\u786e\u5b9a\u88ab\u8c03\u7528\u51fd\u6570\u7684\u5730\u5740\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u901a\u8fc7\u5728\u865a\u8868\u4e2d\u89e3\u5f15\u7528\u6b63\u786e\u7684\u6307\u9488\u6765\u8c03\u7528\u51fd\u6570\u3002</p> <p>\u5728\u7c7b\u578b\u7406\u8bba\u4e2d\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u5305\u542b\u591a\u6001\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/#_2","title":"\u53c2\u6570\u591a\u6001\uff08\u7f16\u8bd1\u671f\u591a\u6001\uff09","text":"<p>\u53c2\u6570\u591a\u6001\u6027\u63d0\u4f9b\u4e86\u4e00\u79cd\u5bf9\u4efb\u4f55\u7c7b\u578b\u6267\u884c\u76f8\u540c\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u5728C++\u4e2d\uff0c\u53c2\u6570\u591a\u6001\u6027\u662f\u901a\u8fc7\u6a21\u677f\u5b9e\u73b0\u7684\u3002\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u6cdb\u578b\u7684<code>max</code>\u51fd\u6570\uff0c\u5b83\u5bfb\u627e\u4e24\u4e2a\u53c2\u6570\u4e2d\u7684\u6700\u5927\u503c\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\ntemplate &lt;class T&gt;\nT max(T a, T b) {\n return a &gt; b ? a : b;\n}\n\nint main() {\n std::cout &lt;&lt; ::max(9, 5) &lt;&lt; std::endl;     // 9\n\n std::string foo(\"foo\"), bar(\"bar\");\n std::cout &lt;&lt; ::max(foo, bar) &lt;&lt; std::endl; // \"foo\"\n}\n</code></pre> <p>\u8fd9\u91cc\u7684<code>max</code>\u51fd\u6570\u5728\u7c7b\u578b<code>T</code>\u4e0a\u662f\u591a\u6001\u7684\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5b83\u4e0d\u9002\u7528\u4e8e\u6307\u9488\u7c7b\u578b\uff0c\u56e0\u4e3a\u6bd4\u8f83\u6307\u9488\u6bd4\u8f83\u7684\u662f\u5185\u5b58\u4f4d\u7f6e\u800c\u4e0d\u662f\u5185\u5bb9\u3002\u8981\u8ba9\u5b83\u4e3a\u6307\u9488\u5de5\u4f5c\uff0c\u4f60\u5fc5\u987b\u4e3a\u6307\u9488\u7c7b\u578b\u4e13\u95e8\u5316\u6a21\u677f\uff0c\u8fd9\u5c06\u4e0d\u518d\u662f\u53c2\u6570\u591a\u6001\uff0c\u800c\u662f\u7279\u6b8a\u591a\u6001\u3002</p> <p>\u7531\u4e8e\u53c2\u6570\u591a\u6001\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\uff0c\u56e0\u6b64\u4e5f\u79f0\u4e3a\u7f16\u8bd1\u65f6\u591a\u6001\u3002</p> <p>[!NOTE] \u5173\u4e8e\u6a21\u677f\uff0c\u66f4\u591a\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\u6a21\u677f\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/#ad-hoc","title":"ad-hoc\u591a\u6001\uff08\u91cd\u8f7d\uff09","text":"<p>ad-hoc\u591a\u6001\u5141\u8bb8\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\u5bf9\u6bcf\u79cd\u7c7b\u578b\u6709\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e24\u4e2a<code>int</code>\uff0c<code>+</code>\u5c06\u4ed6\u4eec\u76f8\u52a0\uff1b\u5bf9\u4e8e\u4e24\u4e2a<code>string</code>\uff0c<code>+</code>\u5c06\u4ed6\u4eec\u8fde\u63a5\u3002\u8fd9\u53eb\u505a\u91cd\u8f7d\u3002</p> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u4e3a<code>int</code>\u548c<code>string</code>\u5b9e\u73b0\u51fd\u6570<code>add</code>\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint add(int a, int b) {\n return a + b;\n}\n\nstd::string add(const char *a, const char *b) {\n std::string result(a);\n result += b;\n return result;\n}\n\nint main() {\n std::cout &lt;&lt; add(5, 9) &lt;&lt; std::endl;\n std::cout &lt;&lt; add(\"hello \", \"world\") &lt;&lt; std::endl;\n}\n</code></pre> <p>ad-hoc\u591a\u6001\u4e5f\u51fa\u73b0\u5728C++\u7684\u6a21\u677f\u7279\u5316\u4e2d\u3002\u8fd8\u662f\u4ee5\u4e0a\u9762\u7684<code>max</code>\u6a21\u677f\u4e3a\u4f8b\uff0c\u4ee5\u4e0b\u662f\u5982\u4f55\u4e3a\u4e24\u4e2a<code>char *</code>\u7f16\u5199<code>max</code></p> <pre><code>template &lt;&gt;\nconst char *max(const char *a, const char *b) {\n return strcmp(a, b) &gt; 0 ? a : b;\n}\n</code></pre> <p>\u73b0\u5728\u4f60\u53ef\u4ee5\u8c03\u7528<code>::max(\"foo\", \"bar\")</code>\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u201cfoo\u201d\u548c\u201cbar\u201d\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/#_3","title":"\u5f3a\u5236\u8f6c\u6362\u591a\u6001","text":"<p>\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6216\u57fa\u672c\u7c7b\u578b\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7c7b\u578b\u6216\u57fa\u672c\u7c7b\u578b\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u5f3a\u5236\u8f6c\u6362\u3002\u4f8b\u5982\uff1a</p> <pre><code>float b = 6; // int gets promoted (cast) to float implicitly\nint a = 9.99 // float gets demoted to int implicitly\n</code></pre> <p>\u5982\u679c\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u662f<code>explicit</code>\uff0c\u4e5f\u4f1a\u53d1\u751f\u5f3a\u5236\u8f6c\u6362\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass A {\n int foo;\npublic:\n A(int ffoo) : foo(ffoo) {}\n void giggidy() { std::cout &lt;&lt; foo &lt;&lt; std::endl; }\n};\n\nvoid moo(A a) {\n a.giggidy();\n}\n\nint main() {\n moo(55);     // prints 55\n}\n</code></pre> <p>\u5982\u679c\u4f60\u521b\u5efa\u4e86<code>explicit</code>\u4fee\u9970\u7684\u6784\u9020\u51fd\u6570\uff0c\u90a3\u5c31\u4e0d\u53ef\u80fd\u4e86\u3002\u63a8\u8350\u4f7f\u7528<code>explicit</code>\u4fee\u9970\u6784\u9020\u51fd\u6570\u4ee5\u907f\u514d\u610f\u5916\u8f6c\u6362\u3002</p> <p>\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u7c7b\u578b<code>T</code>\u7684\u8f6c\u6362\u64cd\u4f5c\u7b26\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55\u9700\u8981\u7c7b\u578b<code>T</code>\u7684\u5730\u65b9\u4f7f\u7528\u3002\u4f8b\u5982\uff1a</p> <pre><code>class CrazyInt {\n int v;\npublic:\n CrazyInt(int i) : v(i) {}\n operator int() const { return v; } // conversion from CrazyInt to int\n};\n</code></pre> <p><code>CrazyInt</code>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a<code>int</code>\u7684\u8f6c\u6362\u8fd0\u7b97\u7b26\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u6bd4\u5982\u8bf4\uff0c<code>print_int</code>\u63a5\u53d7<code>int</code>\u4f5c\u4e3a\u53c2\u6570\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5411\u5b83\u4f20\u9012\u4e00\u4e2a<code>CrazyInt</code>\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c</p> <pre><code>#include &lt;iostream&gt;\n\nvoid print_int(int a) {\n std::cout &lt;&lt; a &lt;&lt; std::endl;\n}\n\nint main() {\n CrazyInt b = 55;\n print_int(999);    // prints 999\n print_int(b);      // prints 55\n}\n</code></pre> <p>\u524d\u9762\u8ba8\u8bba\u7684\u5b50\u7c7b\u578b\u591a\u6001\u5b9e\u9645\u4e0a\u4e5f\u662f\u5f3a\u5236\u8f6c\u6362\u591a\u6001\uff0c\u56e0\u4e3a\u6d3e\u751f\u7c7b\u88ab\u8f6c\u6362\u4e3a\u57fa\u7c7b\u7c7b\u578b\u3002</p> <p>\u795d\u60a8\u5728\u5b66\u4e60\u8fd9\u4e9b\u5173\u4e8e\u591a\u6001\u6027\u7684\u65b0\u77e5\u8bc6\u65f6\u73a9\u5f97\u5f00\u5fc3\uff0c\u4e0b\u6b21\u518d\u89c1\uff01</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/07/c%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%A4%9A%E6%80%81%E7%BF%BB%E8%AF%91/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>\u539f\u6587\u94fe\u63a5\uff1aThe Four Polymorphisms in C++\u3002\u4f5c\u8005\u662f\u4e00\u4e2a\u5927\u4f6c\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/13/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/","title":"\u8fed\u4ee3\u5668\u5931\u6548\u95ee\u9898","text":"<p>\u5728\u770bleetcode\u9898\u89e3\u7684\u65f6\u5019\uff0c\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e00\u8fb9\u6301\u6709\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\uff0c\u4e00\u8fb9\u5bf9\u5bb9\u5668\u8fdb\u884c\u4fee\u6539\u3002\u5982\u4e0b\u4ee3\u7801\u7684<code>left</code>\u548c<code>right</code>\u53d8\u91cf\u3002</p> <pre><code>class MedianFinder {\n    multiset&lt;int&gt; nums;\n    multiset&lt;int&gt;::iterator left, right;\n\npublic:\n    MedianFinder() : left(nums.end()), right(nums.end()) {}\n\n    void addNum(int num) {\n        const size_t n = nums.size();\n\n        nums.insert(num);\n        if (!n) {\n            left = right = nums.begin();\n        } else if (n &amp; 1) {\n            if (num &lt; *left) {\n                left--;\n            } else {\n                right++;\n            }\n        } else {\n            if (num &gt; *left &amp;&amp; num &lt; *right) {\n                left++;\n                right--;\n            } else if (num &gt;= *right) {\n                left++;\n            } else {\n                right--;\n                left = right;\n            }\n        }\n    }\n\n    double findMedian() {\n        return (*left + *right) / 2.0;\n    }\n};\n</code></pre> <p>\u4e8b\u5b9e\u4e0a\u8fd9\u548c<code>multiset</code>\u7684\u5e95\u5c42\u5b9e\u73b0\u76f8\u5173\u3002<code>mutliset</code>\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c\u8282\u70b9\u4e4b\u95f4\u7528\u6307\u9488\u8fde\u63a5\uff0c\u63d2\u5165\u65b0\u7684\u5143\u7d20\u4e0d\u4f1a\u5bfc\u81f4\u539f\u5148\u8282\u70b9\u7684\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u3002\u6240\u4ee5\u4ee3\u7801\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002\u800c<code>vector</code>\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\u5c31\u4e0d\u4e00\u5b9a\u4e86\uff0c\u56e0\u4e3a\u5b83\u5728\u63d2\u5165\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u6269\u5bb9\uff0c\u6539\u53d8\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/13/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/#_2","title":"\u6df1\u5165\u63a2\u7a76","text":"<p><code>map</code>/<code>set</code>/<code>multimap</code>/<code>multiset</code>\u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c<code>list</code>\u662f\u94fe\u8868\u3002\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e9b\u5bb9\u5668\u6765\u8bf4\uff0c\u63d2\u5165<code>insert</code>\u65b0\u7684\u5143\u7d20\u4e0d\u4f1a\u5bfc\u81f4\u539f\u5148\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u800c\u5220\u9664<code>erase</code>\u4e00\u4e2a\u5143\u7d20\u4f1a\u5bfc\u81f4\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002</p> <p><code>vector</code>/<code>string</code> \u5728\u63d2\u5165<code>insert</code>\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fdb\u884c\u4e86\u6269\u5bb9\u4f1a\u5bfc\u81f4\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\uff1b\u6ca1\u6709\u6269\u5bb9\u7531\u4e8e\u9700\u8981\u5c06\u540e\u9762\u7684\u5143\u7d20\u6574\u4f53\u5411\u540e\u79fb\u52a8\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u63d2\u5165\u5143\u7d20\u540e\u9762\u7684\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002\u5220\u9664<code>erase</code>\u5143\u7d20\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u9700\u8981\u5c06\u540e\u9762\u7684\u5143\u7d20\u6574\u4f53\u5411\u524d\u79fb\u52a8\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5220\u9664\u5143\u7d20\u540e\u9762\u7684\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002</p> <p>\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u53c2\u8003Stackoverflow\uff0c\u53c2\u8003\u94fe\u63a52\u3002\u539f\u7406\u5927\u540c\u5c0f\u5f02\u3002</p> <p>[!NOTE] \u7c7b\u6bd4\u4e8eRust\uff0c\u662f\u4e0d\u4f1a\u8ba9\u4f60\u540c\u65f6\u6301\u6709\u5bf9\u4e00\u4e2a\u5bb9\u5668\u7684\u591a\u4e2a\u53ef\u53d8\u5f15\u7528\u7684\u3002\u4fdd\u8bc1\u4e86\u5b89\u5168\u7684\u540c\u65f6\uff0c\u6781\u5927\u7684\u51cf\u8f7b\u4e86\u7f16\u7a0b\u8005\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u4ee3\u4ef7\u5219\u662f\u7075\u6d3b\u6027\u7684\u4e27\u5931\u3002\u5b70\u4f18\u5b70\u52a3\u6ca1\u6709\u7b54\u6848\u3002</p>"},{"location":"%E9%9A%8F%E7%AC%94/2025/01/13/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u5173\u4e8eC++ \u8fed\u4ee3\u5668\u5931\u6548\u7279\u6027\u7684\u7814\u7a76 \u2013 \u5947\u5b89\u4fe1\u6280\u672f\u7814\u7a76\u9662</li> <li>Iterator invalidation rules for C++ containers - Stack Overflow</li> </ol>"},{"location":"%E9%9A%8F%E7%AC%94/archive/2025/","title":"2025","text":""},{"location":"%E9%9A%8F%E7%AC%94/archive/2024/","title":"2024","text":""}]}